

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 07 22:14:00 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 1.40
    68                           ; Generated 01/12/2016 GMT
    69                           ; 
    70                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F887 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001B                     	;# 
   131  001B                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001E                     	;# 
   135  001F                     	;# 
   136  0081                     	;# 
   137  0085                     	;# 
   138  0086                     	;# 
   139  0087                     	;# 
   140  0088                     	;# 
   141  0089                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0091                     	;# 
   148  0092                     	;# 
   149  0093                     	;# 
   150  0093                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  0105                     	;# 
   165  0107                     	;# 
   166  0108                     	;# 
   167  0109                     	;# 
   168  010C                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  0185                     	;# 
   174  0187                     	;# 
   175  0188                     	;# 
   176  0189                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  008F                     	;# 
   224  0090                     	;# 
   225  0091                     	;# 
   226  0092                     	;# 
   227  0093                     	;# 
   228  0093                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  0105                     	;# 
   243  0107                     	;# 
   244  0108                     	;# 
   245  0109                     	;# 
   246  010C                     	;# 
   247  010C                     	;# 
   248  010D                     	;# 
   249  010E                     	;# 
   250  010F                     	;# 
   251  0185                     	;# 
   252  0187                     	;# 
   253  0188                     	;# 
   254  0189                     	;# 
   255  018C                     	;# 
   256  018D                     	;# 
   257  0000                     	;# 
   258  0001                     	;# 
   259  0002                     	;# 
   260  0003                     	;# 
   261  0004                     	;# 
   262  0005                     	;# 
   263  0006                     	;# 
   264  0007                     	;# 
   265  0008                     	;# 
   266  0009                     	;# 
   267  000A                     	;# 
   268  000B                     	;# 
   269  000C                     	;# 
   270  000D                     	;# 
   271  000E                     	;# 
   272  000E                     	;# 
   273  000F                     	;# 
   274  0010                     	;# 
   275  0011                     	;# 
   276  0012                     	;# 
   277  0013                     	;# 
   278  0014                     	;# 
   279  0015                     	;# 
   280  0015                     	;# 
   281  0016                     	;# 
   282  0017                     	;# 
   283  0018                     	;# 
   284  0019                     	;# 
   285  001A                     	;# 
   286  001B                     	;# 
   287  001B                     	;# 
   288  001C                     	;# 
   289  001D                     	;# 
   290  001E                     	;# 
   291  001F                     	;# 
   292  0081                     	;# 
   293  0085                     	;# 
   294  0086                     	;# 
   295  0087                     	;# 
   296  0088                     	;# 
   297  0089                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  008E                     	;# 
   301  008F                     	;# 
   302  0090                     	;# 
   303  0091                     	;# 
   304  0092                     	;# 
   305  0093                     	;# 
   306  0093                     	;# 
   307  0093                     	;# 
   308  0094                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  0105                     	;# 
   321  0107                     	;# 
   322  0108                     	;# 
   323  0109                     	;# 
   324  010C                     	;# 
   325  010C                     	;# 
   326  010D                     	;# 
   327  010E                     	;# 
   328  010F                     	;# 
   329  0185                     	;# 
   330  0187                     	;# 
   331  0188                     	;# 
   332  0189                     	;# 
   333  018C                     	;# 
   334  018D                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  000E                     	;# 
   351  000F                     	;# 
   352  0010                     	;# 
   353  0011                     	;# 
   354  0012                     	;# 
   355  0013                     	;# 
   356  0014                     	;# 
   357  0015                     	;# 
   358  0015                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001B                     	;# 
   366  001C                     	;# 
   367  001D                     	;# 
   368  001E                     	;# 
   369  001F                     	;# 
   370  0081                     	;# 
   371  0085                     	;# 
   372  0086                     	;# 
   373  0087                     	;# 
   374  0088                     	;# 
   375  0089                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  0105                     	;# 
   399  0107                     	;# 
   400  0108                     	;# 
   401  0109                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0187                     	;# 
   409  0188                     	;# 
   410  0189                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413                           
   414                           	psect	idataBANK0
   415  097F                     __pidataBANK0:	
   416                           
   417                           ;initializer for _intNumberOfBlinks
   418  097F  3458               	retlw	88
   419  0980  3402               	retlw	2
   420                           
   421                           ;initializer for _bValueFromPot
   422  0981  3401               	retlw	1
   423                           
   424                           	psect	strings
   425  0800                     __pstrings:	
   426  0800                     stringtab:	
   427  0800                     __stringtab:	
   428  0800                     stringcode:	
   429                           ;	String table - string pointers are 1 byte each
   430                           
   431  0800                     stringdir:	
   432  0800  3008               	movlw	high stringdir
   433  0801  008A               	movwf	10
   434  0802  0804               	movf	4,w
   435  0803  0A84               	incf	4,f
   436  0804  0782               	addwf	2,f
   437  0805                     __stringbase:	
   438  0805  3400               	retlw	0
   439  0806                     __end_of__stringtab:	
   440  0806                     _ChannelP:	
   441  0806  343F               	retlw	63
   442  0807  3447               	retlw	71
   443  0808  344F               	retlw	79
   444  0809  3457               	retlw	87
   445  080A  345F               	retlw	95
   446  080B  3477               	retlw	119
   447  080C  347E               	retlw	126
   448  080D  347F               	retlw	127
   449  080E  3486               	retlw	134
   450  080F  3487               	retlw	135
   451  0810  3437               	retlw	55
   452  0811  3467               	retlw	103
   453  0812  346F               	retlw	111
   454  0813                     __end_of_ChannelP:	
   455  0813                     _ChannelR:	
   456  0813  344F               	retlw	79
   457  0814  3459               	retlw	89
   458  0815  3463               	retlw	99
   459  0816  346D               	retlw	109
   460  0817  3477               	retlw	119
   461  0818  3495               	retlw	149
   462  0819  349F               	retlw	159
   463  081A  349F               	retlw	159
   464  081B  34A9               	retlw	169
   465  081C  34A9               	retlw	169
   466  081D  3445               	retlw	69
   467  081E  3481               	retlw	129
   468  081F  348B               	retlw	139
   469  0820                     __end_of_ChannelR:	
   470  0820                     _ChannelS:	
   471  0820  3418               	retlw	24
   472  0821  341B               	retlw	27
   473  0822  341E               	retlw	30
   474  0823  3421               	retlw	33
   475  0824  3424               	retlw	36
   476  0825  342D               	retlw	45
   477  0826  347B               	retlw	123
   478  0827  3430               	retlw	48
   479  0828  347E               	retlw	126
   480  0829  3433               	retlw	51
   481  082A  3415               	retlw	21
   482  082B  3427               	retlw	39
   483  082C  342A               	retlw	42
   484  082D                     __end_of_ChannelS:	
   485  001F                     _ADCON0bits	set	31
   486  001E                     _ADRESH	set	30
   487  000B                     _INTCONbits	set	11
   488  000C                     _PIR1bits	set	12
   489  0005                     _PORTA	set	5
   490  0006                     _PORTB	set	6
   491  0007                     _PORTC	set	7
   492  0008                     _PORTD	set	8
   493  0009                     _PORTE	set	9
   494  0013                     _SSPBUF	set	19
   495  0014                     _SSPCONbits	set	20
   496  0010                     _T1CON	set	16
   497  0010                     _T1CONbits	set	16
   498  000F                     _TMR1H	set	15
   499  000E                     _TMR1L	set	14
   500  0018                     _CARRY	set	24
   501  005F                     _GIE	set	95
   502  0029                     _RA1	set	41
   503  002C                     _RA4	set	44
   504  002D                     _RA5	set	45
   505  0030                     _RB0	set	48
   506  0031                     _RB1	set	49
   507  0033                     _RB3	set	51
   508  0034                     _RB4	set	52
   509  0035                     _RB5	set	53
   510  0058                     _RBIF	set	88
   511  0038                     _RC0	set	56
   512  0039                     _RC1	set	57
   513  003A                     _RC2	set	58
   514  0043                     _RD3	set	67
   515  0044                     _RD4	set	68
   516  0060                     _TMR1IF	set	96
   517  0080                     _TMR1ON	set	128
   518  009F                     _ADCON1bits	set	159
   519  0096                     _IOCBbits	set	150
   520  0081                     _OPTION_REGbits	set	129
   521  008F                     _OSCCONbits	set	143
   522  008C                     _PIE1bits	set	140
   523  0094                     _SSPSTATbits	set	148
   524  0085                     _TRISA	set	133
   525  0086                     _TRISB	set	134
   526  0087                     _TRISC	set	135
   527  0088                     _TRISD	set	136
   528  0089                     _TRISE	set	137
   529  0095                     _WPUBbits	set	149
   530  0463                     _SSPIE	set	1123
   531  010D                     _EEADR	set	269
   532  010C                     _EEDATA	set	268
   533  0188                     _ANSEL	set	392
   534  0189                     _ANSELH	set	393
   535  0189                     _ANSELHbits	set	393
   536  0188                     _ANSELbits	set	392
   537  018C                     _EECON1	set	396
   538  018D                     _EECON2	set	397
   539  0C60                     _RD	set	3168
   540  0C61                     _WR	set	3169
   541  0C62                     _WREN	set	3170
   542                           
   543                           ; #config settings
   544  0000                     
   545                           	psect	cinit
   546  0015                     start_initialization:	
   547  0015                     __initialization:	
   548                           
   549                           ; Initialize objects allocated to BANK0
   550  0015  120A  158A  217F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   551  001A  00DB               	movwf	__pdataBANK0& (0+127)
   552  001B  120A  158A  2180  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   553  0020  00DC               	movwf	(__pdataBANK0+1)& (0+127)
   554  0021  120A  158A  2181  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   555  0026  00DD               	movwf	(__pdataBANK0+2)& (0+127)
   556                           
   557                           ; Clear objects allocated to BANK3
   558  0027  1783               	bsf	3,7	;select IRP bank2
   559  0028  3090               	movlw	low __pbssBANK3
   560  0029  0084               	movwf	4
   561  002A  30B8               	movlw	low (__pbssBANK3+40)
   562  002B  120A  158A  2196  120A  118A  	fcall	clear_ram0
   563                           
   564                           ; Clear objects allocated to BANK1
   565  0030  1383               	bcf	3,7	;select IRP bank0
   566  0031  30D0               	movlw	low __pbssBANK1
   567  0032  0084               	movwf	4
   568  0033  30DB               	movlw	low (__pbssBANK1+11)
   569  0034  120A  158A  2196  120A  118A  	fcall	clear_ram0
   570                           
   571                           ; Clear objects allocated to BANK0
   572  0039  3046               	movlw	low __pbssBANK0
   573  003A  0084               	movwf	4
   574  003B  305B               	movlw	low (__pbssBANK0+21)
   575  003C  120A  158A  2196   	fcall	clear_ram0
   576  003F                     end_of_initialization:	
   577                           ;End of C runtime variable initialization code
   578                           
   579  003F                     __end_of__initialization:	
   580  003F  0183               	clrf	3
   581  0040  120A  118A  2B3C   	ljmp	_main	;jump to C main() function
   582                           
   583                           	psect	bssBANK0
   584  0046                     __pbssBANK0:	
   585  0046                     _bTimerComplete:	
   586  0046                     	ds	5
   587  004B                     _channelFound:	
   588  004B                     	ds	2
   589  004D                     _intBlinkCounter:	
   590  004D                     	ds	2
   591  004F                     _intBlinkCycle:	
   592  004F                     	ds	2
   593  0051                     _intDarkCheckIntervall:	
   594  0051                     	ds	2
   595  0053                     _intHalfSecondCounter:	
   596  0053                     	ds	2
   597  0055                     _intMinuteCounter:	
   598  0055                     	ds	2
   599  0057                     _intSecondCounter:	
   600  0057                     	ds	2
   601  0059                     _bChannelFound:	
   602  0059                     	ds	1
   603  005A                     _bDark:	
   604  005A                     	ds	1
   605                           
   606                           	psect	dataBANK0
   607  005B                     __pdataBANK0:	
   608  005B                     _intNumberOfBlinks:	
   609  005B                     	ds	2
   610  005D                     _bValueFromPot:	
   611  005D                     	ds	1
   612                           
   613                           	psect	bssBANK1
   614  00D0                     __pbssBANK1:	
   615  00D0                     _intClockTimer:	
   616  00D0                     	ds	10
   617  00DA                     _bTransiverModeReceive:	
   618  00DA                     	ds	1
   619                           
   620                           	psect	bssBANK3
   621  0190                     __pbssBANK3:	
   622  0190                     _ReceivedData:	
   623  0190                     	ds	40
   624                           
   625                           	psect	clrtext
   626  0996                     clear_ram0:	
   627                           ;	Called with FSR containing the base address, and
   628                           ;	W with the last address+1
   629                           
   630  0996  0064               	clrwdt	;clear the watchdog before getting into this loop
   631  0997                     clrloop0:	
   632  0997  0180               	clrf	0	;clear RAM location pointed to by FSR
   633  0998  0A84               	incf	4,f	;increment pointer
   634  0999  0604               	xorwf	4,w	;XOR with final address
   635  099A  1903               	btfsc	3,2	;have we reached the end yet?
   636  099B  3400               	retlw	0	;all done for this memory range, return
   637  099C  0604               	xorwf	4,w	;XOR again to restore value
   638  099D  2997               	goto	clrloop0	;do the next byte
   639                           
   640                           	psect	cstackBANK1
   641  00A0                     __pcstackBANK1:	
   642  00A0                     FindChannel@cnt:	
   643                           
   644                           ; 2 bytes @ 0x0
   645  00A0                     	ds	2
   646  00A2                     FindChannel@i:	
   647                           
   648                           ; 2 bytes @ 0x2
   649  00A2                     	ds	2
   650  00A4                     TransmittPacket@i:	
   651                           
   652                           ; 2 bytes @ 0x4
   653  00A4                     	ds	2
   654  00A6                     TransmittPacket@topic:	
   655                           
   656                           ; 1 bytes @ 0x6
   657  00A6                     	ds	1
   658  00A7                     ??_Mode_5:	
   659  00A7                     ??_ReceivedPacketHandler:	
   660                           ; 1 bytes @ 0x7
   661                           
   662                           
   663                           ; 1 bytes @ 0x7
   664  00A7                     	ds	1
   665  00A8                     ReceivedPacketHandler@Data:	
   666                           
   667                           ; 1 bytes @ 0x8
   668  00A8                     	ds	1
   669  00A9                     ??_TransiverReadFIFO:	
   670                           
   671                           ; 1 bytes @ 0x9
   672  00A9                     	ds	2
   673  00AB                     TransiverReadFIFO@ReceivedString:	
   674                           
   675                           ; 30 bytes @ 0xB
   676  00AB                     	ds	30
   677  00C9                     TransiverReadFIFO@i:	
   678                           
   679                           ; 2 bytes @ 0x29
   680  00C9                     	ds	2
   681  00CB                     TransiverReadFIFO@j:	
   682                           
   683                           ; 2 bytes @ 0x2B
   684  00CB                     	ds	2
   685  00CD                     ??_main:	
   686                           
   687                           ; 1 bytes @ 0x2D
   688  00CD                     	ds	3
   689                           
   690                           	psect	cstackCOMMON
   691  0070                     __pcstackCOMMON:	
   692  0070                     ?_PICInit:	
   693  0070                     ?_TransiverInit:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ClockInit:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_AnalogValue:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_OperationMode:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_Mode_0:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Mode_1:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Mode_2:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_Mode_4:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Mode_5:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_TransiverToReceive:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_TransiverReadFIFO:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_SetRFMode:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_RegisterRead:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_FindChannel:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_ReadFIFO:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_ReceivedPacketHandler:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_eeprom_read:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_DarknessCheck:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_write_ram_status:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_read_ram_status:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_ram_bulk_erase:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_ResetMemoryAdress:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_SendMemoryData:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_WriteFIFO:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_LightWithSensController:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_saveDataToFlash:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_TimerCounter:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ??_TimerCounter:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_WriteSPI:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_ReadSPI:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_tc_int:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_IncreaseMemoryAdress:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?i1_DelayDs:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?i1_WriteSPI:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ??i1_WriteSPI:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?i1_ReadSPI:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?i1_AnalogValue:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?i1_OperationMode:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ??i1_OperationMode:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?i1_read_ram_status:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?i1_eeprom_read:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ??i1_eeprom_read:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?i1_eeprom_write:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_main:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     i1eeprom_write@value:	
   826                           ; 2 bytes @ 0x0
   827                           
   828  0070                     i1DelayDs@cnt:	
   829                           ; 1 bytes @ 0x0
   830                           
   831                           
   832                           ; 2 bytes @ 0x0
   833  0070                     	ds	1
   834  0071                     ??i1_eeprom_write:	
   835  0071                     i1WriteSPI@buffer:	
   836                           ; 1 bytes @ 0x1
   837                           
   838  0071                     i1OperationMode@bracketStatus:	
   839                           ; 1 bytes @ 0x1
   840                           
   841  0071                     i1eeprom_read@addr:	
   842                           ; 1 bytes @ 0x1
   843                           
   844                           
   845                           ; 1 bytes @ 0x1
   846  0071                     	ds	1
   847  0072                     ?_ReadMemoryAdress:	
   848  0072                     ??i1_DelayDs:	
   849                           ; 1 bytes @ 0x2
   850                           
   851  0072                     ReadMemoryAdress@var2:	
   852                           ; 1 bytes @ 0x2
   853                           
   854  0072                     i1WriteSPI@databyte:	
   855                           ; 1 bytes @ 0x2
   856                           
   857  0072                     i1eeprom_write@addr:	
   858                           ; 1 bytes @ 0x2
   859                           
   860                           
   861                           ; 1 bytes @ 0x2
   862  0072                     	ds	1
   863  0073                     ??_IncreaseMemoryAdress:	
   864  0073                     ??i1_ReadSPI:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     ??i1_read_ram_status:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     ReadMemoryAdress@var1:	
   871                           ; 1 bytes @ 0x3
   872                           
   873  0073                     TimerCounter@i:	
   874                           ; 1 bytes @ 0x3
   875                           
   876                           
   877                           ; 2 bytes @ 0x3
   878  0073                     	ds	1
   879  0074                     ??_ReadMemoryAdress:	
   880  0074                     IncreaseMemoryAdress@var1:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0074                     i1read_ram_status@status:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     i1DelayDs@i:	
   887                           ; 1 bytes @ 0x4
   888                           
   889                           
   890                           ; 2 bytes @ 0x4
   891  0074                     	ds	1
   892  0075                     ?_read_write_flash_ram:	
   893  0075                     ReadMemoryAdress@var3:	
   894                           ; 1 bytes @ 0x5
   895                           
   896  0075                     IncreaseMemoryAdress@var2:	
   897                           ; 1 bytes @ 0x5
   898                           
   899  0075                     read_write_flash_ram@bytes_to_readwrite:	
   900                           ; 1 bytes @ 0x5
   901                           
   902                           
   903                           ; 2 bytes @ 0x5
   904  0075                     	ds	1
   905  0076                     ??i1_AnalogValue:	
   906  0076                     IncreaseMemoryAdress@var3:	
   907                           ; 1 bytes @ 0x6
   908                           
   909                           
   910                           ; 1 bytes @ 0x6
   911  0076                     	ds	1
   912  0077                     read_write_flash_ram@flash_sector:	
   913  0077                     i1AnalogValue@channel:	
   914                           ; 1 bytes @ 0x7
   915                           
   916                           
   917                           ; 1 bytes @ 0x7
   918  0077                     	ds	1
   919  0078                     read_write_flash_ram@flash_page:	
   920                           
   921                           ; 1 bytes @ 0x8
   922  0078                     	ds	1
   923  0079                     read_write_flash_ram@offset:	
   924                           
   925                           ; 1 bytes @ 0x9
   926  0079                     	ds	1
   927  007A                     read_write_flash_ram@mem_ptr:	
   928                           
   929                           ; 1 bytes @ 0xA
   930  007A                     	ds	1
   931  007B                     ??_read_write_flash_ram:	
   932                           
   933                           ; 1 bytes @ 0xB
   934  007B                     	ds	2
   935                           
   936                           	psect	cstackBANK0
   937  0020                     __pcstackBANK0:	
   938  0020                     read_write_flash_ram@one_read_zero_write:	
   939                           
   940                           ; 1 bytes @ 0x0
   941  0020                     	ds	1
   942  0021                     read_write_flash_ram@i:	
   943                           
   944                           ; 2 bytes @ 0x1
   945  0021                     	ds	2
   946  0023                     ??_saveDataToFlash:	
   947                           
   948                           ; 1 bytes @ 0x3
   949  0023                     	ds	4
   950  0027                     saveDataToFlash@value:	
   951                           
   952                           ; 1 bytes @ 0x7
   953  0027                     	ds	1
   954  0028                     saveDataToFlash@addr1:	
   955                           
   956                           ; 1 bytes @ 0x8
   957  0028                     	ds	1
   958  0029                     saveDataToFlash@addr2:	
   959                           
   960                           ; 1 bytes @ 0x9
   961  0029                     	ds	1
   962  002A                     saveDataToFlash@addr3:	
   963                           
   964                           ; 1 bytes @ 0xA
   965  002A                     	ds	1
   966  002B                     ??_tc_int:	
   967                           
   968                           ; 1 bytes @ 0xB
   969  002B                     	ds	7
   970  0032                     ??_PICInit:	
   971  0032                     ??_OperationMode:	
   972                           ; 1 bytes @ 0x12
   973                           
   974  0032                     ?_timerFunction:	
   975                           ; 1 bytes @ 0x12
   976                           
   977  0032                     ?_DelayDs:	
   978                           ; 1 bytes @ 0x12
   979                           
   980  0032                     ??_eeprom_read:	
   981                           ; 1 bytes @ 0x12
   982                           
   983  0032                     ??_SendMemoryData:	
   984                           ; 1 bytes @ 0x12
   985                           
   986  0032                     ?_eeprom_write:	
   987                           ; 1 bytes @ 0x12
   988                           
   989  0032                     ??_WriteSPI:	
   990                           ; 1 bytes @ 0x12
   991                           
   992  0032                     eeprom_write@value:	
   993                           ; 1 bytes @ 0x12
   994                           
   995  0032                     timerFunction@intTimerNumber:	
   996                           ; 1 bytes @ 0x12
   997                           
   998  0032                     DelayDs@cnt:	
   999                           ; 2 bytes @ 0x12
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x12
  1003  0032                     	ds	1
  1004  0033                     ??_eeprom_write:	
  1005  0033                     WriteSPI@buffer:	
  1006                           ; 1 bytes @ 0x13
  1007                           
  1008  0033                     OperationMode@bracketStatus:	
  1009                           ; 1 bytes @ 0x13
  1010                           
  1011  0033                     eeprom_read@addr:	
  1012                           ; 1 bytes @ 0x13
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x13
  1016  0033                     	ds	1
  1017  0034                     ??_DelayDs:	
  1018  0034                     WriteSPI@databyte:	
  1019                           ; 1 bytes @ 0x14
  1020                           
  1021  0034                     eeprom_write@addr:	
  1022                           ; 1 bytes @ 0x14
  1023                           
  1024  0034                     timerFunction@intSetSeconds:	
  1025                           ; 1 bytes @ 0x14
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x14
  1029  0034                     	ds	1
  1030  0035                     ??_ClockInit:	
  1031  0035                     ??_RegisterRead:	
  1032                           ; 1 bytes @ 0x15
  1033                           
  1034  0035                     ??_ReadFIFO:	
  1035                           ; 1 bytes @ 0x15
  1036                           
  1037  0035                     ??_read_ram_status:	
  1038                           ; 1 bytes @ 0x15
  1039                           
  1040  0035                     ??_ResetMemoryAdress:	
  1041                           ; 1 bytes @ 0x15
  1042                           
  1043  0035                     ??_WriteFIFO:	
  1044                           ; 1 bytes @ 0x15
  1045                           
  1046  0035                     ??_ReadSPI:	
  1047                           ; 1 bytes @ 0x15
  1048                           
  1049  0035                     WriteFIFO@Data:	
  1050                           ; 1 bytes @ 0x15
  1051                           
  1052                           
  1053                           ; 1 bytes @ 0x15
  1054  0035                     	ds	1
  1055  0036                     ??_timerFunction:	
  1056  0036                     ReadFIFO@value:	
  1057                           ; 1 bytes @ 0x16
  1058                           
  1059  0036                     read_ram_status@status:	
  1060                           ; 1 bytes @ 0x16
  1061                           
  1062  0036                     ClockInit@cnt:	
  1063                           ; 1 bytes @ 0x16
  1064                           
  1065  0036                     DelayDs@i:	
  1066                           ; 1 bytes @ 0x16
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x16
  1070  0036                     	ds	1
  1071  0037                     ??_write_ram_status:	
  1072  0037                     ??_ram_bulk_erase:	
  1073                           ; 1 bytes @ 0x17
  1074                           
  1075  0037                     RegisterRead@value:	
  1076                           ; 1 bytes @ 0x17
  1077                           
  1078  0037                     write_ram_status@status:	
  1079                           ; 1 bytes @ 0x17
  1080                           
  1081                           
  1082                           ; 1 bytes @ 0x17
  1083  0037                     	ds	1
  1084  0038                     ??_AnalogValue:	
  1085  0038                     ?_Blink:	
  1086                           ; 1 bytes @ 0x18
  1087                           
  1088  0038                     RegisterRead@adress:	
  1089                           ; 1 bytes @ 0x18
  1090                           
  1091  0038                     Blink@n:	
  1092                           ; 1 bytes @ 0x18
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x18
  1096  0038                     	ds	1
  1097  0039                     ?_RegisterSet:	
  1098  0039                     RegisterSet@value:	
  1099                           ; 1 bytes @ 0x19
  1100                           
  1101  0039                     AnalogValue@channel:	
  1102                           ; 1 bytes @ 0x19
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x19
  1106  0039                     	ds	1
  1107  003A                     ??_RegisterSet:	
  1108  003A                     ??_DarknessCheck:	
  1109                           ; 1 bytes @ 0x1A
  1110                           
  1111  003A                     ??_Blink:	
  1112                           ; 1 bytes @ 0x1A
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x1A
  1116  003A                     	ds	1
  1117  003B                     DarknessCheck@darknessValue:	
  1118  003B                     Blink@i:	
  1119                           ; 1 bytes @ 0x1B
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x1B
  1123  003B                     	ds	1
  1124  003C                     ??_Mode_0:	
  1125  003C                     ??_Mode_1:	
  1126                           ; 1 bytes @ 0x1C
  1127                           
  1128  003C                     ??_Mode_2:	
  1129                           ; 1 bytes @ 0x1C
  1130                           
  1131  003C                     ??_LightWithSensController:	
  1132                           ; 1 bytes @ 0x1C
  1133                           
  1134  003C                     RegisterSet@adress:	
  1135                           ; 1 bytes @ 0x1C
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x1C
  1139  003C                     	ds	1
  1140  003D                     ??_SetRFMode:	
  1141                           
  1142                           ; 1 bytes @ 0x1D
  1143  003D                     	ds	1
  1144  003E                     SetRFMode@mode:	
  1145                           
  1146                           ; 1 bytes @ 0x1E
  1147  003E                     	ds	1
  1148  003F                     SetRFMode@mcparam0_read:	
  1149                           
  1150                           ; 1 bytes @ 0x1F
  1151  003F                     	ds	1
  1152  0040                     ??_FindChannel:	
  1153                           
  1154                           ; 1 bytes @ 0x20
  1155  0040                     	ds	3
  1156  0043                     ??_TransiverInit:	
  1157  0043                     ?_TransmittPacket:	
  1158                           ; 1 bytes @ 0x23
  1159                           
  1160  0043                     ??_TransiverToReceive:	
  1161                           ; 1 bytes @ 0x23
  1162                           
  1163  0043                     TransmittPacket@value:	
  1164                           ; 1 bytes @ 0x23
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0x23
  1168  0043                     	ds	1
  1169  0044                     ??_TransmittPacket:	
  1170                           
  1171                           ; 1 bytes @ 0x24
  1172  0044                     	ds	2
  1173  0046                     ??_Mode_4:	
  1174                           
  1175                           	psect	maintext
  1176  033C                     __pmaintext:	
  1177                           ; 1 bytes @ 0x26
  1178 ;;
  1179 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1180 ;;
  1181 ;; *************** function _main *****************
  1182 ;; Defined at:
  1183 ;;		line 31 in file "main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  2   74[None  ] int 
  1190 ;; Registers used:
  1191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : B00/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0
  1199 ;;      Temps:          0       0       3       0       0
  1200 ;;      Totals:         0       0       3       0       0
  1201 ;;Total ram usage:        3 bytes
  1202 ;; Hardware stack levels required when called:   14
  1203 ;; This function calls:
  1204 ;;		_AnalogValue
  1205 ;;		_ClockInit
  1206 ;;		_Mode_0
  1207 ;;		_Mode_1
  1208 ;;		_Mode_2
  1209 ;;		_Mode_4
  1210 ;;		_Mode_5
  1211 ;;		_OperationMode
  1212 ;;		_PICInit
  1213 ;;		_TransiverInit
  1214 ;;		_TransiverReadFIFO
  1215 ;;		_TransiverToReceive
  1216 ;;		_TransmittPacket
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _main
  1224  033C                     _main:	
  1225                           
  1226                           ;main.c: 34: PICInit();
  1227                           
  1228                           ;incstack = 0
  1229 ;; hardware stack exceeded
  1230                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1231  033C  120A  158A  25B9  120A  118A  	fcall	_PICInit
  1232                           
  1233                           ;main.c: 35: TransiverInit();
  1234  0341  120A  118A  2578  120A  118A  	fcall	_TransiverInit
  1235                           
  1236                           ;main.c: 36: ClockInit();
  1237  0346  120A  158A  2766  120A  118A  	fcall	_ClockInit
  1238                           
  1239                           ;main.c: 39: RB1 = 0;
  1240  034B  1283               	bcf	3,5	;RP0=0, select bank0
  1241  034C  1303               	bcf	3,6	;RP1=0, select bank0
  1242  034D  1086               	bcf	6,1	;volatile
  1243                           
  1244                           ;main.c: 40: _delay((unsigned long)((300)*(4000000/4000.0)));
  1245  034E  3002               	movlw	2
  1246  034F  1683               	bsf	3,5	;RP0=1, select bank1
  1247  0350  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0351  00CF               	movwf	(??_main^(0+128)+2)
  1249  0352  3086               	movlw	134
  1250  0353  00CE               	movwf	(??_main^(0+128)+1)
  1251  0354  3098               	movlw	152
  1252  0355  00CD               	movwf	??_main^(0+128)
  1253  0356                     u2847:	
  1254  0356  0BCD               	decfsz	??_main^(0+128),f
  1255  0357  2B56               	goto	u2847
  1256  0358  0BCE               	decfsz	(??_main^(0+128)+1),f
  1257  0359  2B56               	goto	u2847
  1258  035A  0BCF               	decfsz	(??_main^(0+128)+2),f
  1259  035B  2B56               	goto	u2847
  1260  035C  0000               	nop
  1261                           
  1262                           ;main.c: 41: RB1 = 1;
  1263  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1264  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1265  035F  1486               	bsf	6,1	;volatile
  1266                           
  1267                           ;main.c: 42: _delay((unsigned long)((300)*(4000000/4000.0)));
  1268  0360  3002               	movlw	2
  1269  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0363  00CF               	movwf	(??_main^(0+128)+2)
  1272  0364  3086               	movlw	134
  1273  0365  00CE               	movwf	(??_main^(0+128)+1)
  1274  0366  3098               	movlw	152
  1275  0367  00CD               	movwf	??_main^(0+128)
  1276  0368                     u2857:	
  1277  0368  0BCD               	decfsz	??_main^(0+128),f
  1278  0369  2B68               	goto	u2857
  1279  036A  0BCE               	decfsz	(??_main^(0+128)+1),f
  1280  036B  2B68               	goto	u2857
  1281  036C  0BCF               	decfsz	(??_main^(0+128)+2),f
  1282  036D  2B68               	goto	u2857
  1283  036E  0000               	nop
  1284  036F                     l3727:	
  1285                           ;main.c: 44: while(1)
  1286                           
  1287                           
  1288                           ;main.c: 45: {
  1289                           ;main.c: 46: if(!RB0)
  1290  036F  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0370  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0371  1806               	btfsc	6,0	;volatile
  1293  0372  2C10               	goto	l3747
  1294                           
  1295                           ;main.c: 47: {
  1296                           ;main.c: 49: RC0 = 0;
  1297  0373  1007               	bcf	7,0	;volatile
  1298                           
  1299                           ;main.c: 50: TransmittPacket(1,AnalogValue(3));
  1300  0374  3003               	movlw	3
  1301  0375  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  1302  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1303  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1304  037C  00CD               	movwf	??_main^(0+128)
  1305  037D  084D               	movf	??_main^(0+128),w
  1306  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1307  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0380  00C3               	movwf	TransmittPacket@value
  1309  0381  3001               	movlw	1
  1310  0382  120A  118A  2725  120A  118A  	fcall	_TransmittPacket
  1311                           
  1312                           ;main.c: 51: _delay((unsigned long)((50)*(4000000/4000.0)));
  1313  0387  3041               	movlw	65
  1314  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1316  038A  00CE               	movwf	(??_main^(0+128)+1)
  1317  038B  30ED               	movlw	237
  1318  038C  00CD               	movwf	??_main^(0+128)
  1319  038D                     u2867:	
  1320  038D  0BCD               	decfsz	??_main^(0+128),f
  1321  038E  2B8D               	goto	u2867
  1322  038F  0BCE               	decfsz	(??_main^(0+128)+1),f
  1323  0390  2B8D               	goto	u2867
  1324  0391  2B92               	nop2
  1325                           
  1326                           ;main.c: 52: TransmittPacket(2,AnalogValue(8));
  1327  0392  3008               	movlw	8
  1328  0393  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  1329  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0399  1303               	bcf	3,6	;RP1=0, select bank1
  1331  039A  00CD               	movwf	??_main^(0+128)
  1332  039B  084D               	movf	??_main^(0+128),w
  1333  039C  1283               	bcf	3,5	;RP0=0, select bank0
  1334  039D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  039E  00C3               	movwf	TransmittPacket@value
  1336  039F  3002               	movlw	2
  1337  03A0  120A  118A  2725  120A  118A  	fcall	_TransmittPacket
  1338                           
  1339                           ;main.c: 53: _delay((unsigned long)((50)*(4000000/4000.0)));
  1340  03A5  3041               	movlw	65
  1341  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  1342  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  1343  03A8  00CE               	movwf	(??_main^(0+128)+1)
  1344  03A9  30ED               	movlw	237
  1345  03AA  00CD               	movwf	??_main^(0+128)
  1346  03AB                     u2877:	
  1347  03AB  0BCD               	decfsz	??_main^(0+128),f
  1348  03AC  2BAB               	goto	u2877
  1349  03AD  0BCE               	decfsz	(??_main^(0+128)+1),f
  1350  03AE  2BAB               	goto	u2877
  1351  03AF  2BB0               	nop2
  1352                           
  1353                           ;main.c: 54: TransmittPacket(3,AnalogValue(6));
  1354  03B0  3006               	movlw	6
  1355  03B1  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  1356  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  1357  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  1358  03B8  00CD               	movwf	??_main^(0+128)
  1359  03B9  084D               	movf	??_main^(0+128),w
  1360  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1361  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1362  03BC  00C3               	movwf	TransmittPacket@value
  1363  03BD  3003               	movlw	3
  1364  03BE  120A  118A  2725  120A  118A  	fcall	_TransmittPacket
  1365                           
  1366                           ;main.c: 55: _delay((unsigned long)((50)*(4000000/4000.0)));
  1367  03C3  3041               	movlw	65
  1368  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  1369  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  1370  03C6  00CE               	movwf	(??_main^(0+128)+1)
  1371  03C7  30ED               	movlw	237
  1372  03C8  00CD               	movwf	??_main^(0+128)
  1373  03C9                     u2887:	
  1374  03C9  0BCD               	decfsz	??_main^(0+128),f
  1375  03CA  2BC9               	goto	u2887
  1376  03CB  0BCE               	decfsz	(??_main^(0+128)+1),f
  1377  03CC  2BC9               	goto	u2887
  1378  03CD  2BCE               	nop2
  1379                           
  1380                           ;main.c: 56: TransmittPacket(4,AnalogValue(7));
  1381  03CE  3007               	movlw	7
  1382  03CF  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  1383  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  1384  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  1385  03D6  00CD               	movwf	??_main^(0+128)
  1386  03D7  084D               	movf	??_main^(0+128),w
  1387  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1388  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1389  03DA  00C3               	movwf	TransmittPacket@value
  1390  03DB  3004               	movlw	4
  1391  03DC  120A  118A  2725  120A  118A  	fcall	_TransmittPacket
  1392                           
  1393                           ;main.c: 57: _delay((unsigned long)((50)*(4000000/4000.0)));
  1394  03E1  3041               	movlw	65
  1395  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1396  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1397  03E4  00CE               	movwf	(??_main^(0+128)+1)
  1398  03E5  30ED               	movlw	237
  1399  03E6  00CD               	movwf	??_main^(0+128)
  1400  03E7                     u2897:	
  1401  03E7  0BCD               	decfsz	??_main^(0+128),f
  1402  03E8  2BE7               	goto	u2897
  1403  03E9  0BCE               	decfsz	(??_main^(0+128)+1),f
  1404  03EA  2BE7               	goto	u2897
  1405  03EB  2BEC               	nop2
  1406                           
  1407                           ;main.c: 58: TransmittPacket(5,AnalogValue(5));
  1408  03EC  3005               	movlw	5
  1409  03ED  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  1410  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  1411  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  1412  03F4  00CD               	movwf	??_main^(0+128)
  1413  03F5  084D               	movf	??_main^(0+128),w
  1414  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1415  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1416  03F8  00C3               	movwf	TransmittPacket@value
  1417  03F9  3005               	movlw	5
  1418  03FA  120A  118A  2725  120A  118A  	fcall	_TransmittPacket
  1419                           
  1420                           ;main.c: 59: _delay((unsigned long)((2400)*(4000000/4000.0)));
  1421  03FF  300D               	movlw	13
  1422  0400  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0401  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0402  00CF               	movwf	(??_main^(0+128)+2)
  1425  0403  302D               	movlw	45
  1426  0404  00CE               	movwf	(??_main^(0+128)+1)
  1427  0405  30D7               	movlw	215
  1428  0406  00CD               	movwf	??_main^(0+128)
  1429  0407                     u2907:	
  1430  0407  0BCD               	decfsz	??_main^(0+128),f
  1431  0408  2C07               	goto	u2907
  1432  0409  0BCE               	decfsz	(??_main^(0+128)+1),f
  1433  040A  2C07               	goto	u2907
  1434  040B  0BCF               	decfsz	(??_main^(0+128)+2),f
  1435  040C  2C07               	goto	u2907
  1436                           
  1437                           ;main.c: 60: RC0 = 1;
  1438  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1439  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1440  040F  1407               	bsf	7,0	;volatile
  1441  0410                     l3747:	
  1442                           
  1443                           ;main.c: 79: }
  1444                           ;main.c: 81: if(OperationMode() == 0)
  1445  0410  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  1446  0415  3A00               	xorlw	0
  1447  0416  1D03               	skipz
  1448  0417  2C1D               	goto	l3751
  1449                           
  1450                           ;main.c: 82: {
  1451                           ;main.c: 83: Mode_0();
  1452  0418  120A  158A  2182  120A  118A  	fcall	_Mode_0
  1453  041D                     l3751:	
  1454                           
  1455                           ;main.c: 84: }
  1456                           ;main.c: 85: if(OperationMode() == 1)
  1457  041D  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  1458  0422  3A01               	xorlw	1
  1459  0423  1D03               	skipz
  1460  0424  2C2A               	goto	l3755
  1461                           
  1462                           ;main.c: 86: {
  1463                           ;main.c: 87: Mode_1();
  1464  0425  120A  158A  2253  120A  118A  	fcall	_Mode_1
  1465  042A                     l3755:	
  1466                           
  1467                           ;main.c: 88: }
  1468                           ;main.c: 90: if(OperationMode() == 2)
  1469  042A  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  1470  042F  3A02               	xorlw	2
  1471  0430  1D03               	skipz
  1472  0431  2C37               	goto	l3759
  1473                           
  1474                           ;main.c: 91: {
  1475                           ;main.c: 92: Mode_2();
  1476  0432  120A  158A  21BC  120A  118A  	fcall	_Mode_2
  1477  0437                     l3759:	
  1478                           
  1479                           ;main.c: 93: }
  1480                           ;main.c: 95: if(OperationMode() == 4)
  1481  0437  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  1482  043C  3A04               	xorlw	4
  1483  043D  1D03               	skipz
  1484  043E  2C44               	goto	l3763
  1485                           
  1486                           ;main.c: 96: {
  1487                           ;main.c: 97: Mode_4();
  1488  043F  120A  158A  21F3  120A  118A  	fcall	_Mode_4
  1489  0444                     l3763:	
  1490                           
  1491                           ;main.c: 98: }
  1492                           ;main.c: 100: if(OperationMode() == 5)
  1493  0444  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  1494  0449  3A05               	xorlw	5
  1495  044A  1D03               	skipz
  1496  044B  2C51               	goto	l3767
  1497                           
  1498                           ;main.c: 101: {
  1499                           ;main.c: 102: Mode_5();
  1500  044C  120A  158A  223D  120A  118A  	fcall	_Mode_5
  1501  0451                     l3767:	
  1502                           
  1503                           ;main.c: 103: }
  1504                           ;main.c: 107: if(!bTransiverModeReceive)
  1505  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0453  085A               	movf	_bTransiverModeReceive^(0+128),w
  1508  0454  1D03               	btfss	3,2
  1509  0455  2C5B               	goto	l3771
  1510                           
  1511                           ;main.c: 108: TransiverToReceive();
  1512  0456  120A  158A  255D  120A  118A  	fcall	_TransiverToReceive
  1513  045B                     l3771:	
  1514                           
  1515                           ;main.c: 109: if(RB4 && bTransiverModeReceive)
  1516  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1517  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1518  045D  1E06               	btfss	6,4	;volatile
  1519  045E  2B6F               	goto	l3727
  1520  045F  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0460  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0461  085A               	movf	_bTransiverModeReceive^(0+128),w
  1523  0462  1903               	btfsc	3,2
  1524  0463  2B6F               	goto	l3727
  1525                           
  1526                           ;main.c: 110: TransiverReadFIFO();
  1527  0464  120A  158A  261D  120A  118A  	fcall	_TransiverReadFIFO
  1528  0469  2B6F               	goto	l3727
  1529  046A                     __end_of_main:	
  1530                           
  1531                           	psect	text1
  1532  0D5D                     __ptext1:	
  1533 ;; *************** function _TransiverToReceive *****************
  1534 ;; Defined at:
  1535 ;;		line 16 in file "functions.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0
  1551 ;;      Temps:          0       2       0       0       0
  1552 ;;      Totals:         0       2       0       0       0
  1553 ;;Total ram usage:        2 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:   11
  1556 ;; This function calls:
  1557 ;;		_FindChannel
  1558 ;;		_RegisterRead
  1559 ;;		_RegisterSet
  1560 ;;		_SetRFMode
  1561 ;;		_timerFunction
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _TransiverToReceive
  1569  0D5D                     _TransiverToReceive:	
  1570                           
  1571                           ;functions.c: 18: timerFunction(2, 5);
  1572                           
  1573                           ;incstack = 0
  1574 ;; hardware stack exceeded
  1575                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1576  0D5D  3002               	movlw	2
  1577  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0D60  00B2               	movwf	timerFunction@intTimerNumber
  1580  0D61  3000               	movlw	0
  1581  0D62  00B3               	movwf	timerFunction@intTimerNumber+1
  1582  0D63  3005               	movlw	5
  1583  0D64  00B4               	movwf	timerFunction@intSetSeconds
  1584  0D65  3000               	movlw	0
  1585  0D66  00B5               	movwf	timerFunction@intSetSeconds+1
  1586  0D67  120A  158A  2203  120A  158A  	fcall	_timerFunction
  1587                           
  1588                           ;functions.c: 22: SetRFMode(0x20);
  1589  0D6C  3020               	movlw	32
  1590  0D6D  120A  158A  2682  120A  158A  	fcall	_SetRFMode
  1591                           
  1592                           ;functions.c: 23: _delay((unsigned long)((10)*(4000000/4000.0)));
  1593  0D72  300D               	movlw	13
  1594  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0D75  00C4               	movwf	??_TransiverToReceive+1
  1597  0D76  30FB               	movlw	251
  1598  0D77  00C3               	movwf	??_TransiverToReceive
  1599  0D78                     u2917:	
  1600  0D78  0BC3               	decfsz	??_TransiverToReceive,f
  1601  0D79  2D78               	goto	u2917
  1602  0D7A  0BC4               	decfsz	??_TransiverToReceive+1,f
  1603  0D7B  2D78               	goto	u2917
  1604                           
  1605                           ;functions.c: 24: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1606  0D7C  300E               	movlw	14
  1607  0D7D  120A  158A  22BC  120A  158A  	fcall	_RegisterRead
  1608  0D82  3802               	iorlw	2
  1609  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0D85  00C3               	movwf	??_TransiverToReceive
  1612  0D86  0843               	movf	??_TransiverToReceive,w
  1613  0D87  00B9               	movwf	RegisterSet@value
  1614  0D88  300E               	movlw	14
  1615  0D89  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  1616                           
  1617                           ;functions.c: 25: SetRFMode(0x40);
  1618  0D8E  3040               	movlw	64
  1619  0D8F  120A  158A  2682  120A  158A  	fcall	_SetRFMode
  1620  0D94                     l3673:	
  1621                           ;functions.c: 26: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1622                           
  1623  0D94  300E               	movlw	14
  1624  0D95  120A  158A  22BC  120A  158A  	fcall	_RegisterRead
  1625  0D9A  3902               	andlw	2
  1626  0D9B  1D03               	btfss	3,2
  1627  0D9C  2DA7               	goto	l3675
  1628                           
  1629                           ;functions.c: 27: {
  1630                           ;functions.c: 28: if(bTimerComplete[2])
  1631  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0D9F  0848               	movf	_bTimerComplete+2,w
  1634  0DA0  1903               	btfsc	3,2
  1635  0DA1  2D94               	goto	l3673
  1636                           
  1637                           ;functions.c: 29: {
  1638                           ;functions.c: 30: FindChannel();
  1639  0DA2  120A  118A  246A  120A  158A  	fcall	_FindChannel
  1640  0DA7                     l3675:	
  1641                           ;functions.c: 31: break;
  1642                           
  1643                           
  1644                           ;functions.c: 32: }
  1645                           ;functions.c: 33: }
  1646                           ;functions.c: 35: SetRFMode(0x60);
  1647  0DA7  3060               	movlw	96
  1648  0DA8  120A  158A  2682  120A  158A  	fcall	_SetRFMode
  1649                           
  1650                           ;functions.c: 36: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1651  0DAD  30A5               	movlw	165
  1652  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0DB0  00C3               	movwf	??_TransiverToReceive
  1655  0DB1                     u2927:	
  1656  0DB1  0BC3               	decfsz	??_TransiverToReceive,f
  1657  0DB2  2DB1               	goto	u2927
  1658  0DB3  2DB4               	nop2
  1659                           
  1660                           ;functions.c: 37: bTransiverModeReceive = 1;
  1661  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0DB6  01DA               	clrf	_bTransiverModeReceive^(0+128)
  1664  0DB7  0ADA               	incf	_bTransiverModeReceive^(0+128),f
  1665  0DB8  0008               	return
  1666  0DB9                     __end_of_TransiverToReceive:	
  1667                           
  1668                           	psect	text2
  1669  0E1D                     __ptext2:	
  1670 ;; *************** function _TransiverReadFIFO *****************
  1671 ;; Defined at:
  1672 ;;		line 42 in file "functions.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  j               2   43[BANK1 ] int 
  1677 ;;  ReceivedStri   30   11[BANK1 ] unsigned char [30]
  1678 ;;  i               2   41[BANK1 ] int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         0       0      34       0       0
  1690 ;;      Temps:          0       0       2       0       0
  1691 ;;      Totals:         0       0      36       0       0
  1692 ;;Total ram usage:       36 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:   13
  1695 ;; This function calls:
  1696 ;;		_ReadFIFO
  1697 ;;		_ReceivedPacketHandler
  1698 ;;		_SetRFMode
  1699 ;;		_timerFunction
  1700 ;; This function is called by:
  1701 ;;		_main
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _TransiverReadFIFO
  1707  0E1D                     _TransiverReadFIFO:	
  1708                           
  1709                           ;functions.c: 44: unsigned char ReceivedString[30];
  1710                           ;functions.c: 45: timerFunction(3, 5);
  1711                           
  1712                           ;incstack = 0
  1713 ;; hardware stack exceeded
  1714                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1715  0E1D  3003               	movlw	3
  1716  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0E20  00B2               	movwf	timerFunction@intTimerNumber
  1719  0E21  3000               	movlw	0
  1720  0E22  00B3               	movwf	timerFunction@intTimerNumber+1
  1721  0E23  3005               	movlw	5
  1722  0E24  00B4               	movwf	timerFunction@intSetSeconds
  1723  0E25  3000               	movlw	0
  1724  0E26  00B5               	movwf	timerFunction@intSetSeconds+1
  1725  0E27  120A  158A  2203  120A  158A  	fcall	_timerFunction
  1726                           
  1727                           ;functions.c: 47: SetRFMode(0x20);
  1728  0E2C  3020               	movlw	32
  1729  0E2D  120A  158A  2682  120A  158A  	fcall	_SetRFMode
  1730                           
  1731                           ;functions.c: 48: bTransiverModeReceive = 0;
  1732  0E32  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0E33  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0E34  01DA               	clrf	_bTransiverModeReceive^(0+128)
  1735                           
  1736                           ;functions.c: 49: int i = 0;
  1737  0E35  01C9               	clrf	TransiverReadFIFO@i^(0+128)
  1738  0E36  01CA               	clrf	(TransiverReadFIFO@i+1)^(0+128)
  1739                           
  1740                           ;functions.c: 50: for (int j = 0; j < 30; ++j)
  1741  0E37  01CB               	clrf	TransiverReadFIFO@j^(0+128)
  1742  0E38  01CC               	clrf	(TransiverReadFIFO@j+1)^(0+128)
  1743  0E39                     L1:	
  1744  0E39  084C               	movf	(TransiverReadFIFO@j+1)^(0+128),w
  1745  0E3A  3A80               	xorlw	128
  1746  0E3B  00FF               	movwf	127
  1747  0E3C  3080               	movlw	128
  1748  0E3D  027F               	subwf	127,w
  1749  0E3E  1D03               	skipz
  1750  0E3F  2E42               	goto	u2645
  1751  0E40  301E               	movlw	30
  1752  0E41  024B               	subwf	TransiverReadFIFO@j^(0+128),w
  1753  0E42                     u2645:	
  1754  0E42  1803               	btfsc	3,0
  1755  0E43  2E66               	goto	l3703
  1756                           
  1757                           ;functions.c: 51: {
  1758                           ;functions.c: 52: ReceivedString[j] = 0;
  1759  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0E46  084B               	movf	TransiverReadFIFO@j^(0+128),w
  1762  0E47  3EAB               	addlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  1763  0E48  0084               	movwf	4
  1764  0E49  1383               	bcf	3,7	;select IRP bank1
  1765  0E4A  0180               	clrf	0
  1766  0E4B  3001               	movlw	1
  1767  0E4C  07CB               	addwf	TransiverReadFIFO@j^(0+128),f
  1768  0E4D  1803               	skipnc
  1769  0E4E  0ACC               	incf	(TransiverReadFIFO@j+1)^(0+128),f
  1770  0E4F  3000               	movlw	0
  1771  0E50  07CC               	addwf	(TransiverReadFIFO@j+1)^(0+128),f
  1772  0E51  2E39               	goto	L1
  1773  0E52                     l3699:	
  1774                           ;functions.c: 53: }
  1775                           ;functions.c: 54: while((RB3)&&(!bTimerComplete[3]))
  1776                           
  1777                           
  1778                           ;functions.c: 55: {
  1779                           ;functions.c: 56: ReceivedString[i] = ReadFIFO();
  1780  0E52  120A  158A  21E5  120A  158A  	fcall	_ReadFIFO
  1781  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  1782  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  1783  0E59  00A9               	movwf	??_TransiverReadFIFO^(0+128)
  1784  0E5A  0849               	movf	TransiverReadFIFO@i^(0+128),w
  1785  0E5B  3EAB               	addlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  1786  0E5C  0084               	movwf	4
  1787  0E5D  0829               	movf	??_TransiverReadFIFO^(0+128),w
  1788  0E5E  1383               	bcf	3,7	;select IRP bank1
  1789  0E5F  0080               	movwf	0
  1790                           
  1791                           ;functions.c: 57: i++;
  1792  0E60  3001               	movlw	1
  1793  0E61  07C9               	addwf	TransiverReadFIFO@i^(0+128),f
  1794  0E62  1803               	skipnc
  1795  0E63  0ACA               	incf	(TransiverReadFIFO@i+1)^(0+128),f
  1796  0E64  3000               	movlw	0
  1797  0E65  07CA               	addwf	(TransiverReadFIFO@i+1)^(0+128),f
  1798  0E66                     l3703:	
  1799  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0E68  1D86               	btfss	6,3	;volatile
  1802  0E69  2E6D               	goto	l3707
  1803  0E6A  0849               	movf	_bTimerComplete+3,w
  1804  0E6B  1903               	btfsc	3,2
  1805  0E6C  2E52               	goto	l3699
  1806  0E6D                     l3707:	
  1807                           
  1808                           ;functions.c: 58: }
  1809                           ;functions.c: 60: _delay((unsigned long)((10)*(4000000/4000.0)));
  1810  0E6D  300D               	movlw	13
  1811  0E6E  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0E6F  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0E70  00AA               	movwf	(??_TransiverReadFIFO^(0+128)+1)
  1814  0E71  30FB               	movlw	251
  1815  0E72  00A9               	movwf	??_TransiverReadFIFO^(0+128)
  1816  0E73                     u2937:	
  1817  0E73  0BA9               	decfsz	??_TransiverReadFIFO^(0+128),f
  1818  0E74  2E73               	goto	u2937
  1819  0E75  0BAA               	decfsz	(??_TransiverReadFIFO^(0+128)+1),f
  1820  0E76  2E73               	goto	u2937
  1821                           
  1822                           ;functions.c: 61: SetRFMode(0x00);
  1823  0E77  3000               	movlw	0
  1824  0E78  120A  158A  2682  120A  158A  	fcall	_SetRFMode
  1825                           
  1826                           ;functions.c: 63: ReceivedPacketHandler(ReceivedString);
  1827  0E7D  30AB               	movlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  1828  0E7E  120A  118A  2043   	fcall	_ReceivedPacketHandler
  1829  0E81  0008               	return
  1830  0E82                     __end_of_TransiverReadFIFO:	
  1831                           
  1832                           	psect	text3
  1833  0043                     __ptext3:	
  1834 ;; *************** function _ReceivedPacketHandler *****************
  1835 ;; Defined at:
  1836 ;;		line 73 in file "functions.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  Data            1    wreg     PTR unsigned char 
  1839 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  Data            1    8[BANK1 ] PTR unsigned char 
  1842 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       0       1       0       0
  1854 ;;      Temps:          0       0       1       0       0
  1855 ;;      Totals:         0       0       2       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:   12
  1859 ;; This function calls:
  1860 ;;		_AnalogValue
  1861 ;;		_DarknessCheck
  1862 ;;		_DelayDs
  1863 ;;		_OperationMode
  1864 ;;		_ResetMemoryAdress
  1865 ;;		_SendMemoryData
  1866 ;;		_TransmittPacket
  1867 ;;		_eeprom_read
  1868 ;;		_ram_bulk_erase
  1869 ;;		_read_ram_status
  1870 ;;		_write_ram_status
  1871 ;; This function is called by:
  1872 ;;		_TransiverReadFIFO
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _ReceivedPacketHandler
  1878  0043                     _ReceivedPacketHandler:	
  1879                           
  1880                           ;incstack = 0
  1881 ;; hardware stack exceeded
  1882                           ; Regs used in _ReceivedPacketHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1883                           ;ReceivedPacketHandler@Data stored from wreg
  1884  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1886  0045  00A8               	movwf	ReceivedPacketHandler@Data^(0+128)
  1887                           
  1888                           ;functions.c: 75: if(Data[0] != 44 || Data[3] != 55)
  1889  0046  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  1890  0047  0084               	movwf	4
  1891  0048  302C               	movlw	44
  1892  0049  1383               	bcf	3,7	;select IRP bank0
  1893  004A  0600               	xorwf	0,w
  1894  004B  1D03               	btfss	3,2
  1895  004C  0008               	return
  1896  004D  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  1897  004E  3E03               	addlw	3
  1898  004F  0084               	movwf	4
  1899  0050  3037               	movlw	55
  1900  0051  0600               	xorwf	0,w
  1901  0052  1D03               	btfss	3,2
  1902  0053  0008               	return
  1903  0054  29AE               	goto	l3539
  1904  0055                     l297:	
  1905                           ;functions.c: 82: {
  1906                           ;functions.c: 83: case 1:
  1907                           
  1908                           ;functions.c: 81: switch (Data[2])
  1909                           
  1910                           ;functions.c: 79: {
  1911                           ;functions.c: 80: case 1:
  1912                           
  1913                           ;functions.c: 78: switch (Data[1])
  1914                           
  1915                           ;functions.c: 76: return;
  1916                           
  1917                           
  1918                           ;functions.c: 84: RC2 = 1;
  1919  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0057  1507               	bsf	7,2	;volatile
  1922                           
  1923                           ;functions.c: 85: DelayDs(10);
  1924  0058  300A               	movlw	10
  1925  0059  00B2               	movwf	DelayDs@cnt
  1926  005A  3000               	movlw	0
  1927  005B  00B3               	movwf	DelayDs@cnt+1
  1928  005C  120A  158A  2318  120A  118A  	fcall	_DelayDs
  1929                           
  1930                           ;functions.c: 86: RC2 = 0;
  1931  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0063  1107               	bcf	7,2	;volatile
  1934                           
  1935                           ;functions.c: 87: DelayDs(5);
  1936  0064  3005               	movlw	5
  1937  0065  00B2               	movwf	DelayDs@cnt
  1938  0066  3000               	movlw	0
  1939  0067  00B3               	movwf	DelayDs@cnt+1
  1940  0068  120A  158A  2318   	fcall	_DelayDs
  1941                           
  1942                           ;functions.c: 88: break;
  1943  006B  0008               	return
  1944  006C                     l299:	
  1945                           ;functions.c: 90: case 2:
  1946                           
  1947                           
  1948                           ;functions.c: 91: RC1 = 1;
  1949  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1950  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1951  006E  1487               	bsf	7,1	;volatile
  1952                           
  1953                           ;functions.c: 92: DelayDs(10);
  1954  006F  300A               	movlw	10
  1955  0070  00B2               	movwf	DelayDs@cnt
  1956  0071  3000               	movlw	0
  1957  0072  00B3               	movwf	DelayDs@cnt+1
  1958  0073  120A  158A  2318  120A  118A  	fcall	_DelayDs
  1959                           
  1960                           ;functions.c: 93: RC1 = 0;
  1961  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1963  007A  1087               	bcf	7,1	;volatile
  1964                           
  1965                           ;functions.c: 94: DelayDs(5);
  1966  007B  3005               	movlw	5
  1967  007C  00B2               	movwf	DelayDs@cnt
  1968  007D  3000               	movlw	0
  1969  007E  00B3               	movwf	DelayDs@cnt+1
  1970  007F  120A  158A  2318   	fcall	_DelayDs
  1971                           
  1972                           ;functions.c: 95: break;
  1973  0082  0008               	return
  1974  0083                     l300:	
  1975                           ;functions.c: 97: case 3:
  1976                           
  1977                           
  1978                           ;functions.c: 98: RB1 = 0;
  1979  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0085  1086               	bcf	6,1	;volatile
  1982                           
  1983                           ;functions.c: 99: DelayDs(10);
  1984  0086  300A               	movlw	10
  1985  0087  00B2               	movwf	DelayDs@cnt
  1986  0088  3000               	movlw	0
  1987  0089  00B3               	movwf	DelayDs@cnt+1
  1988  008A  120A  158A  2318  120A  118A  	fcall	_DelayDs
  1989                           
  1990                           ;functions.c: 100: RB1 = 1;
  1991  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0091  1486               	bsf	6,1	;volatile
  1994                           
  1995                           ;functions.c: 101: DelayDs(5);
  1996  0092  3005               	movlw	5
  1997  0093  00B2               	movwf	DelayDs@cnt
  1998  0094  3000               	movlw	0
  1999  0095  00B3               	movwf	DelayDs@cnt+1
  2000  0096  120A  158A  2318   	fcall	_DelayDs
  2001                           
  2002                           ;functions.c: 107: }
  2003                           
  2004                           ;functions.c: 105: break;
  2005                           
  2006                           ;functions.c: 104: default:
  2007                           
  2008                           ;functions.c: 102: break;
  2009  0099  0008               	return
  2010  009A                     l3467:	
  2011  009A  1683               	bsf	3,5	;RP0=1, select bank1
  2012  009B  1303               	bcf	3,6	;RP1=0, select bank1
  2013  009C  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2014  009D  3E02               	addlw	2
  2015  009E  0084               	movwf	4
  2016  009F  1383               	bcf	3,7	;select IRP bank0
  2017  00A0  0800               	movf	0,w
  2018                           
  2019                           ; Switch size 1, requested type "space"
  2020                           ; Number of cases is 3, Range of values is 1 to 3
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte           10     6 (average)
  2024                           ; direct_byte           20    11 (fixed)
  2025                           ; jumptable            263     9 (fixed)
  2026                           ;	Chosen strategy is simple_byte
  2027  00A1  3A01               	xorlw	1	; case 1
  2028  00A2  1903               	skipnz
  2029  00A3  2855               	goto	l297
  2030  00A4  3A03               	xorlw	3	; case 2
  2031  00A5  1903               	skipnz
  2032  00A6  286C               	goto	l299
  2033  00A7  3A01               	xorlw	1	; case 3
  2034  00A8  1903               	skipnz
  2035  00A9  2883               	goto	l300
  2036  00AA  29D0               	goto	l293
  2037                           
  2038                           ;functions.c: 108: break;
  2039  00AB  0008               	return
  2040  00AC                     l3469:	
  2041                           ;functions.c: 109: case 2:
  2042                           
  2043                           
  2044                           ;functions.c: 110: if(Data[2] == 1 && OperationMode() == 6)
  2045  00AC  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2046  00AD  3E02               	addlw	2
  2047  00AE  0084               	movwf	4
  2048  00AF  0300               	decf	0,w
  2049  00B0  1D03               	btfss	3,2
  2050  00B1  28CB               	goto	l3479
  2051  00B2  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  2052  00B7  3A06               	xorlw	6
  2053  00B8  1D03               	skipz
  2054  00B9  28CB               	goto	l3479
  2055                           
  2056                           ;functions.c: 111: {
  2057                           ;functions.c: 112: intBlinkCycle = 1;
  2058  00BA  3001               	movlw	1
  2059  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2060  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2061  00BD  00CF               	movwf	_intBlinkCycle
  2062  00BE  3000               	movlw	0
  2063  00BF  00D0               	movwf	_intBlinkCycle+1
  2064                           
  2065                           ;functions.c: 113: intBlinkCounter = 0;
  2066  00C0  01CD               	clrf	_intBlinkCounter
  2067  00C1  01CE               	clrf	_intBlinkCounter+1
  2068                           
  2069                           ;functions.c: 114: DelayDs(100);
  2070  00C2  3064               	movlw	100
  2071  00C3  00B2               	movwf	DelayDs@cnt
  2072  00C4  3000               	movlw	0
  2073  00C5  00B3               	movwf	DelayDs@cnt+1
  2074  00C6  120A  158A  2318  120A  118A  	fcall	_DelayDs
  2075  00CB                     l3479:	
  2076                           
  2077                           ;functions.c: 115: }
  2078                           ;functions.c: 116: if(Data[2] == 2 && OperationMode() == 7)
  2079  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  2080  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  2081  00CD  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2082  00CE  3E02               	addlw	2
  2083  00CF  0084               	movwf	4
  2084  00D0  3002               	movlw	2
  2085  00D1  1383               	bcf	3,7	;select IRP bank0
  2086  00D2  0600               	xorwf	0,w
  2087  00D3  1D03               	btfss	3,2
  2088  00D4  0008               	return
  2089  00D5  120A  158A  21A7  120A  118A  	fcall	_OperationMode
  2090  00DA  3A07               	xorlw	7
  2091  00DB  1D03               	skipz
  2092  00DC  0008               	return
  2093                           
  2094                           ;functions.c: 117: {
  2095                           ;functions.c: 118: intBlinkCycle = 1;
  2096  00DD  3001               	movlw	1
  2097  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2098  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2099  00E0  00CF               	movwf	_intBlinkCycle
  2100  00E1  3000               	movlw	0
  2101  00E2  00D0               	movwf	_intBlinkCycle+1
  2102                           
  2103                           ;functions.c: 119: intBlinkCounter = 0;
  2104  00E3  01CD               	clrf	_intBlinkCounter
  2105  00E4  01CE               	clrf	_intBlinkCounter+1
  2106                           
  2107                           ;functions.c: 120: DelayDs(100);
  2108  00E5  3064               	movlw	100
  2109  00E6  00B2               	movwf	DelayDs@cnt
  2110  00E7  3000               	movlw	0
  2111  00E8  00B3               	movwf	DelayDs@cnt+1
  2112  00E9  120A  158A  2318   	fcall	_DelayDs
  2113                           
  2114                           ;functions.c: 121: }
  2115                           ;functions.c: 122: break;
  2116  00EC  0008               	return
  2117  00ED                     l3489:	
  2118                           ;functions.c: 124: case 3:
  2119                           
  2120                           
  2121                           ;functions.c: 125: if(Data[2] != 0)
  2122  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  2123  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  2124  00EF  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2125  00F0  3E02               	addlw	2
  2126  00F1  0084               	movwf	4
  2127  00F2  1383               	bcf	3,7	;select IRP bank0
  2128  00F3  0800               	movf	0,w
  2129  00F4  1D03               	btfss	3,2
  2130  00F5  0008               	return
  2131                           
  2132                           ;functions.c: 127: TransmittPacket(3, AnalogValue(0));
  2133                           
  2134                           ;functions.c: 126: break;
  2135  00F6  3000               	movlw	0
  2136  00F7  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  2137  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2138  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2139  00FE  00A7               	movwf	??_ReceivedPacketHandler^(0+128)
  2140  00FF  0827               	movf	??_ReceivedPacketHandler^(0+128),w
  2141  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0102  00C3               	movwf	TransmittPacket@value
  2144  0103  3003               	movlw	3
  2145  0104  120A  118A  2725   	fcall	_TransmittPacket
  2146                           
  2147                           ;functions.c: 128: break;
  2148  0107  0008               	return
  2149  0108                     l3495:	
  2150                           ;functions.c: 130: case 4:
  2151                           
  2152                           
  2153                           ;functions.c: 131: if(Data[2] != 0)
  2154  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2156  010A  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2157  010B  3E02               	addlw	2
  2158  010C  0084               	movwf	4
  2159  010D  1383               	bcf	3,7	;select IRP bank0
  2160  010E  0800               	movf	0,w
  2161  010F  1D03               	btfss	3,2
  2162  0110  0008               	return
  2163                           
  2164                           ;functions.c: 133: TransmittPacket(4, AnalogValue(3));
  2165                           
  2166                           ;functions.c: 132: break;
  2167  0111  3003               	movlw	3
  2168  0112  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  2169  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0119  00A7               	movwf	??_ReceivedPacketHandler^(0+128)
  2172  011A  0827               	movf	??_ReceivedPacketHandler^(0+128),w
  2173  011B  1283               	bcf	3,5	;RP0=0, select bank0
  2174  011C  1303               	bcf	3,6	;RP1=0, select bank0
  2175  011D  00C3               	movwf	TransmittPacket@value
  2176  011E  3004               	movlw	4
  2177  011F  120A  118A  2725   	fcall	_TransmittPacket
  2178                           
  2179                           ;functions.c: 134: break;
  2180  0122  0008               	return
  2181  0123                     l3501:	
  2182                           ;functions.c: 136: case 5:
  2183                           
  2184                           
  2185                           ;functions.c: 137: if(Data[2] != 0)
  2186  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0125  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2189  0126  3E02               	addlw	2
  2190  0127  0084               	movwf	4
  2191  0128  1383               	bcf	3,7	;select IRP bank0
  2192  0129  0800               	movf	0,w
  2193  012A  1D03               	btfss	3,2
  2194  012B  0008               	return
  2195                           
  2196                           ;functions.c: 139: TransmittPacket(5, eeprom_read(0));
  2197                           
  2198                           ;functions.c: 138: break;
  2199  012C  3000               	movlw	0
  2200  012D  120A  158A  235F  120A  118A  	fcall	_eeprom_read
  2201  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0134  00A7               	movwf	??_ReceivedPacketHandler^(0+128)
  2204  0135  0827               	movf	??_ReceivedPacketHandler^(0+128),w
  2205  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0138  00C3               	movwf	TransmittPacket@value
  2208  0139  3005               	movlw	5
  2209  013A  120A  118A  2725   	fcall	_TransmittPacket
  2210                           
  2211                           ;functions.c: 140: break;
  2212  013D  0008               	return
  2213  013E                     l3507:	
  2214                           ;functions.c: 142: case 6:
  2215                           
  2216                           
  2217                           ;functions.c: 143: if(Data[2] != 0)
  2218  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2219  013F  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0140  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2221  0141  3E02               	addlw	2
  2222  0142  0084               	movwf	4
  2223  0143  1383               	bcf	3,7	;select IRP bank0
  2224  0144  0800               	movf	0,w
  2225  0145  1D03               	btfss	3,2
  2226  0146  0008               	return
  2227                           
  2228                           ;functions.c: 145: if(bValueFromPot == TRUE)
  2229                           
  2230                           ;functions.c: 144: break;
  2231  0147  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0148  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0149  035D               	decf	_bValueFromPot,w
  2234  014A  1D03               	btfss	3,2
  2235  014B  2953               	goto	l3515
  2236                           
  2237                           ;functions.c: 146: TransmittPacket(6, 1);
  2238  014C  01C3               	clrf	TransmittPacket@value
  2239  014D  0AC3               	incf	TransmittPacket@value,f
  2240  014E  3006               	movlw	6
  2241  014F  120A  118A  2725   	fcall	_TransmittPacket
  2242  0152  0008               	return
  2243  0153                     l3515:	
  2244                           
  2245                           ;functions.c: 147: else
  2246                           ;functions.c: 148: TransmittPacket(6, 0);
  2247  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0155  01C3               	clrf	TransmittPacket@value
  2250  0156  3006               	movlw	6
  2251  0157  120A  118A  2725   	fcall	_TransmittPacket
  2252                           
  2253                           ;functions.c: 149: break;
  2254  015A  0008               	return
  2255  015B                     l3517:	
  2256                           ;functions.c: 151: case 7:
  2257                           
  2258                           
  2259                           ;functions.c: 152: if(Data[2] != 0)
  2260  015B  1683               	bsf	3,5	;RP0=1, select bank1
  2261  015C  1303               	bcf	3,6	;RP1=0, select bank1
  2262  015D  0828               	movf	ReceivedPacketHandler@Data^(0+128),w
  2263  015E  3E02               	addlw	2
  2264  015F  0084               	movwf	4
  2265  0160  1383               	bcf	3,7	;select IRP bank0
  2266  0161  0800               	movf	0,w
  2267  0162  1D03               	btfss	3,2
  2268  0163  0008               	return
  2269                           
  2270                           ;functions.c: 154: DarknessCheck();
  2271                           
  2272                           ;functions.c: 153: break;
  2273  0164  120A  118A  27D6  120A  118A  	fcall	_DarknessCheck
  2274                           
  2275                           ;functions.c: 155: if(bDark)
  2276  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2277  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2278  016B  085A               	movf	_bDark,w
  2279  016C  1903               	btfsc	3,2
  2280  016D  2975               	goto	l3527
  2281                           
  2282                           ;functions.c: 156: TransmittPacket(7, 1);
  2283  016E  01C3               	clrf	TransmittPacket@value
  2284  016F  0AC3               	incf	TransmittPacket@value,f
  2285  0170  3007               	movlw	7
  2286  0171  120A  118A  2725   	fcall	_TransmittPacket
  2287  0174  0008               	return
  2288  0175                     l3527:	
  2289                           
  2290                           ;functions.c: 157: else
  2291                           ;functions.c: 158: TransmittPacket(7, 2);
  2292  0175  3002               	movlw	2
  2293  0176  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0177  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0178  00A7               	movwf	??_ReceivedPacketHandler^(0+128)
  2296  0179  0827               	movf	??_ReceivedPacketHandler^(0+128),w
  2297  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2298  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2299  017C  00C3               	movwf	TransmittPacket@value
  2300  017D  3007               	movlw	7
  2301  017E  120A  118A  2725   	fcall	_TransmittPacket
  2302                           
  2303                           ;functions.c: 159: break;
  2304  0181  0008               	return
  2305  0182                     l3529:	
  2306                           ;functions.c: 161: case 9:
  2307                           
  2308                           
  2309                           ;functions.c: 162: write_ram_status(read_ram_status() & 0b11100011);
  2310  0182  120A  158A  2229  120A  118A  	fcall	_read_ram_status
  2311  0187  39E3               	andlw	227
  2312  0188  120A  158A  23FB  120A  118A  	fcall	_write_ram_status
  2313                           
  2314                           ;functions.c: 163: ram_bulk_erase();
  2315  018D  120A  158A  22F6  120A  118A  	fcall	_ram_bulk_erase
  2316                           
  2317                           ;functions.c: 164: ResetMemoryAdress();
  2318  0192  120A  158A  2287  120A  118A  	fcall	_ResetMemoryAdress
  2319                           
  2320                           ;functions.c: 165: TransmittPacket(9, 1);
  2321  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0199  01C3               	clrf	TransmittPacket@value
  2324  019A  0AC3               	incf	TransmittPacket@value,f
  2325  019B  3009               	movlw	9
  2326  019C  120A  118A  2725   	fcall	_TransmittPacket
  2327                           
  2328                           ;functions.c: 166: break;
  2329  019F  0008               	return
  2330  01A0                     l3533:	
  2331                           ;functions.c: 168: case 8:
  2332                           
  2333                           
  2334                           ;functions.c: 169: SendMemoryData();
  2335  01A0  120A  118A  27FF  120A  118A  	fcall	_SendMemoryData
  2336                           
  2337                           ;functions.c: 170: TransmittPacket(8, 1);
  2338  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2339  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2340  01A7  01C3               	clrf	TransmittPacket@value
  2341  01A8  0AC3               	incf	TransmittPacket@value,f
  2342  01A9  3008               	movlw	8
  2343  01AA  120A  118A  2725   	fcall	_TransmittPacket
  2344                           
  2345                           ;functions.c: 174: }
  2346                           
  2347                           ;functions.c: 173: break;
  2348                           
  2349                           ;functions.c: 172: default:
  2350  01AD  0008               	return
  2351  01AE                     l3539:	
  2352  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2353  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2354  01B0  0A28               	incf	ReceivedPacketHandler@Data^(0+128),w
  2355  01B1  0084               	movwf	4
  2356  01B2  1383               	bcf	3,7	;select IRP bank0
  2357  01B3  0800               	movf	0,w
  2358                           
  2359                           ; Switch size 1, requested type "space"
  2360                           ; Number of cases is 9, Range of values is 1 to 9
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; simple_byte           28    15 (average)
  2364                           ; direct_byte           38    11 (fixed)
  2365                           ; jumptable            263     9 (fixed)
  2366                           ;	Chosen strategy is simple_byte
  2367  01B4  3A01               	xorlw	1	; case 1
  2368  01B5  1903               	skipnz
  2369  01B6  289A               	goto	l3467
  2370  01B7  3A03               	xorlw	3	; case 2
  2371  01B8  1903               	skipnz
  2372  01B9  28AC               	goto	l3469
  2373  01BA  3A01               	xorlw	1	; case 3
  2374  01BB  1903               	skipnz
  2375  01BC  28ED               	goto	l3489
  2376  01BD  3A07               	xorlw	7	; case 4
  2377  01BE  1903               	skipnz
  2378  01BF  2908               	goto	l3495
  2379  01C0  3A01               	xorlw	1	; case 5
  2380  01C1  1903               	skipnz
  2381  01C2  2923               	goto	l3501
  2382  01C3  3A03               	xorlw	3	; case 6
  2383  01C4  1903               	skipnz
  2384  01C5  293E               	goto	l3507
  2385  01C6  3A01               	xorlw	1	; case 7
  2386  01C7  1903               	skipnz
  2387  01C8  295B               	goto	l3517
  2388  01C9  3A0F               	xorlw	15	; case 8
  2389  01CA  1903               	skipnz
  2390  01CB  29A0               	goto	l3533
  2391  01CC  3A01               	xorlw	1	; case 9
  2392  01CD  1903               	skipnz
  2393  01CE  2982               	goto	l3529
  2394  01CF  29D0               	goto	l293
  2395  01D0                     l293:	
  2396  01D0  0008               	return
  2397  01D1                     __end_of_ReceivedPacketHandler:	
  2398                           
  2399                           	psect	text4
  2400  0BFB                     __ptext4:	
  2401 ;; *************** function _write_ram_status *****************
  2402 ;; Defined at:
  2403 ;;		line 169 in file "m25p16.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  status          1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  status          1   23[BANK0 ] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         0       0       0       0       0
  2418 ;;      Locals:         0       1       0       0       0
  2419 ;;      Temps:          0       0       0       0       0
  2420 ;;      Totals:         0       1       0       0       0
  2421 ;;Total ram usage:        1 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    9
  2424 ;; This function calls:
  2425 ;;		_WriteSPI
  2426 ;;		_read_ram_status
  2427 ;; This function is called by:
  2428 ;;		_ReceivedPacketHandler
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _write_ram_status
  2434  0BFB                     _write_ram_status:	
  2435                           
  2436                           ;incstack = 0
  2437 ;; hardware stack exceeded
  2438                           ; Regs used in _write_ram_status: [wreg+status,2+status,0+pclath+cstack]
  2439                           ;write_ram_status@status stored from wreg
  2440  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0BFD  00B7               	movwf	write_ram_status@status
  2443                           
  2444                           ;m25p16.c: 172: RD3 = 0;
  2445  0BFE  1188               	bcf	8,3	;volatile
  2446                           
  2447                           ;m25p16.c: 173: WriteSPI(0x06);
  2448  0BFF  3006               	movlw	6
  2449  0C00  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2450                           
  2451                           ;m25p16.c: 174: RD3 = 1;
  2452  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0C07  1588               	bsf	8,3	;volatile
  2455                           
  2456                           ;m25p16.c: 175: _delay((unsigned long)((2)*(4000000/4000000.0)));
  2457  0C08  2C09               	nop2	;2 cycle nop
  2458                           
  2459                           ;m25p16.c: 176: RD3 = 0;
  2460  0C09  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0C0A  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0C0B  1188               	bcf	8,3	;volatile
  2463                           
  2464                           ;m25p16.c: 177: WriteSPI(0x01);
  2465  0C0C  3001               	movlw	1
  2466  0C0D  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2467                           
  2468                           ;m25p16.c: 178: WriteSPI(status);
  2469  0C12  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0C13  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0C14  0837               	movf	write_ram_status@status,w
  2472  0C15  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2473                           
  2474                           ;m25p16.c: 179: RD3 = 1;
  2475  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0C1C  1588               	bsf	8,3	;volatile
  2478                           
  2479                           ;m25p16.c: 180: _delay((unsigned long)((2)*(4000000/4000000.0)));
  2480  0C1D  2C1E               	nop2	;2 cycle nop
  2481  0C1E                     l3421:	
  2482                           ;m25p16.c: 181: while (read_ram_status() & 0x01);
  2483                           
  2484  0C1E  120A  158A  2229  120A  158A  	fcall	_read_ram_status
  2485  0C23  3901               	andlw	1
  2486  0C24  1903               	btfsc	3,2
  2487  0C25  0008               	return
  2488  0C26  2C1E               	goto	l3421
  2489  0C27                     __end_of_write_ram_status:	
  2490                           
  2491                           	psect	text5
  2492  0AF6                     __ptext5:	
  2493 ;; *************** function _ram_bulk_erase *****************
  2494 ;; Defined at:
  2495 ;;		line 69 in file "m25p16.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, pclath, cstack
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    9
  2516 ;; This function calls:
  2517 ;;		_WriteSPI
  2518 ;;		_read_ram_status
  2519 ;; This function is called by:
  2520 ;;		_ReceivedPacketHandler
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _ram_bulk_erase
  2526  0AF6                     _ram_bulk_erase:	
  2527                           
  2528                           ;m25p16.c: 71: RD3 = 0;
  2529                           
  2530                           ;incstack = 0
  2531 ;; hardware stack exceeded
  2532                           ; Regs used in _ram_bulk_erase: [wreg+status,2+status,0+pclath+cstack]
  2533  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0AF8  1188               	bcf	8,3	;volatile
  2536                           
  2537                           ;m25p16.c: 72: WriteSPI(0x06);
  2538  0AF9  3006               	movlw	6
  2539  0AFA  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2540                           
  2541                           ;m25p16.c: 73: RD3 = 1;
  2542  0AFF  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0B00  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0B01  1588               	bsf	8,3	;volatile
  2545                           
  2546                           ;m25p16.c: 74: _delay((unsigned long)((1)*(4000000/4000000.0)));
  2547  0B02  0000               	nop
  2548                           
  2549                           ;m25p16.c: 75: RD3 = 0;
  2550  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0B05  1188               	bcf	8,3	;volatile
  2553                           
  2554                           ;m25p16.c: 76: WriteSPI(0xC7);
  2555  0B06  30C7               	movlw	199
  2556  0B07  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2557                           
  2558                           ;m25p16.c: 77: RD3 = 1;
  2559  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0B0E  1588               	bsf	8,3	;volatile
  2562  0B0F                     l3435:	
  2563                           ;m25p16.c: 78: while(read_ram_status());
  2564                           
  2565  0B0F  120A  158A  2229  120A  158A  	fcall	_read_ram_status
  2566  0B14  3A00               	xorlw	0
  2567  0B15  1903               	btfsc	3,2
  2568  0B16  0008               	return
  2569  0B17  2B0F               	goto	l3435
  2570  0B18                     __end_of_ram_bulk_erase:	
  2571                           
  2572                           	psect	text6
  2573  0A29                     __ptext6:	
  2574 ;; *************** function _read_ram_status *****************
  2575 ;; Defined at:
  2576 ;;		line 57 in file "m25p16.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  status          1   22[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      unsigned char 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         0       0       0       0       0
  2591 ;;      Locals:         0       1       0       0       0
  2592 ;;      Temps:          0       1       0       0       0
  2593 ;;      Totals:         0       2       0       0       0
  2594 ;;Total ram usage:        2 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    8
  2597 ;; This function calls:
  2598 ;;		_ReadSPI
  2599 ;;		_WriteSPI
  2600 ;; This function is called by:
  2601 ;;		_ReceivedPacketHandler
  2602 ;;		_ram_bulk_erase
  2603 ;;		_write_ram_status
  2604 ;;		_ram_sector_erase
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           
  2609                           ;psect for function _read_ram_status
  2610  0A29                     _read_ram_status:	
  2611                           
  2612                           ;m25p16.c: 59: unsigned char status;
  2613                           ;m25p16.c: 60: RD3 = 0;
  2614                           
  2615                           ;incstack = 0
  2616 ;; hardware stack exceeded
  2617                           ; Regs used in _read_ram_status: [wreg+status,2+status,0+pclath+cstack]
  2618  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0A2B  1188               	bcf	8,3	;volatile
  2621                           
  2622                           ;m25p16.c: 61: WriteSPI(0x05);
  2623  0A2C  3005               	movlw	5
  2624  0A2D  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  2625                           
  2626                           ;m25p16.c: 62: status = ReadSPI();
  2627  0A32  120A  158A  218E   	fcall	_ReadSPI
  2628  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0A37  00B5               	movwf	??_read_ram_status
  2631  0A38  0835               	movf	??_read_ram_status,w
  2632  0A39  00B6               	movwf	read_ram_status@status
  2633                           
  2634                           ;m25p16.c: 63: RD3 = 1;
  2635  0A3A  1588               	bsf	8,3	;volatile
  2636                           
  2637                           ;m25p16.c: 64: return status;
  2638  0A3B  0836               	movf	read_ram_status@status,w
  2639  0A3C  0008               	return
  2640  0A3D                     __end_of_read_ram_status:	
  2641                           
  2642                           	psect	text7
  2643  07FF                     __ptext7:	
  2644 ;; *************** function _SendMemoryData *****************
  2645 ;; Defined at:
  2646 ;;		line 1134 in file "functions.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		None
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    6
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_ReceivedPacketHandler
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _SendMemoryData
  2676  07FF                     _SendMemoryData:	
  2677                           
  2678                           ;incstack = 0
  2679 ;; hardware stack exceeded
  2680                           ; Regs used in _SendMemoryData: []
  2681  07FF  0008               	return
  2682  0800                     __end_of_SendMemoryData:	
  2683                           
  2684                           	psect	text8
  2685  0A87                     __ptext8:	
  2686 ;; *************** function _ResetMemoryAdress *****************
  2687 ;; Defined at:
  2688 ;;		line 1019 in file "functions.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    7
  2709 ;; This function calls:
  2710 ;;		_eeprom_write
  2711 ;; This function is called by:
  2712 ;;		_ReceivedPacketHandler
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _ResetMemoryAdress
  2718  0A87                     _ResetMemoryAdress:	
  2719                           
  2720                           ;functions.c: 1021: eeprom_write(3,0);
  2721                           
  2722                           ;incstack = 0
  2723 ;; hardware stack exceeded
  2724                           ; Regs used in _ResetMemoryAdress: [wreg+status,2+status,0+pclath+cstack]
  2725  0A87  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0A88  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0A89  01B2               	clrf	eeprom_write@value
  2728  0A8A  3003               	movlw	3
  2729  0A8B  120A  158A  2427  120A  158A  	fcall	_eeprom_write
  2730                           
  2731                           ;functions.c: 1022: eeprom_write(2,0);
  2732  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  2733  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  2734  0A92  01B2               	clrf	eeprom_write@value
  2735  0A93  3002               	movlw	2
  2736  0A94  120A  158A  2427  120A  158A  	fcall	_eeprom_write
  2737                           
  2738                           ;functions.c: 1023: eeprom_write(1,0);
  2739  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0A9B  01B2               	clrf	eeprom_write@value
  2742  0A9C  3001               	movlw	1
  2743  0A9D  120A  158A  2427   	fcall	_eeprom_write
  2744  0AA0  0008               	return
  2745  0AA1                     __end_of_ResetMemoryAdress:	
  2746                           
  2747                           	psect	text9
  2748  0C27                     __ptext9:	
  2749 ;; *************** function _eeprom_write *****************
  2750 ;; Defined at:
  2751 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  addr            1    wreg     unsigned char 
  2754 ;;  value           1   18[BANK0 ] unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  addr            1   20[BANK0 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       1       0       0       0
  2767 ;;      Locals:         0       1       0       0       0
  2768 ;;      Temps:          0       1       0       0       0
  2769 ;;      Totals:         0       3       0       0       0
  2770 ;;Total ram usage:        3 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    6
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_ResetMemoryAdress
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _eeprom_write
  2782  0C27                     _eeprom_write:	
  2783                           
  2784                           ;incstack = 0
  2785 ;; hardware stack exceeded
  2786                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2787                           ;eeprom_write@addr stored from wreg
  2788  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0C29  00B4               	movwf	eeprom_write@addr
  2791  0C2A                     l673:	
  2792  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  2793  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  2794  0C2C  188C               	btfsc	12,1	;volsfr
  2795  0C2D  2C2A               	goto	l673
  2796  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0C30  0834               	movf	eeprom_write@addr,w
  2799  0C31  1283               	bcf	3,5	;RP0=0, select bank2
  2800  0C32  1703               	bsf	3,6	;RP1=1, select bank2
  2801  0C33  008D               	movwf	13	;volatile
  2802  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0C36  0832               	movf	eeprom_write@value,w
  2805  0C37  1283               	bcf	3,5	;RP0=0, select bank2
  2806  0C38  1703               	bsf	3,6	;RP1=1, select bank2
  2807  0C39  008C               	movwf	12	;volatile
  2808  0C3A  303F               	movlw	63
  2809  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  2810  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0C3D  00B3               	movwf	??_eeprom_write
  2812  0C3E  0833               	movf	??_eeprom_write,w
  2813  0C3F  1683               	bsf	3,5	;RP0=1, select bank3
  2814  0C40  1703               	bsf	3,6	;RP1=1, select bank3
  2815  0C41  058C               	andwf	12,f	;volsfr
  2816  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0C44  1003               	bcf	3,0	;volatile
  2819  0C45  1B8B               	btfsc	11,7	;volatile
  2820  0C46  1403               	bsf	3,0	;volatile
  2821  0C47  138B               	bcf	11,7	;volatile
  2822  0C48  1683               	bsf	3,5	;RP0=1, select bank3
  2823  0C49  1703               	bsf	3,6	;RP1=1, select bank3
  2824  0C4A  150C               	bsf	12,2	;volsfr
  2825  0C4B  3055               	movlw	85
  2826  0C4C  008D               	movwf	13	;volsfr
  2827  0C4D  30AA               	movlw	170
  2828  0C4E  008D               	movwf	13	;volsfr
  2829  0C4F  148C               	bsf	12,1	;volsfr
  2830  0C50  110C               	bcf	12,2	;volsfr
  2831  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0C53  1C03               	btfss	3,0	;volatile
  2834  0C54  0008               	return
  2835  0C55  178B               	bsf	11,7	;volatile
  2836  0C56  0008               	return
  2837  0C57                     __end_of_eeprom_write:	
  2838                           
  2839                           	psect	text10
  2840  09A7                     __ptext10:	
  2841 ;; *************** function _OperationMode *****************
  2842 ;; Defined at:
  2843 ;;		line 931 in file "functions.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;		None
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  bracketStatu    1   19[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      unsigned char 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         0       1       0       0       0
  2859 ;;      Temps:          0       1       0       0       0
  2860 ;;      Totals:         0       2       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    6
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;;		_ReceivedPacketHandler
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _OperationMode
  2874  09A7                     _OperationMode:	
  2875                           
  2876                           ;functions.c: 933: unsigned char bracketStatus;
  2877                           ;functions.c: 934: bracketStatus = ((~PORTB) & 0b00000111) ;
  2878                           
  2879                           ;incstack = 0
  2880 ;; hardware stack exceeded
  2881                           ; Regs used in _OperationMode: [wreg+status,2]
  2882  09A7  1283               	bcf	3,5	;RP0=0, select bank0
  2883  09A8  1303               	bcf	3,6	;RP1=0, select bank0
  2884  09A9  0906               	comf	6,w	;volatile
  2885  09AA  3907               	andlw	7
  2886  09AB  00B2               	movwf	??_OperationMode
  2887  09AC  0832               	movf	??_OperationMode,w
  2888  09AD  00B3               	movwf	OperationMode@bracketStatus
  2889                           
  2890                           ;functions.c: 936: return 6;
  2891  09AE  3006               	movlw	6
  2892  09AF  0008               	return
  2893  09B0                     __end_of_OperationMode:	
  2894                           
  2895                           	psect	text11
  2896  09E5                     __ptext11:	
  2897 ;; *************** function _ReadFIFO *****************
  2898 ;; Defined at:
  2899 ;;		line 746 in file "functions.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  value           1   22[BANK0 ] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      unsigned char 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0, pclath, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2913 ;;      Params:         0       0       0       0       0
  2914 ;;      Locals:         0       1       0       0       0
  2915 ;;      Temps:          0       1       0       0       0
  2916 ;;      Totals:         0       2       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    8
  2920 ;; This function calls:
  2921 ;;		_ReadSPI
  2922 ;; This function is called by:
  2923 ;;		_TransiverReadFIFO
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _ReadFIFO
  2929  09E5                     _ReadFIFO:	
  2930                           
  2931                           ;functions.c: 748: BYTE value;
  2932                           ;functions.c: 749: RA5 = 0;
  2933                           
  2934                           ;incstack = 0
  2935 ;; hardware stack exceeded
  2936                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  2937  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  2938  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  2939  09E7  1285               	bcf	5,5	;volatile
  2940                           
  2941                           ;functions.c: 750: value = ReadSPI();
  2942  09E8  120A  158A  218E   	fcall	_ReadSPI
  2943  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  2944  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  2945  09ED  00B5               	movwf	??_ReadFIFO
  2946  09EE  0835               	movf	??_ReadFIFO,w
  2947  09EF  00B6               	movwf	ReadFIFO@value
  2948                           
  2949                           ;functions.c: 751: RA5 = 1;
  2950  09F0  1685               	bsf	5,5	;volatile
  2951                           
  2952                           ;functions.c: 752: return value;
  2953  09F1  0836               	movf	ReadFIFO@value,w
  2954  09F2  0008               	return
  2955  09F3                     __end_of_ReadFIFO:	
  2956                           
  2957                           	psect	text12
  2958  0578                     __ptext12:	
  2959 ;; *************** function _TransiverInit *****************
  2960 ;; Defined at:
  2961 ;;		line 511 in file "functions.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          0       1       0       0       0
  2978 ;;      Totals:         0       1       0       0       0
  2979 ;;Total ram usage:        1 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:   11
  2982 ;; This function calls:
  2983 ;;		_Blink
  2984 ;;		_FindChannel
  2985 ;;		_RegisterRead
  2986 ;;		_RegisterSet
  2987 ;;		_SetRFMode
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _TransiverInit
  2995  0578                     _TransiverInit:	
  2996                           
  2997                           ;functions.c: 514: RegisterSet(0x00, 0x30);
  2998                           
  2999                           ;incstack = 0
  3000 ;; hardware stack exceeded
  3001                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3002  0578  3030               	movlw	48
  3003  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3004  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3005  057B  00C3               	movwf	??_TransiverInit
  3006  057C  0843               	movf	??_TransiverInit,w
  3007  057D  00B9               	movwf	RegisterSet@value
  3008  057E  3000               	movlw	0
  3009  057F  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3010                           
  3011                           ;functions.c: 515: RegisterSet(0x01,(0xA8));
  3012  0584  30A8               	movlw	168
  3013  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0587  00C3               	movwf	??_TransiverInit
  3016  0588  0843               	movf	??_TransiverInit,w
  3017  0589  00B9               	movwf	RegisterSet@value
  3018  058A  3001               	movlw	1
  3019  058B  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3020                           
  3021                           ;functions.c: 516: RegisterSet(0x02, 0x09);
  3022  0590  3009               	movlw	9
  3023  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0592  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0593  00C3               	movwf	??_TransiverInit
  3026  0594  0843               	movf	??_TransiverInit,w
  3027  0595  00B9               	movwf	RegisterSet@value
  3028  0596  3002               	movlw	2
  3029  0597  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3030                           
  3031                           ;functions.c: 517: RegisterSet(0x03, 0x07);
  3032  059C  3007               	movlw	7
  3033  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3034  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3035  059F  00C3               	movwf	??_TransiverInit
  3036  05A0  0843               	movf	??_TransiverInit,w
  3037  05A1  00B9               	movwf	RegisterSet@value
  3038  05A2  3003               	movlw	3
  3039  05A3  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3040                           
  3041                           ;functions.c: 518: RegisterSet(0x05,(0x0A));
  3042  05A8  300A               	movlw	10
  3043  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3044  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3045  05AB  00C3               	movwf	??_TransiverInit
  3046  05AC  0843               	movf	??_TransiverInit,w
  3047  05AD  00B9               	movwf	RegisterSet@value
  3048  05AE  3005               	movlw	5
  3049  05AF  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3050                           
  3051                           ;functions.c: 519: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3052  05B4  30B9               	movlw	185
  3053  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3054  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3055  05B7  00C3               	movwf	??_TransiverInit
  3056  05B8  0843               	movf	??_TransiverInit,w
  3057  05B9  00B9               	movwf	RegisterSet@value
  3058  05BA  300D               	movlw	13
  3059  05BB  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3060                           
  3061                           ;functions.c: 520: RegisterSet(0x0E,(0x01|0x10|0x01));
  3062  05C0  3011               	movlw	17
  3063  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  3064  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  3065  05C3  00C3               	movwf	??_TransiverInit
  3066  05C4  0843               	movf	??_TransiverInit,w
  3067  05C5  00B9               	movwf	RegisterSet@value
  3068  05C6  300E               	movlw	14
  3069  05C7  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3070                           
  3071                           ;functions.c: 521: RegisterSet(0x10, 0xA3);
  3072  05CC  30A3               	movlw	163
  3073  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3074  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3075  05CF  00C3               	movwf	??_TransiverInit
  3076  05D0  0843               	movf	??_TransiverInit,w
  3077  05D1  00B9               	movwf	RegisterSet@value
  3078  05D2  3010               	movlw	16
  3079  05D3  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3080                           
  3081                           ;functions.c: 522: RegisterSet(0x12,(0x18|0x20|0x06));
  3082  05D8  303E               	movlw	62
  3083  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3084  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3085  05DB  00C3               	movwf	??_TransiverInit
  3086  05DC  0843               	movf	??_TransiverInit,w
  3087  05DD  00B9               	movwf	RegisterSet@value
  3088  05DE  3012               	movlw	18
  3089  05DF  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3090                           
  3091                           ;functions.c: 523: RegisterSet(0x16,('S'));
  3092  05E4  3053               	movlw	83
  3093  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3094  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3095  05E7  00C3               	movwf	??_TransiverInit
  3096  05E8  0843               	movf	??_TransiverInit,w
  3097  05E9  00B9               	movwf	RegisterSet@value
  3098  05EA  3016               	movlw	22
  3099  05EB  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3100                           
  3101                           ;functions.c: 524: RegisterSet(0x17,('Y'));
  3102  05F0  3059               	movlw	89
  3103  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3104  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3105  05F3  00C3               	movwf	??_TransiverInit
  3106  05F4  0843               	movf	??_TransiverInit,w
  3107  05F5  00B9               	movwf	RegisterSet@value
  3108  05F6  3017               	movlw	23
  3109  05F7  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3110                           
  3111                           ;functions.c: 525: RegisterSet(0x18,('N'));
  3112  05FC  304E               	movlw	78
  3113  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3114  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3115  05FF  00C3               	movwf	??_TransiverInit
  3116  0600  0843               	movf	??_TransiverInit,w
  3117  0601  00B9               	movwf	RegisterSet@value
  3118  0602  3018               	movlw	24
  3119  0603  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3120                           
  3121                           ;functions.c: 526: RegisterSet(0x19,('C'));
  3122  0608  3043               	movlw	67
  3123  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3124  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3125  060B  00C3               	movwf	??_TransiverInit
  3126  060C  0843               	movf	??_TransiverInit,w
  3127  060D  00B9               	movwf	RegisterSet@value
  3128  060E  3019               	movlw	25
  3129  060F  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3130                           
  3131                           ;functions.c: 527: RegisterSet(0x1A, 0x72);
  3132  0614  3072               	movlw	114
  3133  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0617  00C3               	movwf	??_TransiverInit
  3136  0618  0843               	movf	??_TransiverInit,w
  3137  0619  00B9               	movwf	RegisterSet@value
  3138  061A  301A               	movlw	26
  3139  061B  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3140                           
  3141                           ;functions.c: 528: RegisterSet(0x1B, 0x3C);
  3142  0620  303C               	movlw	60
  3143  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0623  00C3               	movwf	??_TransiverInit
  3146  0624  0843               	movf	??_TransiverInit,w
  3147  0625  00B9               	movwf	RegisterSet@value
  3148  0626  301B               	movlw	27
  3149  0627  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3150                           
  3151                           ;functions.c: 529: RegisterSet(0x1F, 0x80);
  3152  062C  3080               	movlw	128
  3153  062D  1283               	bcf	3,5	;RP0=0, select bank0
  3154  062E  1303               	bcf	3,6	;RP1=0, select bank0
  3155  062F  00C3               	movwf	??_TransiverInit
  3156  0630  0843               	movf	??_TransiverInit,w
  3157  0631  00B9               	movwf	RegisterSet@value
  3158  0632  301F               	movlw	31
  3159  0633  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3160                           
  3161                           ;functions.c: 530: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3162  0638  3000               	movlw	0
  3163  0639  120A  158A  22BC  120A  118A  	fcall	_RegisterRead
  3164  063E  3801               	iorlw	1
  3165  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0641  00C3               	movwf	??_TransiverInit
  3168  0642  0843               	movf	??_TransiverInit,w
  3169  0643  00B9               	movwf	RegisterSet@value
  3170  0644  3000               	movlw	0
  3171  0645  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3172                           
  3173                           ;functions.c: 532: if(FindChannel() == 1)
  3174  064A  120A  118A  246A  120A  118A  	fcall	_FindChannel
  3175  064F  3A01               	xorlw	1
  3176  0650  1D03               	skipz
  3177  0651  2E5D               	goto	l3583
  3178                           
  3179                           ;functions.c: 533: Blink(1);
  3180  0652  3001               	movlw	1
  3181  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0655  00B8               	movwf	Blink@n
  3184  0656  3000               	movlw	0
  3185  0657  00B9               	movwf	Blink@n+1
  3186  0658  120A  158A  2457  120A  118A  	fcall	_Blink
  3187  065D                     l3583:	
  3188                           
  3189                           ;functions.c: 534: SetRFMode(0x00);
  3190  065D  3000               	movlw	0
  3191  065E  120A  158A  2682   	fcall	_SetRFMode
  3192  0661  0008               	return
  3193  0662                     __end_of_TransiverInit:	
  3194                           
  3195                           	psect	text13
  3196  0C57                     __ptext13:	
  3197 ;; *************** function _Blink *****************
  3198 ;; Defined at:
  3199 ;;		line 659 in file "functions.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  n               2   24[BANK0 ] int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  i               2   27[BANK0 ] int 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       2       0       0       0
  3214 ;;      Locals:         0       2       0       0       0
  3215 ;;      Temps:          0       1       0       0       0
  3216 ;;      Totals:         0       5       0       0       0
  3217 ;;Total ram usage:        5 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    7
  3220 ;; This function calls:
  3221 ;;		_DelayDs
  3222 ;; This function is called by:
  3223 ;;		_TransiverInit
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _Blink
  3229  0C57                     _Blink:	
  3230                           
  3231                           ;functions.c: 661: for(int i = 1;i<=n;i++)
  3232                           
  3233                           ;incstack = 0
  3234 ;; hardware stack exceeded
  3235                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3236  0C57  3001               	movlw	1
  3237  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  3238  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  3239  0C5A  00BB               	movwf	Blink@i
  3240  0C5B  3000               	movlw	0
  3241  0C5C  00BC               	movwf	Blink@i+1
  3242  0C5D                     l3575:	
  3243  0C5D  0839               	movf	Blink@n+1,w
  3244  0C5E  3A80               	xorlw	128
  3245  0C5F  00BA               	movwf	??_Blink
  3246  0C60  083C               	movf	Blink@i+1,w
  3247  0C61  3A80               	xorlw	128
  3248  0C62  023A               	subwf	??_Blink,w
  3249  0C63  1D03               	skipz
  3250  0C64  2C67               	goto	u2515
  3251  0C65  083B               	movf	Blink@i,w
  3252  0C66  0238               	subwf	Blink@n,w
  3253  0C67                     u2515:	
  3254  0C67  1C03               	btfss	3,0
  3255  0C68  0008               	return
  3256                           
  3257                           ;functions.c: 662: {
  3258                           ;functions.c: 663: RC1 = 1;
  3259  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0C6B  1487               	bsf	7,1	;volatile
  3262                           
  3263                           ;functions.c: 664: DelayDs(2);
  3264  0C6C  3002               	movlw	2
  3265  0C6D  00B2               	movwf	DelayDs@cnt
  3266  0C6E  3000               	movlw	0
  3267  0C6F  00B3               	movwf	DelayDs@cnt+1
  3268  0C70  120A  158A  2318  120A  158A  	fcall	_DelayDs
  3269                           
  3270                           ;functions.c: 665: RC1 = 0;
  3271  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0C77  1087               	bcf	7,1	;volatile
  3274                           
  3275                           ;functions.c: 666: DelayDs(6);
  3276  0C78  3006               	movlw	6
  3277  0C79  00B2               	movwf	DelayDs@cnt
  3278  0C7A  3000               	movlw	0
  3279  0C7B  00B3               	movwf	DelayDs@cnt+1
  3280  0C7C  120A  158A  2318  120A  158A  	fcall	_DelayDs
  3281  0C81  3001               	movlw	1
  3282  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0C84  07BB               	addwf	Blink@i,f
  3285  0C85  1803               	skipnc
  3286  0C86  0ABC               	incf	Blink@i+1,f
  3287  0C87  3000               	movlw	0
  3288  0C88  07BC               	addwf	Blink@i+1,f
  3289  0C89  2C5D               	goto	l3575
  3290  0C8A                     __end_of_Blink:	
  3291                           
  3292                           	psect	text14
  3293  0DB9                     __ptext14:	
  3294 ;; *************** function _PICInit *****************
  3295 ;; Defined at:
  3296 ;;		line 399 in file "functions.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    6
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           
  3325                           ;psect for function _PICInit
  3326  0DB9                     _PICInit:	
  3327                           
  3328                           ;functions.c: 403: OSCCONbits.IRCF2 = 1;
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _PICInit: [wreg+status,2+status,0]
  3332  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  3334  0DBB  170F               	bsf	15,6	;volatile
  3335                           
  3336                           ;functions.c: 404: OSCCONbits.IRCF1 = 1;
  3337  0DBC  168F               	bsf	15,5	;volatile
  3338                           
  3339                           ;functions.c: 405: OSCCONbits.IRCF0 = 0;
  3340  0DBD  120F               	bcf	15,4	;volatile
  3341                           
  3342                           ;functions.c: 406: OSCCONbits.SCS = 1;
  3343  0DBE  140F               	bsf	15,0	;volatile
  3344                           
  3345                           ;functions.c: 409: PORTA = 0x00;
  3346  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0DC1  0185               	clrf	5	;volatile
  3349                           
  3350                           ;functions.c: 410: PORTB = 0x00;
  3351  0DC2  0186               	clrf	6	;volatile
  3352                           
  3353                           ;functions.c: 411: PORTC = 0x00;
  3354  0DC3  0187               	clrf	7	;volatile
  3355                           
  3356                           ;functions.c: 412: PORTD = 0x00;
  3357  0DC4  0188               	clrf	8	;volatile
  3358                           
  3359                           ;functions.c: 413: PORTE = 0x00;
  3360  0DC5  0189               	clrf	9	;volatile
  3361                           
  3362                           ;functions.c: 415: TRISA = 0b00001011;
  3363  0DC6  300B               	movlw	11
  3364  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0DC9  0085               	movwf	5	;volatile
  3367                           
  3368                           ;functions.c: 416: TRISB = 0b00111101;
  3369  0DCA  303D               	movlw	61
  3370  0DCB  0086               	movwf	6	;volatile
  3371                           
  3372                           ;functions.c: 417: TRISC = 0b00010000;
  3373  0DCC  3010               	movlw	16
  3374  0DCD  0087               	movwf	7	;volatile
  3375                           
  3376                           ;functions.c: 418: TRISD = 0b00000111;
  3377  0DCE  3007               	movlw	7
  3378  0DCF  0088               	movwf	8	;volatile
  3379                           
  3380                           ;functions.c: 419: TRISE = 0b00000111;
  3381  0DD0  3007               	movlw	7
  3382  0DD1  0089               	movwf	9	;volatile
  3383                           
  3384                           ;functions.c: 421: ANSEL = 0b00000000;
  3385  0DD2  1683               	bsf	3,5	;RP0=1, select bank3
  3386  0DD3  1703               	bsf	3,6	;RP1=1, select bank3
  3387  0DD4  0188               	clrf	8	;volatile
  3388                           
  3389                           ;functions.c: 422: ANSELH = 0b00000000;
  3390  0DD5  0189               	clrf	9	;volatile
  3391                           
  3392                           ;functions.c: 423: ANSELbits.ANS0 = 1;
  3393  0DD6  1408               	bsf	8,0	;volatile
  3394                           
  3395                           ;functions.c: 424: ANSELbits.ANS3 = 1;
  3396  0DD7  1588               	bsf	8,3	;volatile
  3397                           
  3398                           ;functions.c: 425: ANSELbits.ANS5 = 1;
  3399  0DD8  1688               	bsf	8,5	;volatile
  3400                           
  3401                           ;functions.c: 426: ANSELbits.ANS6 = 1;
  3402  0DD9  1708               	bsf	8,6	;volatile
  3403                           
  3404                           ;functions.c: 427: ANSELbits.ANS7 = 1;
  3405  0DDA  1788               	bsf	8,7	;volatile
  3406                           
  3407                           ;functions.c: 428: ANSELHbits.ANS8 = 1;
  3408  0DDB  1409               	bsf	9,0	;volatile
  3409                           
  3410                           ;functions.c: 430: OPTION_REGbits.nRBPU = 0;
  3411  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0DDE  1381               	bcf	1,7	;volatile
  3414                           
  3415                           ;functions.c: 431: WPUBbits.WPUB0 = 1;
  3416  0DDF  1415               	bsf	21,0	;volatile
  3417  0DE0                     l379:	
  3418                           ;functions.c: 432: while(!RB0);
  3419                           
  3420  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0DE1  1C06               	btfss	6,0	;volatile
  3422  0DE2  2DE0               	goto	l379
  3423                           
  3424                           ;functions.c: 433: WPUBbits.WPUB5 = 1;
  3425  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  3427  0DE5  1695               	bsf	21,5	;volatile
  3428  0DE6                     l382:	
  3429                           ;functions.c: 434: while(!RB5);
  3430                           
  3431  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0DE7  1E86               	btfss	6,5	;volatile
  3433  0DE8  2DE6               	goto	l382
  3434                           
  3435                           ;functions.c: 437: SSPCONbits.SSPM=0x00;
  3436  0DE9  30F0               	movlw	-16
  3437  0DEA  0594               	andwf	20,f	;volatile
  3438                           
  3439                           ;functions.c: 438: SSPCONbits.CKP=0;
  3440  0DEB  1214               	bcf	20,4	;volatile
  3441                           
  3442                           ;functions.c: 439: SSPSTATbits.CKE=1;
  3443  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0DEE  1714               	bsf	20,6	;volatile
  3446                           
  3447                           ;functions.c: 440: SSPSTATbits.SMP=0;
  3448  0DEF  1394               	bcf	20,7	;volatile
  3449                           
  3450                           ;functions.c: 441: SSPCONbits.SSPEN=0x01;
  3451  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0DF2  1694               	bsf	20,5	;volatile
  3454                           
  3455                           ;functions.c: 442: SSPIE = 0;
  3456  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
  3458  0DF5  118C               	bcf	12,3	;volatile
  3459                           
  3460                           ;functions.c: 445: RA5 = 1;
  3461  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0DF8  1685               	bsf	5,5	;volatile
  3464                           
  3465                           ;functions.c: 446: RA4 = 1;
  3466  0DF9  1605               	bsf	5,4	;volatile
  3467                           
  3468                           ;functions.c: 447: RD4 = 1;
  3469  0DFA  1608               	bsf	8,4	;volatile
  3470                           
  3471                           ;functions.c: 448: RD3 = 1;
  3472  0DFB  1588               	bsf	8,3	;volatile
  3473                           
  3474                           ;functions.c: 450: RB1 = 1;
  3475  0DFC  1486               	bsf	6,1	;volatile
  3476                           
  3477                           ;functions.c: 455: INTCONbits.RBIE = 1;
  3478  0DFD  158B               	bsf	11,3	;volatile
  3479                           
  3480                           ;functions.c: 456: INTCONbits.PEIE = 1;
  3481  0DFE  170B               	bsf	11,6	;volatile
  3482                           
  3483                           ;functions.c: 457: PIE1bits.TMR1IE = 1;
  3484  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  3486  0E01  140C               	bsf	12,0	;volatile
  3487                           
  3488                           ;functions.c: 458: INTCONbits.GIE = 1;
  3489  0E02  178B               	bsf	11,7	;volatile
  3490                           
  3491                           ;functions.c: 459: IOCBbits.IOCB5 = 1;
  3492  0E03  1696               	bsf	22,5	;volatile
  3493                           
  3494                           ;functions.c: 462: T1CON = 0b00110000;
  3495  0E04  3030               	movlw	48
  3496  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0E07  0090               	movwf	16	;volatile
  3499                           
  3500                           ;functions.c: 463: TMR1H = 0x0B;
  3501  0E08  300B               	movlw	11
  3502  0E09  008F               	movwf	15	;volatile
  3503                           
  3504                           ;functions.c: 464: TMR1L = 0xDB;
  3505  0E0A  30DB               	movlw	219
  3506  0E0B  008E               	movwf	14	;volatile
  3507                           
  3508                           ;functions.c: 465: T1CONbits.TMR1ON = 1;
  3509  0E0C  1410               	bsf	16,0	;volatile
  3510                           
  3511                           ;functions.c: 468: ADCON0bits.ADCS0 = 0;
  3512  0E0D  131F               	bcf	31,6	;volatile
  3513                           
  3514                           ;functions.c: 469: ADCON0bits.ADCS1 = 0;
  3515  0E0E  139F               	bcf	31,7	;volatile
  3516                           
  3517                           ;functions.c: 470: ADCON1bits.ADFM = 0;
  3518  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  3520  0E11  139F               	bcf	31,7	;volatile
  3521                           
  3522                           ;functions.c: 471: ADCON1bits.VCFG1 = 0;
  3523  0E12  129F               	bcf	31,5	;volatile
  3524                           
  3525                           ;functions.c: 472: ADCON1bits.VCFG0 = 0;
  3526  0E13  121F               	bcf	31,4	;volatile
  3527                           
  3528                           ;functions.c: 475: intSecondCounter = 0;
  3529  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3530  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0E16  01D7               	clrf	_intSecondCounter
  3532  0E17  01D8               	clrf	_intSecondCounter+1
  3533                           
  3534                           ;functions.c: 476: intHalfSecondCounter = 0;
  3535  0E18  01D3               	clrf	_intHalfSecondCounter
  3536  0E19  01D4               	clrf	_intHalfSecondCounter+1
  3537                           
  3538                           ;functions.c: 477: intMinuteCounter = 0;
  3539  0E1A  01D5               	clrf	_intMinuteCounter
  3540  0E1B  01D6               	clrf	_intMinuteCounter+1
  3541  0E1C  0008               	return
  3542  0E1D                     __end_of_PICInit:	
  3543                           
  3544                           	psect	text15
  3545  0A3D                     __ptext15:	
  3546 ;; *************** function _Mode_5 *****************
  3547 ;; Defined at:
  3548 ;;		line 300 in file "functions.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       1       0       0
  3565 ;;      Totals:         0       0       1       0       0
  3566 ;;Total ram usage:        1 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:   12
  3569 ;; This function calls:
  3570 ;;		_LightWithSensController
  3571 ;;		_TransmittPacket
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function _Mode_5
  3579  0A3D                     _Mode_5:	
  3580                           
  3581                           ;functions.c: 302: if(!RB5)
  3582                           
  3583                           ;incstack = 0
  3584 ;; hardware stack exceeded
  3585                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3586  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0A3F  1A86               	btfsc	6,5	;volatile
  3589  0A40  2A4F               	goto	l3659
  3590                           
  3591                           ;functions.c: 303: {
  3592                           ;functions.c: 304: TransmittPacket(2, 2);
  3593  0A41  3002               	movlw	2
  3594  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0A44  00A7               	movwf	??_Mode_5^(0+128)
  3597  0A45  0827               	movf	??_Mode_5^(0+128),w
  3598  0A46  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0A47  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0A48  00C3               	movwf	TransmittPacket@value
  3601  0A49  3002               	movlw	2
  3602  0A4A  120A  118A  2725  120A  158A  	fcall	_TransmittPacket
  3603  0A4F                     l3659:	
  3604                           
  3605                           ;functions.c: 305: }
  3606                           ;functions.c: 306: LightWithSensController();
  3607  0A4F  120A  158A  248A   	fcall	_LightWithSensController
  3608  0A52  0008               	return
  3609  0A53                     __end_of_Mode_5:	
  3610                           
  3611                           	psect	text16
  3612  09F3                     __ptext16:	
  3613 ;; *************** function _Mode_4 *****************
  3614 ;; Defined at:
  3615 ;;		line 288 in file "functions.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0
  3632 ;;      Totals:         0       0       0       0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:   12
  3636 ;; This function calls:
  3637 ;;		_LightWithSensController
  3638 ;;		_TransmittPacket
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _Mode_4
  3646  09F3                     _Mode_4:	
  3647                           
  3648                           ;functions.c: 290: if(!RB5)
  3649                           
  3650                           ;incstack = 0
  3651 ;; hardware stack exceeded
  3652                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3653  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3654  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3655  09F5  1A86               	btfsc	6,5	;volatile
  3656  09F6  29FF               	goto	l3653
  3657                           
  3658                           ;functions.c: 291: {
  3659                           ;functions.c: 292: TransmittPacket(2, 1);
  3660  09F7  01C3               	clrf	TransmittPacket@value
  3661  09F8  0AC3               	incf	TransmittPacket@value,f
  3662  09F9  3002               	movlw	2
  3663  09FA  120A  118A  2725  120A  158A  	fcall	_TransmittPacket
  3664  09FF                     l3653:	
  3665                           
  3666                           ;functions.c: 293: }
  3667                           ;functions.c: 294: LightWithSensController();
  3668  09FF  120A  158A  248A   	fcall	_LightWithSensController
  3669  0A02  0008               	return
  3670  0A03                     __end_of_Mode_4:	
  3671                           
  3672                           	psect	text17
  3673  0725                     __ptext17:	
  3674 ;; *************** function _TransmittPacket *****************
  3675 ;; Defined at:
  3676 ;;		line 195 in file "functions.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  topic           1    wreg     unsigned char 
  3679 ;;  value           1   35[BANK0 ] unsigned char 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  topic           1    6[BANK1 ] unsigned char 
  3682 ;;  i               2    4[BANK1 ] int 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       1       0       0       0
  3693 ;;      Locals:         0       0       3       0       0
  3694 ;;      Temps:          0       2       0       0       0
  3695 ;;      Totals:         0       3       3       0       0
  3696 ;;Total ram usage:        6 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:   11
  3699 ;; This function calls:
  3700 ;;		_FindChannel
  3701 ;;		_RegisterRead
  3702 ;;		_RegisterSet
  3703 ;;		_SetRFMode
  3704 ;;		_WriteFIFO
  3705 ;;		_timerFunction
  3706 ;; This function is called by:
  3707 ;;		_main
  3708 ;;		_ReceivedPacketHandler
  3709 ;;		_Mode_4
  3710 ;;		_Mode_5
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           
  3715                           ;psect for function _TransmittPacket
  3716  0725                     _TransmittPacket:	
  3717                           
  3718                           ;incstack = 0
  3719 ;; hardware stack exceeded
  3720                           ; Regs used in _TransmittPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3721                           ;TransmittPacket@topic stored from wreg
  3722  0725  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0726  1303               	bcf	3,6	;RP1=0, select bank1
  3724  0727  00A6               	movwf	TransmittPacket@topic^(0+128)
  3725                           
  3726                           ;functions.c: 197: timerFunction(4, 5);
  3727  0728  3004               	movlw	4
  3728  0729  1283               	bcf	3,5	;RP0=0, select bank0
  3729  072A  1303               	bcf	3,6	;RP1=0, select bank0
  3730  072B  00B2               	movwf	timerFunction@intTimerNumber
  3731  072C  3000               	movlw	0
  3732  072D  00B3               	movwf	timerFunction@intTimerNumber+1
  3733  072E  3005               	movlw	5
  3734  072F  00B4               	movwf	timerFunction@intSetSeconds
  3735  0730  3000               	movlw	0
  3736  0731  00B5               	movwf	timerFunction@intSetSeconds+1
  3737  0732  120A  158A  2203  120A  118A  	fcall	_timerFunction
  3738                           
  3739                           ;functions.c: 199: int i = 0;
  3740  0737  1683               	bsf	3,5	;RP0=1, select bank1
  3741  0738  1303               	bcf	3,6	;RP1=0, select bank1
  3742  0739  01A4               	clrf	TransmittPacket@i^(0+128)
  3743  073A  01A5               	clrf	(TransmittPacket@i+1)^(0+128)
  3744                           
  3745                           ;functions.c: 202: SetRFMode(0x20);
  3746  073B  3020               	movlw	32
  3747  073C  120A  158A  2682  120A  118A  	fcall	_SetRFMode
  3748                           
  3749                           ;functions.c: 203: _delay((unsigned long)((10)*(4000000/4000.0)));
  3750  0741  300D               	movlw	13
  3751  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0743  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0744  00C5               	movwf	??_TransmittPacket+1
  3754  0745  30FB               	movlw	251
  3755  0746  00C4               	movwf	??_TransmittPacket
  3756  0747                     u2947:	
  3757  0747  0BC4               	decfsz	??_TransmittPacket,f
  3758  0748  2F47               	goto	u2947
  3759  0749  0BC5               	decfsz	??_TransmittPacket+1,f
  3760  074A  2F47               	goto	u2947
  3761                           
  3762                           ;functions.c: 204: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3763  074B  300E               	movlw	14
  3764  074C  120A  158A  22BC  120A  118A  	fcall	_RegisterRead
  3765  0751  3802               	iorlw	2
  3766  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0753  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0754  00C4               	movwf	??_TransmittPacket
  3769  0755  0844               	movf	??_TransmittPacket,w
  3770  0756  00B9               	movwf	RegisterSet@value
  3771  0757  300E               	movlw	14
  3772  0758  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  3773                           
  3774                           ;functions.c: 205: SetRFMode(0x40);
  3775  075D  3040               	movlw	64
  3776  075E  120A  158A  2682  120A  118A  	fcall	_SetRFMode
  3777  0763                     l3355:	
  3778                           ;functions.c: 206: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3779                           
  3780  0763  300E               	movlw	14
  3781  0764  120A  158A  22BC  120A  118A  	fcall	_RegisterRead
  3782  0769  3902               	andlw	2
  3783  076A  1D03               	btfss	3,2
  3784  076B  2F76               	goto	l3357
  3785                           
  3786                           ;functions.c: 207: {
  3787                           ;functions.c: 208: if(bTimerComplete[4])
  3788  076C  1283               	bcf	3,5	;RP0=0, select bank0
  3789  076D  1303               	bcf	3,6	;RP1=0, select bank0
  3790  076E  084A               	movf	_bTimerComplete+4,w
  3791  076F  1903               	btfsc	3,2
  3792  0770  2F63               	goto	l3355
  3793                           
  3794                           ;functions.c: 209: {
  3795                           ;functions.c: 210: FindChannel();
  3796  0771  120A  118A  246A  120A  118A  	fcall	_FindChannel
  3797  0776                     l3357:	
  3798                           ;functions.c: 211: break;
  3799                           
  3800                           
  3801                           ;functions.c: 212: }
  3802                           ;functions.c: 214: }
  3803                           ;functions.c: 215: SetRFMode(0x80);
  3804  0776  3080               	movlw	128
  3805  0777  120A  158A  2682  120A  118A  	fcall	_SetRFMode
  3806                           
  3807                           ;functions.c: 216: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3808  077C  30A5               	movlw	165
  3809  077D  1283               	bcf	3,5	;RP0=0, select bank0
  3810  077E  1303               	bcf	3,6	;RP1=0, select bank0
  3811  077F  00C4               	movwf	??_TransmittPacket
  3812  0780                     u2957:	
  3813  0780  0BC4               	decfsz	??_TransmittPacket,f
  3814  0781  2F80               	goto	u2957
  3815  0782  2F83               	nop2
  3816                           
  3817                           ;functions.c: 219: WriteFIFO('S');
  3818  0783  3053               	movlw	83
  3819  0784  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3820                           
  3821                           ;functions.c: 220: WriteFIFO('Y');
  3822  0789  3059               	movlw	89
  3823  078A  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3824                           
  3825                           ;functions.c: 221: WriteFIFO('N');
  3826  078F  304E               	movlw	78
  3827  0790  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3828                           
  3829                           ;functions.c: 222: WriteFIFO('C');
  3830  0795  3043               	movlw	67
  3831  0796  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3832                           
  3833                           ;functions.c: 225: WriteFIFO(44);
  3834  079B  302C               	movlw	44
  3835  079C  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3836                           
  3837                           ;functions.c: 226: WriteFIFO(topic);
  3838  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  3839  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  3840  07A3  0826               	movf	TransmittPacket@topic^(0+128),w
  3841  07A4  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3842                           
  3843                           ;functions.c: 227: WriteFIFO(value);
  3844  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3845  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3846  07AB  0843               	movf	TransmittPacket@value,w
  3847  07AC  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3848                           
  3849                           ;functions.c: 228: WriteFIFO(55);
  3850  07B1  3037               	movlw	55
  3851  07B2  120A  158A  21B0  120A  118A  	fcall	_WriteFIFO
  3852  07B7                     l329:	
  3853                           ;functions.c: 231: while(!RB4)
  3854                           
  3855  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  3856  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  3857  07B9  1A06               	btfsc	6,4	;volatile
  3858  07BA  2FC0               	goto	l3381
  3859                           
  3860                           ;functions.c: 232: {
  3861                           ;functions.c: 233: if(bTimerComplete[4])
  3862  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  3863  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  3864  07BD  084A               	movf	_bTimerComplete+4,w
  3865  07BE  1903               	btfsc	3,2
  3866  07BF  2FB7               	goto	l329
  3867  07C0                     l3381:	
  3868                           ;functions.c: 234: break;
  3869                           
  3870                           
  3871                           ;functions.c: 235: }
  3872                           ;functions.c: 236: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3873  07C0  3002               	movlw	2
  3874  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3875  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3876  07C3  00C4               	movwf	??_TransmittPacket
  3877  07C4                     u2967:	
  3878  07C4  0BC4               	decfsz	??_TransmittPacket,f
  3879  07C5  2FC4               	goto	u2967
  3880  07C6  0000               	nop
  3881                           
  3882                           ;functions.c: 237: SetRFMode(0x00);
  3883  07C7  3000               	movlw	0
  3884  07C8  120A  158A  2682  120A  118A  	fcall	_SetRFMode
  3885                           
  3886                           ;functions.c: 238: _delay((unsigned long)((1)*(4000000/4000.0)));
  3887  07CD  30C7               	movlw	199
  3888  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3889  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3890  07D0  00C4               	movwf	??_TransmittPacket
  3891  07D1                     u2977:	
  3892  07D1  2FD2               	nop2
  3893  07D2  0BC4               	decfsz	??_TransmittPacket,f
  3894  07D3  2FD1               	goto	u2977
  3895  07D4  2FD5               	nop2
  3896  07D5  0008               	return
  3897  07D6                     __end_of_TransmittPacket:	
  3898                           
  3899                           	psect	text18
  3900  09B0                     __ptext18:	
  3901 ;; *************** function _WriteFIFO *****************
  3902 ;; Defined at:
  3903 ;;		line 773 in file "functions.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  Data            1    wreg     unsigned char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  Data            1   21[BANK0 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  1    wreg      void 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, pclath, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       0       0       0
  3918 ;;      Locals:         0       1       0       0       0
  3919 ;;      Temps:          0       0       0       0       0
  3920 ;;      Totals:         0       1       0       0       0
  3921 ;;Total ram usage:        1 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    7
  3924 ;; This function calls:
  3925 ;;		_WriteSPI
  3926 ;; This function is called by:
  3927 ;;		_TransmittPacket
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           
  3932                           ;psect for function _WriteFIFO
  3933  09B0                     _WriteFIFO:	
  3934                           
  3935                           ;incstack = 0
  3936 ;; hardware stack exceeded
  3937                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3938                           ;WriteFIFO@Data stored from wreg
  3939  09B0  1283               	bcf	3,5	;RP0=0, select bank0
  3940  09B1  1303               	bcf	3,6	;RP1=0, select bank0
  3941  09B2  00B5               	movwf	WriteFIFO@Data
  3942                           
  3943                           ;functions.c: 775: RA5 = 0;
  3944  09B3  1285               	bcf	5,5	;volatile
  3945                           
  3946                           ;functions.c: 776: WriteSPI(Data);
  3947  09B4  0835               	movf	WriteFIFO@Data,w
  3948  09B5  120A  158A  21D7   	fcall	_WriteSPI
  3949                           
  3950                           ;functions.c: 777: RA5 = 1;
  3951  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  3952  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  3953  09BA  1685               	bsf	5,5	;volatile
  3954  09BB  0008               	return
  3955  09BC                     __end_of_WriteFIFO:	
  3956                           
  3957                           	psect	text19
  3958  046A                     __ptext19:	
  3959 ;; *************** function _FindChannel *****************
  3960 ;; Defined at:
  3961 ;;		line 556 in file "functions.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  i               2    2[BANK1 ] int 
  3966 ;;  cnt             2    0[BANK1 ] int 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      unsigned char 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       0       4       0       0
  3978 ;;      Temps:          0       3       0       0       0
  3979 ;;      Totals:         0       3       4       0       0
  3980 ;;Total ram usage:        7 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:   10
  3983 ;; This function calls:
  3984 ;;		_RegisterRead
  3985 ;;		_RegisterSet
  3986 ;;		_SetRFMode
  3987 ;; This function is called by:
  3988 ;;		_TransiverToReceive
  3989 ;;		_TransmittPacket
  3990 ;;		_TransiverInit
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _FindChannel
  3996  046A                     _FindChannel:	
  3997                           
  3998                           ;functions.c: 558: int cnt = 0;
  3999                           
  4000                           ;incstack = 0
  4001 ;; hardware stack exceeded
  4002                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4003  046A  1683               	bsf	3,5	;RP0=1, select bank1
  4004  046B  1303               	bcf	3,6	;RP1=0, select bank1
  4005  046C  01A0               	clrf	FindChannel@cnt^(0+128)
  4006  046D  01A1               	clrf	(FindChannel@cnt+1)^(0+128)
  4007                           
  4008                           ;functions.c: 559: bChannelFound = 0;
  4009  046E  1283               	bcf	3,5	;RP0=0, select bank0
  4010  046F  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0470  01D9               	clrf	_bChannelFound
  4012                           
  4013                           ;functions.c: 560: channelFound = 0;
  4014  0471  01CB               	clrf	_channelFound
  4015  0472  01CC               	clrf	_channelFound+1
  4016                           
  4017                           ;functions.c: 562: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4018  0473  3006               	movlw	6
  4019  0474  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0475  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0476  00C2               	movwf	??_FindChannel+2
  4022  0477  3013               	movlw	19
  4023  0478  00C1               	movwf	??_FindChannel+1
  4024  0479  30AD               	movlw	173
  4025  047A  00C0               	movwf	??_FindChannel
  4026  047B                     u2987:	
  4027  047B  0BC0               	decfsz	??_FindChannel,f
  4028  047C  2C7B               	goto	u2987
  4029  047D  0BC1               	decfsz	??_FindChannel+1,f
  4030  047E  2C7B               	goto	u2987
  4031  047F  0BC2               	decfsz	??_FindChannel+2,f
  4032  0480  2C7B               	goto	u2987
  4033                           
  4034                           ;functions.c: 563: for (int i = 0; i < 13; i++)
  4035  0481  1683               	bsf	3,5	;RP0=1, select bank1
  4036  0482  1303               	bcf	3,6	;RP1=0, select bank1
  4037  0483  01A2               	clrf	FindChannel@i^(0+128)
  4038  0484  01A3               	clrf	(FindChannel@i+1)^(0+128)
  4039  0485  0823               	movf	(FindChannel@i+1)^(0+128),w
  4040  0486  3A80               	xorlw	128
  4041  0487  00FF               	movwf	127
  4042  0488  3080               	movlw	128
  4043  0489  027F               	subwf	127,w
  4044  048A  1D03               	skipz
  4045  048B  2C8E               	goto	u2145
  4046  048C  300D               	movlw	13
  4047  048D  0222               	subwf	FindChannel@i^(0+128),w
  4048  048E                     u2145:	
  4049  048E  1803               	btfsc	3,0
  4050  048F  2D76               	goto	l3295
  4051  0490                     l3271:	
  4052                           
  4053                           ;functions.c: 564: {
  4054                           ;functions.c: 565: RegisterSet(0x06,ChannelR[i]);
  4055  0490  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0491  1303               	bcf	3,6	;RP1=0, select bank1
  4057  0492  0822               	movf	FindChannel@i^(0+128),w
  4058  0493  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4059  0494  0084               	movwf	4
  4060  0495  120A  158A  2000  120A  118A  	fcall	stringdir
  4061  049A  1283               	bcf	3,5	;RP0=0, select bank0
  4062  049B  1303               	bcf	3,6	;RP1=0, select bank0
  4063  049C  00C0               	movwf	??_FindChannel
  4064  049D  0840               	movf	??_FindChannel,w
  4065  049E  00B9               	movwf	RegisterSet@value
  4066  049F  3006               	movlw	6
  4067  04A0  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4068                           
  4069                           ;functions.c: 566: RegisterSet(0x07,ChannelP[i]);
  4070  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  4071  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  4072  04A7  0822               	movf	FindChannel@i^(0+128),w
  4073  04A8  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4074  04A9  0084               	movwf	4
  4075  04AA  120A  158A  2000  120A  118A  	fcall	stringdir
  4076  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4077  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4078  04B1  00C0               	movwf	??_FindChannel
  4079  04B2  0840               	movf	??_FindChannel,w
  4080  04B3  00B9               	movwf	RegisterSet@value
  4081  04B4  3007               	movlw	7
  4082  04B5  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4083                           
  4084                           ;functions.c: 567: RegisterSet(0x08,ChannelS[i]);
  4085  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  4086  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  4087  04BC  0822               	movf	FindChannel@i^(0+128),w
  4088  04BD  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4089  04BE  0084               	movwf	4
  4090  04BF  120A  158A  2000  120A  118A  	fcall	stringdir
  4091  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  4092  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  4093  04C6  00C0               	movwf	??_FindChannel
  4094  04C7  0840               	movf	??_FindChannel,w
  4095  04C8  00B9               	movwf	RegisterSet@value
  4096  04C9  3008               	movlw	8
  4097  04CA  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4098                           
  4099                           ;functions.c: 568: RegisterSet(0x09,ChannelR[i]);
  4100  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  4101  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  4102  04D1  0822               	movf	FindChannel@i^(0+128),w
  4103  04D2  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4104  04D3  0084               	movwf	4
  4105  04D4  120A  158A  2000  120A  118A  	fcall	stringdir
  4106  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4107  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4108  04DB  00C0               	movwf	??_FindChannel
  4109  04DC  0840               	movf	??_FindChannel,w
  4110  04DD  00B9               	movwf	RegisterSet@value
  4111  04DE  3009               	movlw	9
  4112  04DF  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4113                           
  4114                           ;functions.c: 569: RegisterSet(0x0A,ChannelP[i]);
  4115  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  4116  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  4117  04E6  0822               	movf	FindChannel@i^(0+128),w
  4118  04E7  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4119  04E8  0084               	movwf	4
  4120  04E9  120A  158A  2000  120A  118A  	fcall	stringdir
  4121  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  4122  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  4123  04F0  00C0               	movwf	??_FindChannel
  4124  04F1  0840               	movf	??_FindChannel,w
  4125  04F2  00B9               	movwf	RegisterSet@value
  4126  04F3  300A               	movlw	10
  4127  04F4  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4128                           
  4129                           ;functions.c: 570: RegisterSet(0x0B,ChannelS[i]);
  4130  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  4131  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  4132  04FB  0822               	movf	FindChannel@i^(0+128),w
  4133  04FC  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4134  04FD  0084               	movwf	4
  4135  04FE  120A  158A  2000  120A  118A  	fcall	stringdir
  4136  0503  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0504  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0505  00C0               	movwf	??_FindChannel
  4139  0506  0840               	movf	??_FindChannel,w
  4140  0507  00B9               	movwf	RegisterSet@value
  4141  0508  300B               	movlw	11
  4142  0509  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4143                           
  4144                           ;functions.c: 571: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4145  050E  300E               	movlw	14
  4146  050F  120A  158A  22BC  120A  118A  	fcall	_RegisterRead
  4147  0514  3802               	iorlw	2
  4148  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0517  00C0               	movwf	??_FindChannel
  4151  0518  0840               	movf	??_FindChannel,w
  4152  0519  00B9               	movwf	RegisterSet@value
  4153  051A  300E               	movlw	14
  4154  051B  120A  158A  226D  120A  118A  	fcall	_RegisterSet
  4155                           
  4156                           ;functions.c: 572: SetRFMode(0x40);
  4157  0520  3040               	movlw	64
  4158  0521  120A  158A  2682  120A  118A  	fcall	_SetRFMode
  4159                           
  4160                           ;functions.c: 573: cnt = 0;
  4161  0526  1683               	bsf	3,5	;RP0=1, select bank1
  4162  0527  1303               	bcf	3,6	;RP1=0, select bank1
  4163  0528  01A0               	clrf	FindChannel@cnt^(0+128)
  4164  0529  01A1               	clrf	(FindChannel@cnt+1)^(0+128)
  4165  052A                     l3289:	
  4166                           ;functions.c: 574: while(cnt < 5)
  4167                           
  4168  052A  1683               	bsf	3,5	;RP0=1, select bank1
  4169  052B  1303               	bcf	3,6	;RP1=0, select bank1
  4170  052C  0821               	movf	(FindChannel@cnt+1)^(0+128),w
  4171  052D  3A80               	xorlw	128
  4172  052E  00FF               	movwf	127
  4173  052F  3080               	movlw	128
  4174  0530  027F               	subwf	127,w
  4175  0531  1D03               	skipz
  4176  0532  2D35               	goto	u2165
  4177  0533  3005               	movlw	5
  4178  0534  0220               	subwf	FindChannel@cnt^(0+128),w
  4179  0535                     u2165:	
  4180  0535  1803               	btfsc	3,0
  4181  0536  2D63               	goto	l3291
  4182                           
  4183                           ;functions.c: 575: {
  4184                           ;functions.c: 577: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4185  0537  300E               	movlw	14
  4186  0538  120A  158A  22BC  120A  118A  	fcall	_RegisterRead
  4187  053D  3902               	andlw	2
  4188  053E  1903               	btfsc	3,2
  4189  053F  2D52               	goto	l3287
  4190                           
  4191                           ;functions.c: 578: {
  4192                           ;functions.c: 579: bChannelFound = 1;
  4193  0540  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0541  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0542  01D9               	clrf	_bChannelFound
  4196  0543  0AD9               	incf	_bChannelFound,f
  4197                           
  4198                           ;functions.c: 580: channelFound = i;
  4199  0544  1683               	bsf	3,5	;RP0=1, select bank1
  4200  0545  1303               	bcf	3,6	;RP1=0, select bank1
  4201  0546  0823               	movf	(FindChannel@i+1)^(0+128),w
  4202  0547  1283               	bcf	3,5	;RP0=0, select bank0
  4203  0548  1303               	bcf	3,6	;RP1=0, select bank0
  4204  0549  00CC               	movwf	_channelFound+1
  4205  054A  1683               	bsf	3,5	;RP0=1, select bank1
  4206  054B  1303               	bcf	3,6	;RP1=0, select bank1
  4207  054C  0822               	movf	FindChannel@i^(0+128),w
  4208  054D  1283               	bcf	3,5	;RP0=0, select bank0
  4209  054E  1303               	bcf	3,6	;RP1=0, select bank0
  4210  054F  00CB               	movwf	_channelFound
  4211                           
  4212                           ;functions.c: 581: return 1;
  4213  0550  3001               	movlw	1
  4214  0551  0008               	return
  4215  0552                     l3287:	
  4216                           
  4217                           ;functions.c: 582: }
  4218                           ;functions.c: 583: cnt++;
  4219  0552  3001               	movlw	1
  4220  0553  1683               	bsf	3,5	;RP0=1, select bank1
  4221  0554  1303               	bcf	3,6	;RP1=0, select bank1
  4222  0555  07A0               	addwf	FindChannel@cnt^(0+128),f
  4223  0556  1803               	skipnc
  4224  0557  0AA1               	incf	(FindChannel@cnt+1)^(0+128),f
  4225  0558  3000               	movlw	0
  4226  0559  07A1               	addwf	(FindChannel@cnt+1)^(0+128),f
  4227                           
  4228                           ;functions.c: 584: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4229  055A  30C7               	movlw	199
  4230  055B  1283               	bcf	3,5	;RP0=0, select bank0
  4231  055C  1303               	bcf	3,6	;RP1=0, select bank0
  4232  055D  00C0               	movwf	??_FindChannel
  4233  055E                     u2997:	
  4234  055E  2D5F               	nop2
  4235  055F  0BC0               	decfsz	??_FindChannel,f
  4236  0560  2D5E               	goto	u2997
  4237  0561  2D62               	nop2
  4238  0562  2D2A               	goto	l3289
  4239  0563                     l3291:	
  4240  0563  3001               	movlw	1
  4241  0564  1683               	bsf	3,5	;RP0=1, select bank1
  4242  0565  1303               	bcf	3,6	;RP1=0, select bank1
  4243  0566  07A2               	addwf	FindChannel@i^(0+128),f
  4244  0567  1803               	skipnc
  4245  0568  0AA3               	incf	(FindChannel@i+1)^(0+128),f
  4246  0569  3000               	movlw	0
  4247  056A  07A3               	addwf	(FindChannel@i+1)^(0+128),f
  4248  056B  0823               	movf	(FindChannel@i+1)^(0+128),w
  4249  056C  3A80               	xorlw	128
  4250  056D  00FF               	movwf	127
  4251  056E  3080               	movlw	128
  4252  056F  027F               	subwf	127,w
  4253  0570  1D03               	skipz
  4254  0571  2D74               	goto	u2175
  4255  0572  300D               	movlw	13
  4256  0573  0222               	subwf	FindChannel@i^(0+128),w
  4257  0574                     u2175:	
  4258  0574  1C03               	skipc
  4259  0575  2C90               	goto	l3271
  4260  0576                     l3295:	
  4261                           
  4262                           ;functions.c: 585: }
  4263                           ;functions.c: 588: }
  4264                           ;functions.c: 589: return 0;
  4265  0576  3000               	movlw	0
  4266  0577  0008               	return
  4267  0578                     __end_of_FindChannel:	
  4268                           
  4269                           	psect	text20
  4270  0E82                     __ptext20:	
  4271 ;; *************** function _SetRFMode *****************
  4272 ;; Defined at:
  4273 ;;		line 611 in file "functions.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  mode            1    wreg     unsigned char 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  mode            1   30[BANK0 ] unsigned char 
  4278 ;;  mcparam0_rea    1   31[BANK0 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4288 ;;      Params:         0       0       0       0       0
  4289 ;;      Locals:         0       2       0       0       0
  4290 ;;      Temps:          0       1       0       0       0
  4291 ;;      Totals:         0       3       0       0       0
  4292 ;;Total ram usage:        3 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    9
  4295 ;; This function calls:
  4296 ;;		_RegisterRead
  4297 ;;		_RegisterSet
  4298 ;; This function is called by:
  4299 ;;		_TransiverToReceive
  4300 ;;		_TransiverReadFIFO
  4301 ;;		_TransmittPacket
  4302 ;;		_TransiverInit
  4303 ;;		_FindChannel
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           
  4308                           ;psect for function _SetRFMode
  4309  0E82                     _SetRFMode:	
  4310                           
  4311                           ;incstack = 0
  4312 ;; hardware stack exceeded
  4313                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4314                           ;SetRFMode@mode stored from wreg
  4315  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0E84  00BE               	movwf	SetRFMode@mode
  4318                           
  4319                           ;functions.c: 613: RA4 = 0;
  4320  0E85  1205               	bcf	5,4	;volatile
  4321                           
  4322                           ;functions.c: 614: BYTE mcparam0_read;
  4323                           ;functions.c: 615: mcparam0_read = RegisterRead(0);
  4324  0E86  3000               	movlw	0
  4325  0E87  120A  158A  22BC  120A  158A  	fcall	_RegisterRead
  4326  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0E8E  00BD               	movwf	??_SetRFMode
  4329  0E8F  083D               	movf	??_SetRFMode,w
  4330  0E90  00BF               	movwf	SetRFMode@mcparam0_read
  4331                           
  4332                           ;functions.c: 616: switch (mode) {
  4333  0E91  2EDA               	goto	l3237
  4334  0E92                     l3225:	
  4335                           ;functions.c: 617: case 0x80:
  4336                           
  4337                           
  4338                           ;functions.c: 618: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4339  0E92  083F               	movf	SetRFMode@mcparam0_read,w
  4340  0E93  391F               	andlw	31
  4341  0E94  3880               	iorlw	128
  4342  0E95  00BD               	movwf	??_SetRFMode
  4343  0E96  083D               	movf	??_SetRFMode,w
  4344  0E97  00B9               	movwf	RegisterSet@value
  4345  0E98  3000               	movlw	0
  4346  0E99  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  4347                           
  4348                           ;functions.c: 620: break;
  4349  0E9E  2EED               	goto	l418
  4350  0E9F                     l3227:	
  4351                           ;functions.c: 621: case 0x60:
  4352                           
  4353                           
  4354                           ;functions.c: 622: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4355  0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0EA1  083F               	movf	SetRFMode@mcparam0_read,w
  4358  0EA2  391F               	andlw	31
  4359  0EA3  3860               	iorlw	96
  4360  0EA4  00BD               	movwf	??_SetRFMode
  4361  0EA5  083D               	movf	??_SetRFMode,w
  4362  0EA6  00B9               	movwf	RegisterSet@value
  4363  0EA7  3000               	movlw	0
  4364  0EA8  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  4365                           
  4366                           ;functions.c: 624: break;
  4367  0EAD  2EED               	goto	l418
  4368  0EAE                     l3229:	
  4369                           ;functions.c: 625: case 0x40:
  4370                           
  4371                           
  4372                           ;functions.c: 626: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4373  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  4374  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  4375  0EB0  083F               	movf	SetRFMode@mcparam0_read,w
  4376  0EB1  391F               	andlw	31
  4377  0EB2  3840               	iorlw	64
  4378  0EB3  00BD               	movwf	??_SetRFMode
  4379  0EB4  083D               	movf	??_SetRFMode,w
  4380  0EB5  00B9               	movwf	RegisterSet@value
  4381  0EB6  3000               	movlw	0
  4382  0EB7  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  4383                           
  4384                           ;functions.c: 628: break;
  4385  0EBC  2EED               	goto	l418
  4386  0EBD                     l3231:	
  4387                           ;functions.c: 629: case 0x20:
  4388                           
  4389                           
  4390                           ;functions.c: 630: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4391  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0EBF  083F               	movf	SetRFMode@mcparam0_read,w
  4394  0EC0  391F               	andlw	31
  4395  0EC1  3820               	iorlw	32
  4396  0EC2  00BD               	movwf	??_SetRFMode
  4397  0EC3  083D               	movf	??_SetRFMode,w
  4398  0EC4  00B9               	movwf	RegisterSet@value
  4399  0EC5  3000               	movlw	0
  4400  0EC6  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  4401                           
  4402                           ;functions.c: 632: break;
  4403  0ECB  2EED               	goto	l418
  4404  0ECC                     l3233:	
  4405                           ;functions.c: 633: case 0x00:
  4406                           
  4407                           
  4408                           ;functions.c: 634: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4409  0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0ECE  083F               	movf	SetRFMode@mcparam0_read,w
  4412  0ECF  391F               	andlw	31
  4413  0ED0  00BD               	movwf	??_SetRFMode
  4414  0ED1  083D               	movf	??_SetRFMode,w
  4415  0ED2  00B9               	movwf	RegisterSet@value
  4416  0ED3  3000               	movlw	0
  4417  0ED4  120A  158A  226D  120A  158A  	fcall	_RegisterSet
  4418                           
  4419                           ;functions.c: 637: }
  4420                           
  4421                           ;functions.c: 636: break;
  4422  0ED9  2EED               	goto	l418
  4423  0EDA                     l3237:	
  4424  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0EDC  083E               	movf	SetRFMode@mode,w
  4427                           
  4428                           ; Switch size 1, requested type "space"
  4429                           ; Number of cases is 5, Range of values is 0 to 128
  4430                           ; switch strategies available:
  4431                           ; Name         Instructions Cycles
  4432                           ; simple_byte           16     9 (average)
  4433                           ; jumptable            260     6 (fixed)
  4434                           ;	Chosen strategy is simple_byte
  4435  0EDD  3A00               	xorlw	0	; case 0
  4436  0EDE  1903               	skipnz
  4437  0EDF  2ECC               	goto	l3233
  4438  0EE0  3A20               	xorlw	32	; case 32
  4439  0EE1  1903               	skipnz
  4440  0EE2  2EBD               	goto	l3231
  4441  0EE3  3A60               	xorlw	96	; case 64
  4442  0EE4  1903               	skipnz
  4443  0EE5  2EAE               	goto	l3229
  4444  0EE6  3A20               	xorlw	32	; case 96
  4445  0EE7  1903               	skipnz
  4446  0EE8  2E9F               	goto	l3227
  4447  0EE9  3AE0               	xorlw	224	; case 128
  4448  0EEA  1903               	skipnz
  4449  0EEB  2E92               	goto	l3225
  4450  0EEC  2EED               	goto	l418
  4451  0EED                     l418:	
  4452                           
  4453                           ;functions.c: 638: RA4 = 1;
  4454  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0EEF  1605               	bsf	5,4	;volatile
  4457  0EF0  0008               	return
  4458  0EF1                     __end_of_SetRFMode:	
  4459                           
  4460                           	psect	text21
  4461  0A6D                     __ptext21:	
  4462 ;; *************** function _RegisterSet *****************
  4463 ;; Defined at:
  4464 ;;		line 720 in file "functions.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  adress          1    wreg     unsigned char 
  4467 ;;  value           1   25[BANK0 ] unsigned char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  adress          1   28[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       1       0       0       0
  4480 ;;      Locals:         0       1       0       0       0
  4481 ;;      Temps:          0       2       0       0       0
  4482 ;;      Totals:         0       4       0       0       0
  4483 ;;Total ram usage:        4 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    7
  4486 ;; This function calls:
  4487 ;;		_WriteSPI
  4488 ;; This function is called by:
  4489 ;;		_TransiverToReceive
  4490 ;;		_TransmittPacket
  4491 ;;		_TransiverInit
  4492 ;;		_FindChannel
  4493 ;;		_SetRFMode
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _RegisterSet
  4499  0A6D                     _RegisterSet:	
  4500                           
  4501                           ;incstack = 0
  4502 ;; hardware stack exceeded
  4503                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4504                           ;RegisterSet@adress stored from wreg
  4505  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  4506  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  4507  0A6F  00BC               	movwf	RegisterSet@adress
  4508                           
  4509                           ;functions.c: 722: RA4 = 0;
  4510  0A70  1205               	bcf	5,4	;volatile
  4511                           
  4512                           ;functions.c: 723: adress = (adress<<1);
  4513  0A71  083C               	movf	RegisterSet@adress,w
  4514  0A72  00BA               	movwf	??_RegisterSet
  4515  0A73  073A               	addwf	??_RegisterSet,w
  4516  0A74  00BB               	movwf	??_RegisterSet+1
  4517  0A75  083B               	movf	??_RegisterSet+1,w
  4518  0A76  00BC               	movwf	RegisterSet@adress
  4519                           
  4520                           ;functions.c: 724: WriteSPI(adress);
  4521  0A77  083C               	movf	RegisterSet@adress,w
  4522  0A78  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  4523                           
  4524                           ;functions.c: 725: WriteSPI(value);
  4525  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0A7F  0839               	movf	RegisterSet@value,w
  4528  0A80  120A  158A  21D7   	fcall	_WriteSPI
  4529                           
  4530                           ;functions.c: 726: RA4 = 1;
  4531  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0A85  1605               	bsf	5,4	;volatile
  4534  0A86  0008               	return
  4535  0A87                     __end_of_RegisterSet:	
  4536                           
  4537                           	psect	text22
  4538  0ABC                     __ptext22:	
  4539 ;; *************** function _RegisterRead *****************
  4540 ;; Defined at:
  4541 ;;		line 690 in file "functions.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  adress          1    wreg     unsigned char 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  adress          1   24[BANK0 ] unsigned char 
  4546 ;;  value           1   23[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      unsigned char 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       0       0
  4557 ;;      Locals:         0       2       0       0       0
  4558 ;;      Temps:          0       2       0       0       0
  4559 ;;      Totals:         0       4       0       0       0
  4560 ;;Total ram usage:        4 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    8
  4563 ;; This function calls:
  4564 ;;		_ReadSPI
  4565 ;;		_WriteSPI
  4566 ;; This function is called by:
  4567 ;;		_TransiverToReceive
  4568 ;;		_TransmittPacket
  4569 ;;		_TransiverInit
  4570 ;;		_FindChannel
  4571 ;;		_SetRFMode
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _RegisterRead
  4577  0ABC                     _RegisterRead:	
  4578                           
  4579                           ;incstack = 0
  4580 ;; hardware stack exceeded
  4581                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4582                           ;RegisterRead@adress stored from wreg
  4583  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0ABE  00B8               	movwf	RegisterRead@adress
  4586                           
  4587                           ;functions.c: 692: BYTE value;
  4588                           ;functions.c: 693: RA4 = 0;
  4589  0ABF  1205               	bcf	5,4	;volatile
  4590                           
  4591                           ;functions.c: 694: adress = ((adress<<1)|0x40);
  4592  0AC0  0838               	movf	RegisterRead@adress,w
  4593  0AC1  00B5               	movwf	??_RegisterRead
  4594  0AC2  0735               	addwf	??_RegisterRead,w
  4595  0AC3  3840               	iorlw	64
  4596  0AC4  00B6               	movwf	??_RegisterRead+1
  4597  0AC5  0836               	movf	??_RegisterRead+1,w
  4598  0AC6  00B8               	movwf	RegisterRead@adress
  4599                           
  4600                           ;functions.c: 695: WriteSPI(adress);
  4601  0AC7  0838               	movf	RegisterRead@adress,w
  4602  0AC8  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  4603                           
  4604                           ;functions.c: 696: value = ReadSPI();
  4605  0ACD  120A  158A  218E   	fcall	_ReadSPI
  4606  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  4608  0AD2  00B5               	movwf	??_RegisterRead
  4609  0AD3  0835               	movf	??_RegisterRead,w
  4610  0AD4  00B7               	movwf	RegisterRead@value
  4611                           
  4612                           ;functions.c: 697: RA4 = 1;
  4613  0AD5  1605               	bsf	5,4	;volatile
  4614                           
  4615                           ;functions.c: 698: return value;
  4616  0AD6  0837               	movf	RegisterRead@value,w
  4617  0AD7  0008               	return
  4618  0AD8                     __end_of_RegisterRead:	
  4619                           
  4620                           	psect	text23
  4621  09BC                     __ptext23:	
  4622 ;; *************** function _Mode_2 *****************
  4623 ;; Defined at:
  4624 ;;		line 269 in file "functions.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; Hardware stack levels required when called:   10
  4645 ;; This function calls:
  4646 ;;		_LightWithSensController
  4647 ;; This function is called by:
  4648 ;;		_main
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _Mode_2
  4654  09BC                     _Mode_2:	
  4655                           
  4656                           ;functions.c: 271: LightWithSensController();
  4657                           
  4658                           ;incstack = 0
  4659 ;; hardware stack exceeded
  4660                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4661  09BC  120A  158A  248A  120A  158A  	fcall	_LightWithSensController
  4662                           
  4663                           ;functions.c: 272: if(RC2)
  4664  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  4665  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  4666  09C3  1D07               	btfss	7,2	;volatile
  4667  09C4  29C7               	goto	l345
  4668                           
  4669                           ;functions.c: 273: RC1 = 1;
  4670  09C5  1487               	bsf	7,1	;volatile
  4671  09C6  0008               	return
  4672  09C7                     l345:	
  4673                           
  4674                           ;functions.c: 274: else
  4675                           ;functions.c: 275: RC1 = 0;
  4676  09C7  1087               	bcf	7,1	;volatile
  4677  09C8  0008               	return
  4678  09C9                     __end_of_Mode_2:	
  4679                           
  4680                           	psect	text24
  4681  0A53                     __ptext24:	
  4682 ;; *************** function _Mode_1 *****************
  4683 ;; Defined at:
  4684 ;;		line 255 in file "functions.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;		None
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;		None
  4689 ;; Return value:  Size  Location     Type
  4690 ;;                  1    wreg      void 
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, pclath, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4698 ;;      Params:         0       0       0       0       0
  4699 ;;      Locals:         0       0       0       0       0
  4700 ;;      Temps:          0       0       0       0       0
  4701 ;;      Totals:         0       0       0       0       0
  4702 ;;Total ram usage:        0 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    9
  4705 ;; This function calls:
  4706 ;;		_DarknessCheck
  4707 ;; This function is called by:
  4708 ;;		_main
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           
  4713                           ;psect for function _Mode_1
  4714  0A53                     _Mode_1:	
  4715                           
  4716                           ;functions.c: 258: if((intSecondCounter == 30)&&(!RC2))
  4717                           
  4718                           ;incstack = 0
  4719 ;; hardware stack exceeded
  4720                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4721  0A53  301E               	movlw	30
  4722  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  4723  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  4724  0A56  0657               	xorwf	_intSecondCounter,w
  4725  0A57  0458               	iorwf	_intSecondCounter+1,w
  4726  0A58  1903               	btfsc	3,2
  4727  0A59  1907               	btfsc	7,2	;volatile
  4728  0A5A  2A60               	goto	l3637
  4729                           
  4730                           ;functions.c: 259: DarknessCheck();
  4731  0A5B  120A  118A  27D6  120A  158A  	fcall	_DarknessCheck
  4732  0A60                     l3637:	
  4733                           
  4734                           ;functions.c: 260: if((intBlinkCycle == 1)&&(bDark == 1))
  4735  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  4736  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  4737  0A62  034F               	decf	_intBlinkCycle,w
  4738  0A63  0450               	iorwf	_intBlinkCycle+1,w
  4739  0A64  1D03               	btfss	3,2
  4740  0A65  2A6B               	goto	l340
  4741  0A66  035A               	decf	_bDark,w
  4742  0A67  1D03               	btfss	3,2
  4743  0A68  2A6B               	goto	l340
  4744                           
  4745                           ;functions.c: 261: RC2 = 1;
  4746  0A69  1507               	bsf	7,2	;volatile
  4747  0A6A  0008               	return
  4748  0A6B                     l340:	
  4749                           
  4750                           ;functions.c: 262: else
  4751                           ;functions.c: 263: RC2 = 0;
  4752  0A6B  1107               	bcf	7,2	;volatile
  4753  0A6C  0008               	return
  4754  0A6D                     __end_of_Mode_1:	
  4755                           
  4756                           	psect	text25
  4757  0982                     __ptext25:	
  4758 ;; *************** function _Mode_0 *****************
  4759 ;; Defined at:
  4760 ;;		line 247 in file "functions.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4774 ;;      Params:         0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0
  4777 ;;      Totals:         0       0       0       0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:   10
  4781 ;; This function calls:
  4782 ;;		_LightWithSensController
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _Mode_0
  4790  0982                     _Mode_0:	
  4791                           
  4792                           ;functions.c: 249: LightWithSensController();
  4793                           
  4794                           ;incstack = 0
  4795 ;; hardware stack exceeded
  4796                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4797  0982  120A  158A  248A   	fcall	_LightWithSensController
  4798  0985  0008               	return
  4799  0986                     __end_of_Mode_0:	
  4800                           
  4801                           	psect	text26
  4802  0C8A                     __ptext26:	
  4803 ;; *************** function _LightWithSensController *****************
  4804 ;; Defined at:
  4805 ;;		line 313 in file "functions.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    9
  4826 ;; This function calls:
  4827 ;;		_DarknessCheck
  4828 ;;		_timerFunction
  4829 ;; This function is called by:
  4830 ;;		_Mode_0
  4831 ;;		_Mode_2
  4832 ;;		_Mode_4
  4833 ;;		_Mode_5
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function _LightWithSensController
  4839  0C8A                     _LightWithSensController:	
  4840                           
  4841                           ;functions.c: 317: if((intSecondCounter == 30)&&(!RC2))
  4842                           
  4843                           ;incstack = 0
  4844 ;; hardware stack exceeded
  4845                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4846  0C8A  301E               	movlw	30
  4847  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4848  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  4849  0C8D  0657               	xorwf	_intSecondCounter,w
  4850  0C8E  0458               	iorwf	_intSecondCounter+1,w
  4851  0C8F  1903               	btfsc	3,2
  4852  0C90  1907               	btfsc	7,2	;volatile
  4853  0C91  2C97               	goto	l3547
  4854                           
  4855                           ;functions.c: 318: DarknessCheck();
  4856  0C92  120A  118A  27D6  120A  158A  	fcall	_DarknessCheck
  4857  0C97                     l3547:	
  4858                           
  4859                           ;functions.c: 322: if((bDark == 1)&&(RA1)&&(!RC2))
  4860  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  4861  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  4862  0C99  035A               	decf	_bDark,w
  4863  0C9A  1903               	btfsc	3,2
  4864  0C9B  1C85               	btfss	5,1	;volatile
  4865  0C9C  2CAC               	goto	l3557
  4866  0C9D  1907               	btfsc	7,2	;volatile
  4867  0C9E  2CAC               	goto	l3557
  4868                           
  4869                           ;functions.c: 323: {
  4870                           ;functions.c: 325: RC2 = 1;
  4871  0C9F  1507               	bsf	7,2	;volatile
  4872                           
  4873                           ;functions.c: 327: timerFunction(0,120);
  4874  0CA0  3000               	movlw	0
  4875  0CA1  00B2               	movwf	timerFunction@intTimerNumber
  4876  0CA2  00B3               	movwf	timerFunction@intTimerNumber+1
  4877  0CA3  3078               	movlw	120
  4878  0CA4  00B4               	movwf	timerFunction@intSetSeconds
  4879  0CA5  3000               	movlw	0
  4880  0CA6  00B5               	movwf	timerFunction@intSetSeconds+1
  4881  0CA7  120A  158A  2203  120A  158A  	fcall	_timerFunction
  4882  0CAC                     l3557:	
  4883                           
  4884                           ;functions.c: 328: }
  4885                           ;functions.c: 331: if(bTimerComplete[0])
  4886  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  4887  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  4888  0CAE  0846               	movf	_bTimerComplete,w
  4889  0CAF  1903               	btfsc	3,2
  4890  0CB0  0008               	return
  4891                           
  4892                           ;functions.c: 332: {
  4893                           ;functions.c: 333: DarknessCheck();
  4894  0CB1  120A  118A  27D6  120A  158A  	fcall	_DarknessCheck
  4895                           
  4896                           ;functions.c: 334: if((bDark)&&(RA1))
  4897  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  4898  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  4899  0CB8  085A               	movf	_bDark,w
  4900  0CB9  1D03               	btfss	3,2
  4901  0CBA  1C85               	btfss	5,1	;volatile
  4902  0CBB  2CC7               	goto	l364
  4903                           
  4904                           ;functions.c: 335: {
  4905                           ;functions.c: 336: timerFunction(0,120);
  4906  0CBC  3000               	movlw	0
  4907  0CBD  00B2               	movwf	timerFunction@intTimerNumber
  4908  0CBE  00B3               	movwf	timerFunction@intTimerNumber+1
  4909  0CBF  3078               	movlw	120
  4910  0CC0  00B4               	movwf	timerFunction@intSetSeconds
  4911  0CC1  3000               	movlw	0
  4912  0CC2  00B5               	movwf	timerFunction@intSetSeconds+1
  4913  0CC3  120A  158A  2203   	fcall	_timerFunction
  4914                           
  4915                           ;functions.c: 337: }
  4916  0CC6  0008               	return
  4917  0CC7                     l364:	
  4918                           
  4919                           ;functions.c: 338: else
  4920                           ;functions.c: 339: RC2 = 0;
  4921  0CC7  1107               	bcf	7,2	;volatile
  4922  0CC8  0008               	return
  4923  0CC9                     __end_of_LightWithSensController:	
  4924                           
  4925                           	psect	text27
  4926  0A03                     __ptext27:	
  4927 ;; *************** function _timerFunction *****************
  4928 ;; Defined at:
  4929 ;;		line 364 in file "functions.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  intTimerNumb    2   18[BANK0 ] int 
  4932 ;;  intSetSecond    2   20[BANK0 ] int 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      unsigned char 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         0       4       0       0       0
  4945 ;;      Locals:         0       0       0       0       0
  4946 ;;      Temps:          0       1       0       0       0
  4947 ;;      Totals:         0       5       0       0       0
  4948 ;;Total ram usage:        5 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    6
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_TransiverToReceive
  4955 ;;		_TransiverReadFIFO
  4956 ;;		_TransmittPacket
  4957 ;;		_LightWithSensController
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _timerFunction
  4963  0A03                     _timerFunction:	
  4964                           
  4965                           ;functions.c: 366: intClockTimer[intTimerNumber] = intSetSeconds;
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  4969  0A03  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0A04  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0A05  0832               	movf	timerFunction@intTimerNumber,w
  4972  0A06  00B6               	movwf	??_timerFunction
  4973  0A07  0736               	addwf	??_timerFunction,w
  4974  0A08  3ED0               	addlw	(low (_intClockTimer| 0))& (0+255)
  4975  0A09  0084               	movwf	4
  4976  0A0A  0834               	movf	timerFunction@intSetSeconds,w
  4977  0A0B  1383               	bcf	3,7	;select IRP bank1
  4978  0A0C  0080               	movwf	0
  4979  0A0D  0A84               	incf	4,f
  4980  0A0E  0835               	movf	timerFunction@intSetSeconds+1,w
  4981  0A0F  0080               	movwf	0
  4982                           
  4983                           ;functions.c: 367: bTimerComplete[intTimerNumber] = 0;
  4984  0A10  0832               	movf	timerFunction@intTimerNumber,w
  4985  0A11  3E46               	addlw	(low (_bTimerComplete| 0))& (0+255)
  4986  0A12  0084               	movwf	4
  4987  0A13  0180               	clrf	0
  4988  0A14  0008               	return
  4989  0A15                     __end_of_timerFunction:	
  4990                           ;functions.c: 368: return 1;
  4991                           ;	Return value of _timerFunction is never used
  4992                           
  4993                           
  4994                           	psect	text28
  4995  07D6                     __ptext28:	
  4996 ;; *************** function _DarknessCheck *****************
  4997 ;; Defined at:
  4998 ;;		line 897 in file "functions.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  darknessValu    1   27[BANK0 ] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0, pclath, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5012 ;;      Params:         0       0       0       0       0
  5013 ;;      Locals:         0       1       0       0       0
  5014 ;;      Temps:          0       1       0       0       0
  5015 ;;      Totals:         0       2       0       0       0
  5016 ;;Total ram usage:        2 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    8
  5019 ;; This function calls:
  5020 ;;		_AnalogValue
  5021 ;;		_eeprom_read
  5022 ;; This function is called by:
  5023 ;;		_ReceivedPacketHandler
  5024 ;;		_Mode_1
  5025 ;;		_LightWithSensController
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _DarknessCheck
  5031  07D6                     _DarknessCheck:	
  5032                           
  5033                           ;functions.c: 899: unsigned char darknessValue;
  5034                           ;functions.c: 900: RC0 = 0;
  5035                           
  5036                           ;incstack = 0
  5037 ;; hardware stack exceeded
  5038                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5039  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  5040  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  5041  07D8  1007               	bcf	7,0	;volatile
  5042                           
  5043                           ;functions.c: 902: if(bValueFromPot == TRUE)
  5044  07D9  035D               	decf	_bValueFromPot,w
  5045  07DA  1D03               	btfss	3,2
  5046  07DB  2FE3               	goto	l3399
  5047                           
  5048                           ;functions.c: 903: darknessValue= AnalogValue(3);
  5049  07DC  3003               	movlw	3
  5050  07DD  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  5051  07E2  2FE9               	goto	L2
  5052  07E3                     l3399:	
  5053                           
  5054                           ;functions.c: 904: else
  5055                           ;functions.c: 905: darknessValue=eeprom_read(0);
  5056  07E3  3000               	movlw	0
  5057  07E4  120A  158A  235F  120A  118A  	fcall	_eeprom_read
  5058  07E9                     L2:	
  5059  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  5060  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  5061  07EB  00BA               	movwf	??_DarknessCheck
  5062  07EC  083A               	movf	??_DarknessCheck,w
  5063  07ED  00BB               	movwf	DarknessCheck@darknessValue
  5064                           
  5065                           ;functions.c: 907: if(AnalogValue(0)>darknessValue)
  5066  07EE  3000               	movlw	0
  5067  07EF  120A  158A  23D2  120A  118A  	fcall	_AnalogValue
  5068  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  5069  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  5070  07F6  023B               	subwf	DarknessCheck@darknessValue,w
  5071  07F7  1803               	skipnc
  5072  07F8  2FFC               	goto	l3403
  5073                           
  5074                           ;functions.c: 908: bDark = 1;
  5075  07F9  01DA               	clrf	_bDark
  5076  07FA  0ADA               	incf	_bDark,f
  5077  07FB  2FFD               	goto	l3405
  5078  07FC                     l3403:	
  5079                           
  5080                           ;functions.c: 909: else
  5081                           ;functions.c: 910: bDark = 0;
  5082  07FC  01DA               	clrf	_bDark
  5083  07FD                     l3405:	
  5084                           
  5085                           ;functions.c: 911: RC0 = 1;
  5086  07FD  1407               	bsf	7,0	;volatile
  5087  07FE  0008               	return
  5088  07FF                     __end_of_DarknessCheck:	
  5089                           
  5090                           	psect	text29
  5091  0B5F                     __ptext29:	
  5092 ;; *************** function _eeprom_read *****************
  5093 ;; Defined at:
  5094 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  addr            1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  addr            1   19[BANK0 ] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      unsigned char 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       0       0       0       0
  5109 ;;      Locals:         0       1       0       0       0
  5110 ;;      Temps:          0       1       0       0       0
  5111 ;;      Totals:         0       2       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    6
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_ReceivedPacketHandler
  5119 ;;		_DarknessCheck
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _eeprom_read
  5125  0B5F                     _eeprom_read:	
  5126                           
  5127                           ;incstack = 0
  5128 ;; hardware stack exceeded
  5129                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5130                           ;eeprom_read@addr stored from wreg
  5131  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0B61  00B3               	movwf	eeprom_read@addr
  5134  0B62  2B65               	goto	l651
  5135  0B63                     u2181:	
  5136  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0B64  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0B65                     l651:	
  5139  0B65  0064               	clrwdt	;# 
  5140  0B66  1683               	bsf	3,5	;RP0=1, select bank3
  5141  0B67  1703               	bsf	3,6	;RP1=1, select bank3
  5142  0B68  188C               	btfsc	12,1	;volsfr
  5143  0B69  2B63               	goto	u2181
  5144  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  5145  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  5146  0B6C  0833               	movf	eeprom_read@addr,w
  5147  0B6D  1283               	bcf	3,5	;RP0=0, select bank2
  5148  0B6E  1703               	bsf	3,6	;RP1=1, select bank2
  5149  0B6F  008D               	movwf	13	;volatile
  5150  0B70  303F               	movlw	63
  5151  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0B73  00B2               	movwf	??_eeprom_read
  5154  0B74  0832               	movf	??_eeprom_read,w
  5155  0B75  1683               	bsf	3,5	;RP0=1, select bank3
  5156  0B76  1703               	bsf	3,6	;RP1=1, select bank3
  5157  0B77  058C               	andwf	12,f	;volsfr
  5158  0B78  140C               	bsf	12,0	;volsfr
  5159  0B79  1003               	clrc
  5160  0B7A  180C               	btfsc	12,0	;volsfr
  5161  0B7B  1403               	setc
  5162  0B7C  3000               	movlw	0
  5163  0B7D  1803               	skipnc
  5164  0B7E  3001               	movlw	1
  5165  0B7F  1283               	bcf	3,5	;RP0=0, select bank2
  5166  0B80  1703               	bsf	3,6	;RP1=1, select bank2
  5167  0B81  080C               	movf	12,w	;volatile
  5168  0B82  0008               	return
  5169  0B83                     __end_of_eeprom_read:	
  5170                           
  5171                           	psect	text30
  5172  0BD2                     __ptext30:	
  5173 ;; *************** function _AnalogValue *****************
  5174 ;; Defined at:
  5175 ;;		line 870 in file "functions.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  channel         1    wreg     unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  channel         1   25[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      unsigned char 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       0       0       0       0
  5190 ;;      Locals:         0       1       0       0       0
  5191 ;;      Temps:          0       1       0       0       0
  5192 ;;      Totals:         0       2       0       0       0
  5193 ;;Total ram usage:        2 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    7
  5196 ;; This function calls:
  5197 ;;		_DelayDs
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;;		_ReceivedPacketHandler
  5201 ;;		_DarknessCheck
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _AnalogValue
  5207  0BD2                     _AnalogValue:	
  5208                           
  5209                           ;incstack = 0
  5210 ;; hardware stack exceeded
  5211                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5212                           ;AnalogValue@channel stored from wreg
  5213  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  5214  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  5215  0BD4  00B9               	movwf	AnalogValue@channel
  5216                           
  5217                           ;functions.c: 872: ADCON0bits.CHS = channel;
  5218  0BD5  0839               	movf	AnalogValue@channel,w
  5219  0BD6  00B8               	movwf	??_AnalogValue
  5220  0BD7  0DB8               	rlf	??_AnalogValue,f
  5221  0BD8  0DB8               	rlf	??_AnalogValue,f
  5222  0BD9  081F               	movf	31,w	;volatile
  5223  0BDA  0638               	xorwf	??_AnalogValue,w
  5224  0BDB  39C3               	andlw	-61
  5225  0BDC  0638               	xorwf	??_AnalogValue,w
  5226  0BDD  009F               	movwf	31	;volatile
  5227                           
  5228                           ;functions.c: 873: ADCON0bits.ADON = 1;
  5229  0BDE  141F               	bsf	31,0	;volatile
  5230                           
  5231                           ;functions.c: 874: DelayDs(1);
  5232  0BDF  3001               	movlw	1
  5233  0BE0  00B2               	movwf	DelayDs@cnt
  5234  0BE1  3000               	movlw	0
  5235  0BE2  00B3               	movwf	DelayDs@cnt+1
  5236  0BE3  120A  158A  2318  120A  158A  	fcall	_DelayDs
  5237                           
  5238                           ;functions.c: 875: ADCON0bits.GO = 1;
  5239  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0BEA  149F               	bsf	31,1	;volatile
  5242                           
  5243                           ;functions.c: 876: DelayDs(1);
  5244  0BEB  3001               	movlw	1
  5245  0BEC  00B2               	movwf	DelayDs@cnt
  5246  0BED  3000               	movlw	0
  5247  0BEE  00B3               	movwf	DelayDs@cnt+1
  5248  0BEF  120A  158A  2318  120A  158A  	fcall	_DelayDs
  5249  0BF4                     l458:	
  5250                           ;functions.c: 877: while(ADCON0bits.GO);
  5251                           
  5252  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0BF6  189F               	btfsc	31,1	;volatile
  5255  0BF7  2BF4               	goto	l458
  5256                           
  5257                           ;functions.c: 878: ADCON0bits.ADON = 0;
  5258  0BF8  101F               	bcf	31,0	;volatile
  5259                           
  5260                           ;functions.c: 879: return ADRESH;
  5261  0BF9  081E               	movf	30,w	;volatile
  5262  0BFA  0008               	return
  5263  0BFB                     __end_of_AnalogValue:	
  5264                           
  5265                           	psect	text31
  5266  0B18                     __ptext31:	
  5267 ;; *************** function _DelayDs *****************
  5268 ;; Defined at:
  5269 ;;		line 482 in file "functions.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  cnt             2   18[BANK0 ] int 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  i               2   22[BANK0 ] int 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         0       2       0       0       0
  5284 ;;      Locals:         0       2       0       0       0
  5285 ;;      Temps:          0       2       0       0       0
  5286 ;;      Totals:         0       6       0       0       0
  5287 ;;Total ram usage:        6 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    6
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_ReceivedPacketHandler
  5294 ;;		_Blink
  5295 ;;		_AnalogValue
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           
  5300                           ;psect for function _DelayDs
  5301  0B18                     _DelayDs:	
  5302                           
  5303                           ;functions.c: 483: int i;
  5304                           ;functions.c: 484: for(i=0;i<cnt;i++){
  5305                           
  5306                           ;incstack = 0
  5307 ;; hardware stack exceeded
  5308                           ; Regs used in _DelayDs: [wreg+status,2]
  5309  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  5310  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  5311  0B1A  01B6               	clrf	DelayDs@i
  5312  0B1B  01B7               	clrf	DelayDs@i+1
  5313  0B1C                     l388:	
  5314  0B1C  0837               	movf	DelayDs@i+1,w
  5315  0B1D  3A80               	xorlw	128
  5316  0B1E  00B4               	movwf	??_DelayDs
  5317  0B1F  0833               	movf	DelayDs@cnt+1,w
  5318  0B20  3A80               	xorlw	128
  5319  0B21  0234               	subwf	??_DelayDs,w
  5320  0B22  1D03               	skipz
  5321  0B23  2B26               	goto	u2125
  5322  0B24  0832               	movf	DelayDs@cnt,w
  5323  0B25  0236               	subwf	DelayDs@i,w
  5324  0B26                     u2125:	
  5325  0B26  1803               	btfsc	3,0
  5326  0B27  0008               	return
  5327                           
  5328                           ;functions.c: 485: _delay((unsigned long)((100)*(4000000/4000.0)));
  5329  0B28  3082               	movlw	130
  5330  0B29  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0B2B  00B5               	movwf	??_DelayDs+1
  5333  0B2C  30DD               	movlw	221
  5334  0B2D  00B4               	movwf	??_DelayDs
  5335  0B2E                     u3007:	
  5336  0B2E  0BB4               	decfsz	??_DelayDs,f
  5337  0B2F  2B2E               	goto	u3007
  5338  0B30  0BB5               	decfsz	??_DelayDs+1,f
  5339  0B31  2B2E               	goto	u3007
  5340  0B32  3001               	movlw	1
  5341  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  5342  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  5343  0B35  07B6               	addwf	DelayDs@i,f
  5344  0B36  1803               	skipnc
  5345  0B37  0AB7               	incf	DelayDs@i+1,f
  5346  0B38  3000               	movlw	0
  5347  0B39  07B7               	addwf	DelayDs@i+1,f
  5348  0B3A  2B1C               	goto	l388
  5349  0B3B                     __end_of_DelayDs:	
  5350                           
  5351                           	psect	text32
  5352  0F66                     __ptext32:	
  5353 ;; *************** function _ClockInit *****************
  5354 ;; Defined at:
  5355 ;;		line 6 in file "MCP79510.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  cnt             1   22[BANK0 ] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         0       0       0       0       0
  5370 ;;      Locals:         0       1       0       0       0
  5371 ;;      Temps:          0       1       0       0       0
  5372 ;;      Totals:         0       2       0       0       0
  5373 ;;Total ram usage:        2 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    8
  5376 ;; This function calls:
  5377 ;;		_ReadSPI
  5378 ;;		_WriteSPI
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function _ClockInit
  5386  0F66                     _ClockInit:	
  5387                           
  5388                           ;MCP79510.c: 8: RD4 = 0;
  5389                           
  5390                           ;incstack = 0
  5391 ;; hardware stack exceeded
  5392                           ; Regs used in _ClockInit: [wreg+status,2+status,0+pclath+cstack]
  5393  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  5395  0F68  1208               	bcf	8,4	;volatile
  5396                           
  5397                           ;MCP79510.c: 9: WriteSPI(0x12);
  5398  0F69  3012               	movlw	18
  5399  0F6A  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5400                           
  5401                           ;MCP79510.c: 10: WriteSPI(0x01);
  5402  0F6F  3001               	movlw	1
  5403  0F70  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5404                           
  5405                           ;MCP79510.c: 11: WriteSPI(0x00);
  5406  0F75  3000               	movlw	0
  5407  0F76  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5408                           
  5409                           ;MCP79510.c: 12: RD4 = 1;
  5410  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0F7D  1608               	bsf	8,4	;volatile
  5413                           
  5414                           ;MCP79510.c: 13: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5415  0F7E  300C               	movlw	12
  5416  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0F81  00B5               	movwf	??_ClockInit
  5419  0F82                     u3017:	
  5420  0F82  0BB5               	decfsz	??_ClockInit,f
  5421  0F83  2F82               	goto	u3017
  5422  0F84  0000               	nop
  5423                           
  5424                           ;MCP79510.c: 14: RD4 = 0;
  5425  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0F87  1208               	bcf	8,4	;volatile
  5428                           
  5429                           ;MCP79510.c: 15: WriteSPI(0x12);
  5430  0F88  3012               	movlw	18
  5431  0F89  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5432                           
  5433                           ;MCP79510.c: 16: WriteSPI(0x02);
  5434  0F8E  3002               	movlw	2
  5435  0F8F  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5436                           
  5437                           ;MCP79510.c: 17: WriteSPI(0x00);
  5438  0F94  3000               	movlw	0
  5439  0F95  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5440                           
  5441                           ;MCP79510.c: 18: RD4 = 1;
  5442  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0F9C  1608               	bsf	8,4	;volatile
  5445                           
  5446                           ;MCP79510.c: 19: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5447  0F9D  300C               	movlw	12
  5448  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  5449  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  5450  0FA0  00B5               	movwf	??_ClockInit
  5451  0FA1                     u3027:	
  5452  0FA1  0BB5               	decfsz	??_ClockInit,f
  5453  0FA2  2FA1               	goto	u3027
  5454  0FA3  0000               	nop
  5455                           
  5456                           ;MCP79510.c: 20: RD4 = 0;
  5457  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5458  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5459  0FA6  1208               	bcf	8,4	;volatile
  5460                           
  5461                           ;MCP79510.c: 21: WriteSPI(0x12);
  5462  0FA7  3012               	movlw	18
  5463  0FA8  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5464                           
  5465                           ;MCP79510.c: 22: WriteSPI(0x08);
  5466  0FAD  3008               	movlw	8
  5467  0FAE  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5468                           
  5469                           ;MCP79510.c: 23: WriteSPI(0x00);
  5470  0FB3  3000               	movlw	0
  5471  0FB4  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5472                           
  5473                           ;MCP79510.c: 24: RD4 = 1;
  5474  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  5475  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  5476  0FBB  1608               	bsf	8,4	;volatile
  5477                           
  5478                           ;MCP79510.c: 25: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5479  0FBC  300C               	movlw	12
  5480  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  5481  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  5482  0FBF  00B5               	movwf	??_ClockInit
  5483  0FC0                     u3037:	
  5484  0FC0  0BB5               	decfsz	??_ClockInit,f
  5485  0FC1  2FC0               	goto	u3037
  5486  0FC2  0000               	nop
  5487                           
  5488                           ;MCP79510.c: 26: RD4 = 0;
  5489  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  5491  0FC5  1208               	bcf	8,4	;volatile
  5492                           
  5493                           ;MCP79510.c: 27: WriteSPI(0x12);
  5494  0FC6  3012               	movlw	18
  5495  0FC7  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5496                           
  5497                           ;MCP79510.c: 28: WriteSPI(0x01);
  5498  0FCC  3001               	movlw	1
  5499  0FCD  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5500                           
  5501                           ;MCP79510.c: 29: WriteSPI(0x80);
  5502  0FD2  3080               	movlw	128
  5503  0FD3  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5504                           
  5505                           ;MCP79510.c: 30: RD4 = 1;
  5506  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0FDA  1608               	bsf	8,4	;volatile
  5509                           
  5510                           ;MCP79510.c: 32: char cnt = 0;
  5511  0FDB  01B6               	clrf	ClockInit@cnt
  5512  0FDC                     l3627:	
  5513                           ;MCP79510.c: 33: while(cnt < 100)
  5514                           
  5515  0FDC  3064               	movlw	100
  5516  0FDD  0236               	subwf	ClockInit@cnt,w
  5517  0FDE  1803               	btfsc	3,0
  5518  0FDF  2FFC               	goto	l634
  5519                           
  5520                           ;MCP79510.c: 34: {
  5521                           ;MCP79510.c: 35: RD4 = 0;
  5522  0FE0  1208               	bcf	8,4	;volatile
  5523                           
  5524                           ;MCP79510.c: 36: WriteSPI(0x13);
  5525  0FE1  3013               	movlw	19
  5526  0FE2  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5527                           
  5528                           ;MCP79510.c: 37: WriteSPI(0x04);
  5529  0FE7  3004               	movlw	4
  5530  0FE8  120A  158A  21D7  120A  158A  	fcall	_WriteSPI
  5531                           
  5532                           ;MCP79510.c: 38: if((ReadSPI() & 0b00100000) != 0)
  5533  0FED  120A  158A  218E  120A  158A  	fcall	_ReadSPI
  5534  0FF2  3920               	andlw	32
  5535  0FF3  1D03               	btfss	3,2
  5536  0FF4  2FFC               	goto	l634
  5537                           
  5538                           ;MCP79510.c: 42: }
  5539                           ;MCP79510.c: 43: cnt++;
  5540                           
  5541                           ;MCP79510.c: 39: {
  5542                           ;MCP79510.c: 40: break;
  5543  0FF5  3001               	movlw	1
  5544  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0FF8  00B5               	movwf	??_ClockInit
  5547  0FF9  0835               	movf	??_ClockInit,w
  5548  0FFA  07B6               	addwf	ClockInit@cnt,f
  5549  0FFB  2FDC               	goto	l3627
  5550  0FFC                     l634:	
  5551                           
  5552                           ;MCP79510.c: 46: }
  5553                           ;MCP79510.c: 47: RD4 = 1;
  5554  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  5555  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  5556  0FFE  1608               	bsf	8,4	;volatile
  5557  0FFF  0008               	return
  5558  1000                     __end_of_ClockInit:	
  5559                           
  5560                           	psect	text33
  5561  098E                     __ptext33:	
  5562 ;; *************** function _ReadSPI *****************
  5563 ;; Defined at:
  5564 ;;		line 503 in file "functions.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      unsigned char 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0
  5580 ;;      Temps:          0       0       0       0       0
  5581 ;;      Totals:         0       0       0       0       0
  5582 ;;Total ram usage:        0 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    7
  5585 ;; This function calls:
  5586 ;;		_WriteSPI
  5587 ;; This function is called by:
  5588 ;;		_RegisterRead
  5589 ;;		_ReadFIFO
  5590 ;;		_read_ram_status
  5591 ;;		_ClockInit
  5592 ;;		_read_ram_id
  5593 ;;		_ReadClock
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           
  5598                           ;psect for function _ReadSPI
  5599  098E                     _ReadSPI:	
  5600                           
  5601                           ;functions.c: 505: WriteSPI(0x00);
  5602                           
  5603                           ;incstack = 0
  5604 ;; hardware stack exceeded
  5605                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  5606  098E  3000               	movlw	0
  5607  098F  120A  158A  21D7   	fcall	_WriteSPI
  5608                           
  5609                           ;functions.c: 506: return SSPBUF;
  5610  0992  1283               	bcf	3,5	;RP0=0, select bank0
  5611  0993  1303               	bcf	3,6	;RP1=0, select bank0
  5612  0994  0813               	movf	19,w	;volatile
  5613  0995  0008               	return
  5614  0996                     __end_of_ReadSPI:	
  5615                           
  5616                           	psect	text34
  5617  09D7                     __ptext34:	
  5618 ;; *************** function _WriteSPI *****************
  5619 ;; Defined at:
  5620 ;;		line 491 in file "functions.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  databyte        1    wreg     unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  databyte        1   20[BANK0 ] unsigned char 
  5625 ;;  buffer          1   19[BANK0 ] unsigned char 
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5635 ;;      Params:         0       0       0       0       0
  5636 ;;      Locals:         0       2       0       0       0
  5637 ;;      Temps:          0       1       0       0       0
  5638 ;;      Totals:         0       3       0       0       0
  5639 ;;Total ram usage:        3 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    6
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_ReadSPI
  5646 ;;		_RegisterRead
  5647 ;;		_RegisterSet
  5648 ;;		_WriteFIFO
  5649 ;;		_read_ram_status
  5650 ;;		_ram_bulk_erase
  5651 ;;		_write_ram_status
  5652 ;;		_ClockInit
  5653 ;;		_read_ram_id
  5654 ;;		_ram_sector_erase
  5655 ;;		_power_up_flash_ram
  5656 ;;		_power_down_flash_ram
  5657 ;;		_ReadClock
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _WriteSPI
  5663  09D7                     _WriteSPI:	
  5664                           
  5665                           ;incstack = 0
  5666 ;; hardware stack exceeded
  5667                           ; Regs used in _WriteSPI: [wreg]
  5668                           ;WriteSPI@databyte stored from wreg
  5669  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  5670  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  5671  09D9  00B4               	movwf	WriteSPI@databyte
  5672                           
  5673                           ;functions.c: 493: unsigned char buffer;
  5674                           ;functions.c: 494: buffer = SSPBUF;
  5675  09DA  0813               	movf	19,w	;volatile
  5676  09DB  00B2               	movwf	??_WriteSPI
  5677  09DC  0832               	movf	??_WriteSPI,w
  5678  09DD  00B3               	movwf	WriteSPI@buffer
  5679                           
  5680                           ;functions.c: 495: PIR1bits.SSPIF=0;
  5681  09DE  118C               	bcf	12,3	;volatile
  5682                           
  5683                           ;functions.c: 496: SSPBUF = databyte;
  5684  09DF  0834               	movf	WriteSPI@databyte,w
  5685  09E0  0093               	movwf	19	;volatile
  5686  09E1                     l394:	
  5687                           ;functions.c: 497: while(PIR1bits.SSPIF == 0);
  5688                           
  5689  09E1  1D8C               	btfss	12,3	;volatile
  5690  09E2  29E1               	goto	l394
  5691                           
  5692                           ;functions.c: 498: PIR1bits.SSPIF = 0;
  5693  09E3  118C               	bcf	12,3	;volatile
  5694  09E4  0008               	return
  5695  09E5                     __end_of_WriteSPI:	
  5696                           
  5697                           	psect	text35
  5698  0662                     __ptext35:	
  5699 ;; *************** function _tc_int *****************
  5700 ;; Defined at:
  5701 ;;		line 797 in file "functions.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;		None
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5715 ;;      Params:         0       0       0       0       0
  5716 ;;      Locals:         0       0       0       0       0
  5717 ;;      Temps:          0       7       0       0       0
  5718 ;;      Totals:         0       7       0       0       0
  5719 ;;Total ram usage:        7 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    5
  5722 ;; This function calls:
  5723 ;;		_TimerCounter
  5724 ;;		_saveDataToFlash
  5725 ;;		i1_OperationMode
  5726 ;; This function is called by:
  5727 ;;		Interrupt level 1
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           
  5732                           ;psect for function _tc_int
  5733  0662                     _tc_int:	
  5734                           
  5735                           ;functions.c: 800: if((RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode() < 2)){
  5736  0662  1A86               	btfsc	6,5	;volatile
  5737  0663  2E7A               	goto	i1l3043
  5738  0664  084F               	movf	_intBlinkCycle,w
  5739  0665  0450               	iorwf	_intBlinkCycle+1,w
  5740  0666  1D03               	btfss	3,2
  5741  0667  2E7A               	goto	i1l3043
  5742  0668  120A  158A  219E  120A  118A  	fcall	i1_OperationMode
  5743  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5744  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5745  066F  00AB               	movwf	??_tc_int
  5746  0670  3002               	movlw	2
  5747  0671  022B               	subwf	??_tc_int,w
  5748  0672  1803               	skipnc
  5749  0673  2E7A               	goto	i1l3043
  5750                           
  5751                           ;functions.c: 801: intBlinkCycle = 1;
  5752  0674  3001               	movlw	1
  5753  0675  00CF               	movwf	_intBlinkCycle
  5754  0676  3000               	movlw	0
  5755  0677  00D0               	movwf	_intBlinkCycle+1
  5756                           
  5757                           ;functions.c: 802: intBlinkCounter = 0;
  5758  0678  01CD               	clrf	_intBlinkCounter
  5759  0679  01CE               	clrf	_intBlinkCounter+1
  5760  067A                     i1l3043:	
  5761                           
  5762                           ;functions.c: 804: }
  5763                           ;functions.c: 807: if(TMR1IF ==1){
  5764  067A  1C0C               	btfss	12,0	;volatile
  5765  067B  2F18               	goto	L3
  5766                           
  5767                           ;functions.c: 808: TMR1ON = 0;
  5768  067C  1010               	bcf	16,0	;volatile
  5769                           
  5770                           ;functions.c: 809: TMR1H = 0x0B;
  5771  067D  300B               	movlw	11
  5772  067E  008F               	movwf	15	;volatile
  5773                           
  5774                           ;functions.c: 810: TMR1L = 0xDB;
  5775  067F  30DB               	movlw	219
  5776  0680  008E               	movwf	14	;volatile
  5777                           
  5778                           ;functions.c: 812: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2)){
  5779  0681  034F               	decf	_intBlinkCycle,w
  5780  0682  0450               	iorwf	_intBlinkCycle+1,w
  5781  0683  1D03               	btfss	3,2
  5782  0684  2EA7               	goto	i1l3061
  5783  0685  085C               	movf	_intNumberOfBlinks+1,w
  5784  0686  00AC               	movwf	??_tc_int+1
  5785  0687  085B               	movf	_intNumberOfBlinks,w
  5786  0688  00AB               	movwf	??_tc_int
  5787  0689  1003               	clrc
  5788  068A  0DAB               	rlf	??_tc_int,f
  5789  068B  0DAC               	rlf	??_tc_int+1,f
  5790  068C  084E               	movf	_intBlinkCounter+1,w
  5791  068D  3A80               	xorlw	128
  5792  068E  00AD               	movwf	??_tc_int+2
  5793  068F  082C               	movf	??_tc_int+1,w
  5794  0690  3A80               	xorlw	128
  5795  0691  022D               	subwf	??_tc_int+2,w
  5796  0692  1D03               	skipz
  5797  0693  2E96               	goto	u196_25
  5798  0694  082B               	movf	??_tc_int,w
  5799  0695  024D               	subwf	_intBlinkCounter,w
  5800  0696                     u196_25:	
  5801  0696  1803               	skipnc
  5802  0697  2EA7               	goto	i1l3061
  5803                           
  5804                           ;functions.c: 813: intBlinkCounter++;
  5805  0698  3001               	movlw	1
  5806  0699  1283               	bcf	3,5	;RP0=0, select bank0
  5807  069A  1303               	bcf	3,6	;RP1=0, select bank0
  5808  069B  07CD               	addwf	_intBlinkCounter,f
  5809  069C  1803               	skipnc
  5810  069D  0ACE               	incf	_intBlinkCounter+1,f
  5811  069E  3000               	movlw	0
  5812  069F  07CE               	addwf	_intBlinkCounter+1,f
  5813                           
  5814                           ;functions.c: 815: if(RC1 == 0)
  5815  06A0  1887               	btfsc	7,1	;volatile
  5816  06A1  2EA4               	goto	i1l447
  5817                           
  5818                           ;functions.c: 816: RC1 = 1;
  5819  06A2  1487               	bsf	7,1	;volatile
  5820  06A3  2EC5               	goto	i1l3069
  5821  06A4                     i1l447:	
  5822                           
  5823                           ;functions.c: 817: else if(RC1 == 1)
  5824  06A4  1C87               	btfss	7,1	;volatile
  5825  06A5  2EC5               	goto	i1l3069
  5826  06A6  2EC4               	goto	i1l3067
  5827  06A7                     i1l3061:	
  5828                           ;functions.c: 819: }
  5829                           
  5830                           ;functions.c: 818: RC1 = 0;
  5831                           
  5832                           
  5833                           ;functions.c: 821: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBlinks*2)
      +                          ){
  5834  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  5835  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  5836  06A9  034F               	decf	_intBlinkCycle,w
  5837  06AA  0450               	iorwf	_intBlinkCycle+1,w
  5838  06AB  1D03               	btfss	3,2
  5839  06AC  2EC5               	goto	i1l3069
  5840  06AD  085C               	movf	_intNumberOfBlinks+1,w
  5841  06AE  00AC               	movwf	??_tc_int+1
  5842  06AF  085B               	movf	_intNumberOfBlinks,w
  5843  06B0  00AB               	movwf	??_tc_int
  5844  06B1  1003               	clrc
  5845  06B2  0DAB               	rlf	??_tc_int,f
  5846  06B3  0DAC               	rlf	??_tc_int+1,f
  5847  06B4  084E               	movf	_intBlinkCounter+1,w
  5848  06B5  3A80               	xorlw	128
  5849  06B6  00AD               	movwf	??_tc_int+2
  5850  06B7  082C               	movf	??_tc_int+1,w
  5851  06B8  3A80               	xorlw	128
  5852  06B9  022D               	subwf	??_tc_int+2,w
  5853  06BA  1D03               	skipz
  5854  06BB  2EBE               	goto	u200_25
  5855  06BC  082B               	movf	??_tc_int,w
  5856  06BD  024D               	subwf	_intBlinkCounter,w
  5857  06BE                     u200_25:	
  5858  06BE  1C03               	skipc
  5859  06BF  2EC5               	goto	i1l3069
  5860                           
  5861                           ;functions.c: 822: intBlinkCycle = 0;
  5862  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  5863  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  5864  06C2  01CF               	clrf	_intBlinkCycle
  5865  06C3  01D0               	clrf	_intBlinkCycle+1
  5866  06C4                     i1l3067:	
  5867                           
  5868                           ;functions.c: 823: RC1 = 0;
  5869  06C4  1087               	bcf	7,1	;volatile
  5870  06C5                     i1l3069:	
  5871                           
  5872                           ;functions.c: 824: }
  5873                           ;functions.c: 827: intHalfSecondCounter++;
  5874  06C5  3001               	movlw	1
  5875  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  5876  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  5877  06C8  07D3               	addwf	_intHalfSecondCounter,f
  5878  06C9  1803               	skipnc
  5879  06CA  0AD4               	incf	_intHalfSecondCounter+1,f
  5880  06CB  3000               	movlw	0
  5881  06CC  07D4               	addwf	_intHalfSecondCounter+1,f
  5882                           
  5883                           ;functions.c: 828: if(intHalfSecondCounter>=2)
  5884  06CD  0854               	movf	_intHalfSecondCounter+1,w
  5885  06CE  3A80               	xorlw	128
  5886  06CF  00FF               	movwf	127
  5887  06D0  3080               	movlw	128
  5888  06D1  027F               	subwf	127,w
  5889  06D2  1D03               	skipz
  5890  06D3  2ED6               	goto	u201_25
  5891  06D4  3002               	movlw	2
  5892  06D5  0253               	subwf	_intHalfSecondCounter,w
  5893  06D6                     u201_25:	
  5894  06D6  1C03               	skipc
  5895  06D7  2EE7               	goto	i1l3079
  5896                           
  5897                           ;functions.c: 829: {
  5898                           ;functions.c: 830: intHalfSecondCounter = 0;
  5899  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  5900  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  5901  06DA  01D3               	clrf	_intHalfSecondCounter
  5902  06DB  01D4               	clrf	_intHalfSecondCounter+1
  5903                           
  5904                           ;functions.c: 831: intSecondCounter++;
  5905  06DC  3001               	movlw	1
  5906  06DD  07D7               	addwf	_intSecondCounter,f
  5907  06DE  1803               	skipnc
  5908  06DF  0AD8               	incf	_intSecondCounter+1,f
  5909  06E0  3000               	movlw	0
  5910  06E1  07D8               	addwf	_intSecondCounter+1,f
  5911                           
  5912                           ;functions.c: 832: TimerCounter();
  5913  06E2  120A  158A  24C9  120A  118A  	fcall	_TimerCounter
  5914  06E7                     i1l3079:	
  5915                           
  5916                           ;functions.c: 833: }
  5917                           ;functions.c: 834: if(intSecondCounter >=60)
  5918  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  5919  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  5920  06E9  0858               	movf	_intSecondCounter+1,w
  5921  06EA  3A80               	xorlw	128
  5922  06EB  00FF               	movwf	127
  5923  06EC  3080               	movlw	128
  5924  06ED  027F               	subwf	127,w
  5925  06EE  1D03               	skipz
  5926  06EF  2EF2               	goto	u202_25
  5927  06F0  303C               	movlw	60
  5928  06F1  0257               	subwf	_intSecondCounter,w
  5929  06F2                     u202_25:	
  5930  06F2  1C03               	skipc
  5931  06F3  2EFE               	goto	i1l3085
  5932                           
  5933                           ;functions.c: 835: {
  5934                           ;functions.c: 836: intSecondCounter = 0;
  5935  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  5936  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  5937  06F6  01D7               	clrf	_intSecondCounter
  5938  06F7  01D8               	clrf	_intSecondCounter+1
  5939                           
  5940                           ;functions.c: 837: intMinuteCounter++;
  5941  06F8  3001               	movlw	1
  5942  06F9  07D5               	addwf	_intMinuteCounter,f
  5943  06FA  1803               	skipnc
  5944  06FB  0AD6               	incf	_intMinuteCounter+1,f
  5945  06FC  3000               	movlw	0
  5946  06FD  07D6               	addwf	_intMinuteCounter+1,f
  5947  06FE                     i1l3085:	
  5948                           
  5949                           ;functions.c: 838: }
  5950                           ;functions.c: 839: if(intMinuteCounter >= 60)
  5951  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  5952  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  5953  0700  0856               	movf	_intMinuteCounter+1,w
  5954  0701  3A80               	xorlw	128
  5955  0702  00FF               	movwf	127
  5956  0703  3080               	movlw	128
  5957  0704  027F               	subwf	127,w
  5958  0705  1D03               	skipz
  5959  0706  2F09               	goto	u203_25
  5960  0707  303C               	movlw	60
  5961  0708  0255               	subwf	_intMinuteCounter,w
  5962  0709                     u203_25:	
  5963  0709  1C03               	skipc
  5964  070A  2F14               	goto	i1l3091
  5965                           
  5966                           ;functions.c: 840: {
  5967                           ;functions.c: 841: intMinuteCounter = 0;
  5968  070B  1283               	bcf	3,5	;RP0=0, select bank0
  5969  070C  1303               	bcf	3,6	;RP1=0, select bank0
  5970  070D  01D5               	clrf	_intMinuteCounter
  5971  070E  01D6               	clrf	_intMinuteCounter+1
  5972                           
  5973                           ;functions.c: 842: saveDataToFlash();
  5974  070F  120A  118A  21D1  120A  118A  	fcall	_saveDataToFlash
  5975  0714                     i1l3091:	
  5976                           
  5977                           ;functions.c: 843: }
  5978                           ;functions.c: 846: TMR1ON = 1;
  5979  0714  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0715  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0716  1410               	bsf	16,0	;volatile
  5982                           
  5983                           ;functions.c: 847: }
  5984                           ;functions.c: 848: TMR1IF = 0;
  5985  0717  100C               	bcf	12,0	;volatile
  5986  0718                     L3:	
  5987                           
  5988                           ;functions.c: 849: RBIF = 0;
  5989  0718  100B               	bcf	11,0	;volatile
  5990                           
  5991                           ;functions.c: 850: GIE = 1;
  5992  0719  178B               	bsf	11,7	;volatile
  5993                           
  5994                           ;functions.c: 851: return;
  5995  071A  0831               	movf	??_tc_int+6,w
  5996  071B  00FF               	movwf	127
  5997  071C  0830               	movf	??_tc_int+5,w
  5998  071D  008A               	movwf	10
  5999  071E  082F               	movf	??_tc_int+4,w
  6000  071F  0084               	movwf	4
  6001  0720  0E2E               	swapf	(??_tc_int+3)^0,w
  6002  0721  0083               	movwf	3
  6003  0722  0EFE               	swapf	126,f
  6004  0723  0E7E               	swapf	126,w
  6005  0724  0009               	retfie
  6006  0725                     __end_of_tc_int:	
  6007                           
  6008                           	psect	intentry
  6009  0004                     __pintentry:	
  6010                           ;incstack = 0
  6011 ;; hardware stack exceeded
  6012                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6013                           
  6014  0004                     interrupt_function:	
  6015  007E                     saved_w	set	btemp
  6016  0004  00FE               	movwf	btemp
  6017  0005  0E03               	swapf	3,w
  6018  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6019  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6020  0008  00AE               	movwf	??_tc_int+3
  6021  0009  0804               	movf	4,w
  6022  000A  00AF               	movwf	??_tc_int+4
  6023  000B  080A               	movf	10,w
  6024  000C  00B0               	movwf	??_tc_int+5
  6025  000D  087F               	movf	btemp+1,w
  6026  000E  00B1               	movwf	??_tc_int+6
  6027  000F  120A  118A  2E62   	ljmp	_tc_int
  6028                           
  6029                           	psect	text36
  6030  099E                     __ptext36:	
  6031 ;; *************** function i1_OperationMode *****************
  6032 ;; Defined at:
  6033 ;;		line 931 in file "functions.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  OperationMod    1    1[COMMON] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      unsigned char 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6047 ;;      Params:         0       0       0       0       0
  6048 ;;      Locals:         1       0       0       0       0
  6049 ;;      Temps:          1       0       0       0       0
  6050 ;;      Totals:         2       0       0       0       0
  6051 ;;Total ram usage:        2 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_tc_int
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060                           
  6061                           ;psect for function i1_OperationMode
  6062  099E                     i1_OperationMode:	
  6063                           
  6064                           ;functions.c: 933: unsigned char bracketStatus;
  6065                           ;functions.c: 934: bracketStatus = ((~PORTB) & 0b00000111) ;
  6066                           
  6067                           ;incstack = 0
  6068 ;; hardware stack exceeded
  6069                           ; Regs used in i1_OperationMode: [wreg+status,2]
  6070  099E  1283               	bcf	3,5	;RP0=0, select bank0
  6071  099F  1303               	bcf	3,6	;RP1=0, select bank0
  6072  09A0  0906               	comf	6,w	;volatile
  6073  09A1  3907               	andlw	7
  6074  09A2  00F0               	movwf	??i1_OperationMode
  6075  09A3  0870               	movf	??i1_OperationMode,w
  6076  09A4  00F1               	movwf	i1OperationMode@bracketStatus
  6077                           
  6078                           ;functions.c: 936: return 6;
  6079  09A5  3006               	movlw	6
  6080  09A6  0008               	return
  6081  09A7                     __end_ofi1_OperationMode:	
  6082                           
  6083                           	psect	text37
  6084  01D1                     __ptext37:	
  6085 ;; *************** function _saveDataToFlash *****************
  6086 ;; Defined at:
  6087 ;;		line 1042 in file "functions.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  addr3           1   10[BANK0 ] unsigned char 
  6092 ;;  addr2           1    9[BANK0 ] unsigned char 
  6093 ;;  addr1           1    8[BANK0 ] unsigned char 
  6094 ;;  value           1    7[BANK0 ] unsigned char 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       0       0       0       0
  6105 ;;      Locals:         0       4       0       0       0
  6106 ;;      Temps:          0       4       0       0       0
  6107 ;;      Totals:         0       8       0       0       0
  6108 ;;Total ram usage:        8 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    4
  6111 ;; This function calls:
  6112 ;;		_IncreaseMemoryAdress
  6113 ;;		_ReadMemoryAdress
  6114 ;;		_read_write_flash_ram
  6115 ;;		i1_AnalogValue
  6116 ;; This function is called by:
  6117 ;;		_tc_int
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function _saveDataToFlash
  6123  01D1                     _saveDataToFlash:	
  6124                           
  6125                           ;functions.c: 1044: unsigned char value, addr1, addr2, addr3;
  6126                           ;functions.c: 1046: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6127                           
  6128                           ;incstack = 0
  6129 ;; hardware stack exceeded
  6130                           ; Regs used in _saveDataToFlash: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6131  01D1  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6132  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  6133  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  6134  01D4  00A3               	movwf	??_saveDataToFlash
  6135  01D5  0823               	movf	??_saveDataToFlash,w
  6136  01D6  00F2               	movwf	ReadMemoryAdress@var2
  6137  01D7  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6138  01D8  00A4               	movwf	??_saveDataToFlash+1
  6139  01D9  0824               	movf	??_saveDataToFlash+1,w
  6140  01DA  00F3               	movwf	ReadMemoryAdress@var1
  6141  01DB  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6142  01DC  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6143                           
  6144                           ;functions.c: 1048: value = AnalogValue(0);
  6145  01E1  3000               	movlw	0
  6146  01E2  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6147  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  6148  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  6149  01E9  00A3               	movwf	??_saveDataToFlash
  6150  01EA  0823               	movf	??_saveDataToFlash,w
  6151  01EB  00A7               	movwf	saveDataToFlash@value
  6152                           
  6153                           ;functions.c: 1049: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6154  01EC  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6155  01ED  00A3               	movwf	??_saveDataToFlash
  6156  01EE  0823               	movf	??_saveDataToFlash,w
  6157  01EF  00F2               	movwf	ReadMemoryAdress@var2
  6158  01F0  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6159  01F1  00A4               	movwf	??_saveDataToFlash+1
  6160  01F2  0824               	movf	??_saveDataToFlash+1,w
  6161  01F3  00F3               	movwf	ReadMemoryAdress@var1
  6162  01F4  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6163  01F5  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6164                           
  6165                           ;functions.c: 1050: read_write_flash_ram(
  6166                           ;functions.c: 1051: 0,
  6167                           ;functions.c: 1052: 1,
  6168                           ;functions.c: 1053: addr3,
  6169                           ;functions.c: 1054: addr2,
  6170                           ;functions.c: 1055: addr1,
  6171                           ;functions.c: 1056: &value);
  6172  01FA  3001               	movlw	1
  6173  01FB  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6174  01FC  3000               	movlw	0
  6175  01FD  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6176  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  6177  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  6178  0200  082A               	movf	saveDataToFlash@addr3,w
  6179  0201  00A3               	movwf	??_saveDataToFlash
  6180  0202  0823               	movf	??_saveDataToFlash,w
  6181  0203  00F7               	movwf	read_write_flash_ram@flash_sector
  6182  0204  0829               	movf	saveDataToFlash@addr2,w
  6183  0205  00A4               	movwf	??_saveDataToFlash+1
  6184  0206  0824               	movf	??_saveDataToFlash+1,w
  6185  0207  00F8               	movwf	read_write_flash_ram@flash_page
  6186  0208  0828               	movf	saveDataToFlash@addr1,w
  6187  0209  00A5               	movwf	??_saveDataToFlash+2
  6188  020A  0825               	movf	??_saveDataToFlash+2,w
  6189  020B  00F9               	movwf	read_write_flash_ram@offset
  6190  020C  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6191  020D  00A6               	movwf	??_saveDataToFlash+3
  6192  020E  0826               	movf	??_saveDataToFlash+3,w
  6193  020F  00FA               	movwf	read_write_flash_ram@mem_ptr
  6194  0210  3000               	movlw	0
  6195  0211  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6196                           
  6197                           ;functions.c: 1057: IncreaseMemoryAdress();
  6198  0216  120A  158A  250B  120A  118A  	fcall	_IncreaseMemoryAdress
  6199                           
  6200                           ;functions.c: 1059: value = AnalogValue(3);
  6201  021B  3003               	movlw	3
  6202  021C  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6203  0221  1283               	bcf	3,5	;RP0=0, select bank0
  6204  0222  1303               	bcf	3,6	;RP1=0, select bank0
  6205  0223  00A3               	movwf	??_saveDataToFlash
  6206  0224  0823               	movf	??_saveDataToFlash,w
  6207  0225  00A7               	movwf	saveDataToFlash@value
  6208                           
  6209                           ;functions.c: 1060: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6210  0226  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6211  0227  00A3               	movwf	??_saveDataToFlash
  6212  0228  0823               	movf	??_saveDataToFlash,w
  6213  0229  00F2               	movwf	ReadMemoryAdress@var2
  6214  022A  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6215  022B  00A4               	movwf	??_saveDataToFlash+1
  6216  022C  0824               	movf	??_saveDataToFlash+1,w
  6217  022D  00F3               	movwf	ReadMemoryAdress@var1
  6218  022E  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6219  022F  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6220                           
  6221                           ;functions.c: 1061: read_write_flash_ram(
  6222                           ;functions.c: 1062: 0,
  6223                           ;functions.c: 1063: 1,
  6224                           ;functions.c: 1064: addr3,
  6225                           ;functions.c: 1065: addr2,
  6226                           ;functions.c: 1066: addr1,
  6227                           ;functions.c: 1067: &value);
  6228  0234  3001               	movlw	1
  6229  0235  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6230  0236  3000               	movlw	0
  6231  0237  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6232  0238  1283               	bcf	3,5	;RP0=0, select bank0
  6233  0239  1303               	bcf	3,6	;RP1=0, select bank0
  6234  023A  082A               	movf	saveDataToFlash@addr3,w
  6235  023B  00A3               	movwf	??_saveDataToFlash
  6236  023C  0823               	movf	??_saveDataToFlash,w
  6237  023D  00F7               	movwf	read_write_flash_ram@flash_sector
  6238  023E  0829               	movf	saveDataToFlash@addr2,w
  6239  023F  00A4               	movwf	??_saveDataToFlash+1
  6240  0240  0824               	movf	??_saveDataToFlash+1,w
  6241  0241  00F8               	movwf	read_write_flash_ram@flash_page
  6242  0242  0828               	movf	saveDataToFlash@addr1,w
  6243  0243  00A5               	movwf	??_saveDataToFlash+2
  6244  0244  0825               	movf	??_saveDataToFlash+2,w
  6245  0245  00F9               	movwf	read_write_flash_ram@offset
  6246  0246  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6247  0247  00A6               	movwf	??_saveDataToFlash+3
  6248  0248  0826               	movf	??_saveDataToFlash+3,w
  6249  0249  00FA               	movwf	read_write_flash_ram@mem_ptr
  6250  024A  3000               	movlw	0
  6251  024B  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6252                           
  6253                           ;functions.c: 1068: IncreaseMemoryAdress();
  6254  0250  120A  158A  250B  120A  118A  	fcall	_IncreaseMemoryAdress
  6255                           
  6256                           ;functions.c: 1070: value = AnalogValue(5);
  6257  0255  3005               	movlw	5
  6258  0256  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6259  025B  1283               	bcf	3,5	;RP0=0, select bank0
  6260  025C  1303               	bcf	3,6	;RP1=0, select bank0
  6261  025D  00A3               	movwf	??_saveDataToFlash
  6262  025E  0823               	movf	??_saveDataToFlash,w
  6263  025F  00A7               	movwf	saveDataToFlash@value
  6264                           
  6265                           ;functions.c: 1071: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6266  0260  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6267  0261  00A3               	movwf	??_saveDataToFlash
  6268  0262  0823               	movf	??_saveDataToFlash,w
  6269  0263  00F2               	movwf	ReadMemoryAdress@var2
  6270  0264  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6271  0265  00A4               	movwf	??_saveDataToFlash+1
  6272  0266  0824               	movf	??_saveDataToFlash+1,w
  6273  0267  00F3               	movwf	ReadMemoryAdress@var1
  6274  0268  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6275  0269  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6276                           
  6277                           ;functions.c: 1072: read_write_flash_ram(
  6278                           ;functions.c: 1073: 0,
  6279                           ;functions.c: 1074: 1,
  6280                           ;functions.c: 1075: addr3,
  6281                           ;functions.c: 1076: addr2,
  6282                           ;functions.c: 1077: addr1,
  6283                           ;functions.c: 1078: &value);
  6284  026E  3001               	movlw	1
  6285  026F  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6286  0270  3000               	movlw	0
  6287  0271  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6288  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6289  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6290  0274  082A               	movf	saveDataToFlash@addr3,w
  6291  0275  00A3               	movwf	??_saveDataToFlash
  6292  0276  0823               	movf	??_saveDataToFlash,w
  6293  0277  00F7               	movwf	read_write_flash_ram@flash_sector
  6294  0278  0829               	movf	saveDataToFlash@addr2,w
  6295  0279  00A4               	movwf	??_saveDataToFlash+1
  6296  027A  0824               	movf	??_saveDataToFlash+1,w
  6297  027B  00F8               	movwf	read_write_flash_ram@flash_page
  6298  027C  0828               	movf	saveDataToFlash@addr1,w
  6299  027D  00A5               	movwf	??_saveDataToFlash+2
  6300  027E  0825               	movf	??_saveDataToFlash+2,w
  6301  027F  00F9               	movwf	read_write_flash_ram@offset
  6302  0280  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6303  0281  00A6               	movwf	??_saveDataToFlash+3
  6304  0282  0826               	movf	??_saveDataToFlash+3,w
  6305  0283  00FA               	movwf	read_write_flash_ram@mem_ptr
  6306  0284  3000               	movlw	0
  6307  0285  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6308                           
  6309                           ;functions.c: 1079: IncreaseMemoryAdress();
  6310  028A  120A  158A  250B  120A  118A  	fcall	_IncreaseMemoryAdress
  6311                           
  6312                           ;functions.c: 1081: value = AnalogValue(7);
  6313  028F  3007               	movlw	7
  6314  0290  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6315  0295  1283               	bcf	3,5	;RP0=0, select bank0
  6316  0296  1303               	bcf	3,6	;RP1=0, select bank0
  6317  0297  00A3               	movwf	??_saveDataToFlash
  6318  0298  0823               	movf	??_saveDataToFlash,w
  6319  0299  00A7               	movwf	saveDataToFlash@value
  6320                           
  6321                           ;functions.c: 1082: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6322  029A  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6323  029B  00A3               	movwf	??_saveDataToFlash
  6324  029C  0823               	movf	??_saveDataToFlash,w
  6325  029D  00F2               	movwf	ReadMemoryAdress@var2
  6326  029E  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6327  029F  00A4               	movwf	??_saveDataToFlash+1
  6328  02A0  0824               	movf	??_saveDataToFlash+1,w
  6329  02A1  00F3               	movwf	ReadMemoryAdress@var1
  6330  02A2  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6331  02A3  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6332                           
  6333                           ;functions.c: 1083: read_write_flash_ram(
  6334                           ;functions.c: 1084: 0,
  6335                           ;functions.c: 1085: 1,
  6336                           ;functions.c: 1086: addr3,
  6337                           ;functions.c: 1087: addr2,
  6338                           ;functions.c: 1088: addr1,
  6339                           ;functions.c: 1089: &value);
  6340  02A8  3001               	movlw	1
  6341  02A9  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6342  02AA  3000               	movlw	0
  6343  02AB  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6344  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  6345  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  6346  02AE  082A               	movf	saveDataToFlash@addr3,w
  6347  02AF  00A3               	movwf	??_saveDataToFlash
  6348  02B0  0823               	movf	??_saveDataToFlash,w
  6349  02B1  00F7               	movwf	read_write_flash_ram@flash_sector
  6350  02B2  0829               	movf	saveDataToFlash@addr2,w
  6351  02B3  00A4               	movwf	??_saveDataToFlash+1
  6352  02B4  0824               	movf	??_saveDataToFlash+1,w
  6353  02B5  00F8               	movwf	read_write_flash_ram@flash_page
  6354  02B6  0828               	movf	saveDataToFlash@addr1,w
  6355  02B7  00A5               	movwf	??_saveDataToFlash+2
  6356  02B8  0825               	movf	??_saveDataToFlash+2,w
  6357  02B9  00F9               	movwf	read_write_flash_ram@offset
  6358  02BA  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6359  02BB  00A6               	movwf	??_saveDataToFlash+3
  6360  02BC  0826               	movf	??_saveDataToFlash+3,w
  6361  02BD  00FA               	movwf	read_write_flash_ram@mem_ptr
  6362  02BE  3000               	movlw	0
  6363  02BF  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6364                           
  6365                           ;functions.c: 1090: IncreaseMemoryAdress();
  6366  02C4  120A  158A  250B  120A  118A  	fcall	_IncreaseMemoryAdress
  6367                           
  6368                           ;functions.c: 1093: value = AnalogValue(6);
  6369  02C9  3006               	movlw	6
  6370  02CA  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6371  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  6372  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  6373  02D1  00A3               	movwf	??_saveDataToFlash
  6374  02D2  0823               	movf	??_saveDataToFlash,w
  6375  02D3  00A7               	movwf	saveDataToFlash@value
  6376                           
  6377                           ;functions.c: 1094: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6378  02D4  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6379  02D5  00A3               	movwf	??_saveDataToFlash
  6380  02D6  0823               	movf	??_saveDataToFlash,w
  6381  02D7  00F2               	movwf	ReadMemoryAdress@var2
  6382  02D8  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6383  02D9  00A4               	movwf	??_saveDataToFlash+1
  6384  02DA  0824               	movf	??_saveDataToFlash+1,w
  6385  02DB  00F3               	movwf	ReadMemoryAdress@var1
  6386  02DC  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6387  02DD  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6388                           
  6389                           ;functions.c: 1095: read_write_flash_ram(
  6390                           ;functions.c: 1096: 0,
  6391                           ;functions.c: 1097: 1,
  6392                           ;functions.c: 1098: addr3,
  6393                           ;functions.c: 1099: addr2,
  6394                           ;functions.c: 1100: addr1,
  6395                           ;functions.c: 1101: &value);
  6396  02E2  3001               	movlw	1
  6397  02E3  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6398  02E4  3000               	movlw	0
  6399  02E5  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6400  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  6401  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  6402  02E8  082A               	movf	saveDataToFlash@addr3,w
  6403  02E9  00A3               	movwf	??_saveDataToFlash
  6404  02EA  0823               	movf	??_saveDataToFlash,w
  6405  02EB  00F7               	movwf	read_write_flash_ram@flash_sector
  6406  02EC  0829               	movf	saveDataToFlash@addr2,w
  6407  02ED  00A4               	movwf	??_saveDataToFlash+1
  6408  02EE  0824               	movf	??_saveDataToFlash+1,w
  6409  02EF  00F8               	movwf	read_write_flash_ram@flash_page
  6410  02F0  0828               	movf	saveDataToFlash@addr1,w
  6411  02F1  00A5               	movwf	??_saveDataToFlash+2
  6412  02F2  0825               	movf	??_saveDataToFlash+2,w
  6413  02F3  00F9               	movwf	read_write_flash_ram@offset
  6414  02F4  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6415  02F5  00A6               	movwf	??_saveDataToFlash+3
  6416  02F6  0826               	movf	??_saveDataToFlash+3,w
  6417  02F7  00FA               	movwf	read_write_flash_ram@mem_ptr
  6418  02F8  3000               	movlw	0
  6419  02F9  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6420                           
  6421                           ;functions.c: 1102: IncreaseMemoryAdress();
  6422  02FE  120A  158A  250B  120A  118A  	fcall	_IncreaseMemoryAdress
  6423                           
  6424                           ;functions.c: 1105: value = AnalogValue(8);
  6425  0303  3008               	movlw	8
  6426  0304  120A  158A  23A9  120A  118A  	fcall	i1_AnalogValue
  6427  0309  1283               	bcf	3,5	;RP0=0, select bank0
  6428  030A  1303               	bcf	3,6	;RP1=0, select bank0
  6429  030B  00A3               	movwf	??_saveDataToFlash
  6430  030C  0823               	movf	??_saveDataToFlash,w
  6431  030D  00A7               	movwf	saveDataToFlash@value
  6432                           
  6433                           ;functions.c: 1106: ReadMemoryAdress(&addr3, &addr2, &addr1);
  6434  030E  3029               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  6435  030F  00A3               	movwf	??_saveDataToFlash
  6436  0310  0823               	movf	??_saveDataToFlash,w
  6437  0311  00F2               	movwf	ReadMemoryAdress@var2
  6438  0312  3028               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  6439  0313  00A4               	movwf	??_saveDataToFlash+1
  6440  0314  0824               	movf	??_saveDataToFlash+1,w
  6441  0315  00F3               	movwf	ReadMemoryAdress@var1
  6442  0316  302A               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  6443  0317  120A  158A  233B  120A  118A  	fcall	_ReadMemoryAdress
  6444                           
  6445                           ;functions.c: 1107: read_write_flash_ram(
  6446                           ;functions.c: 1108: 0,
  6447                           ;functions.c: 1109: 1,
  6448                           ;functions.c: 1110: addr3,
  6449                           ;functions.c: 1111: addr2,
  6450                           ;functions.c: 1112: addr1,
  6451                           ;functions.c: 1113: &value);
  6452  031C  3001               	movlw	1
  6453  031D  00F5               	movwf	read_write_flash_ram@bytes_to_readwrite
  6454  031E  3000               	movlw	0
  6455  031F  00F6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  6456  0320  1283               	bcf	3,5	;RP0=0, select bank0
  6457  0321  1303               	bcf	3,6	;RP1=0, select bank0
  6458  0322  082A               	movf	saveDataToFlash@addr3,w
  6459  0323  00A3               	movwf	??_saveDataToFlash
  6460  0324  0823               	movf	??_saveDataToFlash,w
  6461  0325  00F7               	movwf	read_write_flash_ram@flash_sector
  6462  0326  0829               	movf	saveDataToFlash@addr2,w
  6463  0327  00A4               	movwf	??_saveDataToFlash+1
  6464  0328  0824               	movf	??_saveDataToFlash+1,w
  6465  0329  00F8               	movwf	read_write_flash_ram@flash_page
  6466  032A  0828               	movf	saveDataToFlash@addr1,w
  6467  032B  00A5               	movwf	??_saveDataToFlash+2
  6468  032C  0825               	movf	??_saveDataToFlash+2,w
  6469  032D  00F9               	movwf	read_write_flash_ram@offset
  6470  032E  3027               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  6471  032F  00A6               	movwf	??_saveDataToFlash+3
  6472  0330  0826               	movf	??_saveDataToFlash+3,w
  6473  0331  00FA               	movwf	read_write_flash_ram@mem_ptr
  6474  0332  3000               	movlw	0
  6475  0333  120A  158A  26F1  120A  118A  	fcall	_read_write_flash_ram
  6476                           
  6477                           ;functions.c: 1114: IncreaseMemoryAdress();
  6478  0338  120A  158A  250B   	fcall	_IncreaseMemoryAdress
  6479  033B  0008               	return
  6480  033C                     __end_of_saveDataToFlash:	
  6481                           
  6482                           	psect	text38
  6483  0BA9                     __ptext38:	
  6484 ;; *************** function i1_AnalogValue *****************
  6485 ;; Defined at:
  6486 ;;		line 870 in file "functions.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  channel         1    wreg     unsigned char 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;  channel         1    7[COMMON] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      unsigned char 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0, pclath, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6500 ;;      Params:         0       0       0       0       0
  6501 ;;      Locals:         1       0       0       0       0
  6502 ;;      Temps:          1       0       0       0       0
  6503 ;;      Totals:         2       0       0       0       0
  6504 ;;Total ram usage:        2 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    1
  6507 ;; This function calls:
  6508 ;;		i1_DelayDs
  6509 ;; This function is called by:
  6510 ;;		_saveDataToFlash
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function i1_AnalogValue
  6516  0BA9                     i1_AnalogValue:	
  6517                           
  6518                           ;incstack = 0
  6519 ;; hardware stack exceeded
  6520                           ; Regs used in i1_AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  6521                           ;i1AnalogValue@channel stored from wreg
  6522  0BA9  00F7               	movwf	i1AnalogValue@channel
  6523                           
  6524                           ;functions.c: 872: ADCON0bits.CHS = channel;
  6525  0BAA  0877               	movf	i1AnalogValue@channel,w
  6526  0BAB  00F6               	movwf	??i1_AnalogValue
  6527  0BAC  0DF6               	rlf	??i1_AnalogValue,f
  6528  0BAD  0DF6               	rlf	??i1_AnalogValue,f
  6529  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0BB0  081F               	movf	31,w	;volatile
  6532  0BB1  0676               	xorwf	??i1_AnalogValue,w
  6533  0BB2  39C3               	andlw	-61
  6534  0BB3  0676               	xorwf	??i1_AnalogValue,w
  6535  0BB4  009F               	movwf	31	;volatile
  6536                           
  6537                           ;functions.c: 873: ADCON0bits.ADON = 1;
  6538  0BB5  141F               	bsf	31,0	;volatile
  6539                           
  6540                           ;functions.c: 874: DelayDs(1);
  6541  0BB6  3001               	movlw	1
  6542  0BB7  00F0               	movwf	i1DelayDs@cnt
  6543  0BB8  3000               	movlw	0
  6544  0BB9  00F1               	movwf	i1DelayDs@cnt+1
  6545  0BBA  120A  158A  22D8  120A  158A  	fcall	i1_DelayDs
  6546                           
  6547                           ;functions.c: 875: ADCON0bits.GO = 1;
  6548  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  6549  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  6550  0BC1  149F               	bsf	31,1	;volatile
  6551                           
  6552                           ;functions.c: 876: DelayDs(1);
  6553  0BC2  3001               	movlw	1
  6554  0BC3  00F0               	movwf	i1DelayDs@cnt
  6555  0BC4  3000               	movlw	0
  6556  0BC5  00F1               	movwf	i1DelayDs@cnt+1
  6557  0BC6  120A  158A  22D8  120A  158A  	fcall	i1_DelayDs
  6558  0BCB                     i1l458:	
  6559                           ;functions.c: 877: while(ADCON0bits.GO);
  6560                           
  6561  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  6563  0BCD  189F               	btfsc	31,1	;volatile
  6564  0BCE  2BCB               	goto	i1l458
  6565                           
  6566                           ;functions.c: 878: ADCON0bits.ADON = 0;
  6567  0BCF  101F               	bcf	31,0	;volatile
  6568                           
  6569                           ;functions.c: 879: return ADRESH;
  6570  0BD0  081E               	movf	30,w	;volatile
  6571  0BD1  0008               	return
  6572  0BD2                     __end_ofi1_AnalogValue:	
  6573                           
  6574                           	psect	text39
  6575  0AD8                     __ptext39:	
  6576 ;; *************** function i1_DelayDs *****************
  6577 ;; Defined at:
  6578 ;;		line 482 in file "functions.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  cnt             2    0[COMMON] int 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  DelayDs         2    4[COMMON] int 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6592 ;;      Params:         2       0       0       0       0
  6593 ;;      Locals:         2       0       0       0       0
  6594 ;;      Temps:          2       0       0       0       0
  6595 ;;      Totals:         6       0       0       0       0
  6596 ;;Total ram usage:        6 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		i1_AnalogValue
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           
  6606                           ;psect for function i1_DelayDs
  6607  0AD8                     i1_DelayDs:	
  6608                           
  6609                           ;functions.c: 483: int i;
  6610                           ;functions.c: 484: for(i=0;i<cnt;i++){
  6611                           
  6612                           ;incstack = 0
  6613 ;; hardware stack exceeded
  6614                           ; Regs used in i1_DelayDs: [wreg+status,2]
  6615  0AD8  01F4               	clrf	i1DelayDs@i
  6616  0AD9  01F5               	clrf	i1DelayDs@i+1
  6617  0ADA                     i1l388:	
  6618  0ADA  0875               	movf	i1DelayDs@i+1,w
  6619  0ADB  3A80               	xorlw	128
  6620  0ADC  00F2               	movwf	??i1_DelayDs
  6621  0ADD  0871               	movf	i1DelayDs@cnt+1,w
  6622  0ADE  3A80               	xorlw	128
  6623  0ADF  0272               	subwf	??i1_DelayDs,w
  6624  0AE0  1D03               	skipz
  6625  0AE1  2AE4               	goto	u126_25
  6626  0AE2  0870               	movf	i1DelayDs@cnt,w
  6627  0AE3  0274               	subwf	i1DelayDs@i,w
  6628  0AE4                     u126_25:	
  6629  0AE4  1803               	btfsc	3,0
  6630  0AE5  0008               	return
  6631                           
  6632                           ;functions.c: 485: _delay((unsigned long)((100)*(4000000/4000.0)));
  6633  0AE6  3082               	movlw	130
  6634  0AE7  00F3               	movwf	??i1_DelayDs+1
  6635  0AE8  30DD               	movlw	221
  6636  0AE9  00F2               	movwf	??i1_DelayDs
  6637  0AEA                     u304_27:	
  6638  0AEA  0BF2               	decfsz	??i1_DelayDs,f
  6639  0AEB  2AEA               	goto	u304_27
  6640  0AEC  0BF3               	decfsz	??i1_DelayDs+1,f
  6641  0AED  2AEA               	goto	u304_27
  6642  0AEE  2AEF               	nop2
  6643  0AEF  3001               	movlw	1
  6644  0AF0  07F4               	addwf	i1DelayDs@i,f
  6645  0AF1  1803               	skipnc
  6646  0AF2  0AF5               	incf	i1DelayDs@i+1,f
  6647  0AF3  3000               	movlw	0
  6648  0AF4  07F5               	addwf	i1DelayDs@i+1,f
  6649  0AF5  2ADA               	goto	i1l388
  6650  0AF6                     __end_ofi1_DelayDs:	
  6651                           
  6652                           	psect	text40
  6653  0EF1                     __ptext40:	
  6654 ;; *************** function _read_write_flash_ram *****************
  6655 ;; Defined at:
  6656 ;;		line 107 in file "m25p16.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  one_read_zer    1    wreg     unsigned char 
  6659 ;;  bytes_to_rea    2    5[COMMON] unsigned short 
  6660 ;;  flash_sector    1    7[COMMON] unsigned char 
  6661 ;;  flash_page      1    8[COMMON] unsigned char 
  6662 ;;  offset          1    9[COMMON] unsigned char 
  6663 ;;  mem_ptr         1   10[COMMON] PTR unsigned char 
  6664 ;;		 -> saveDataToFlash@value(1), 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  one_read_zer    1    0[BANK0 ] unsigned char 
  6667 ;;  i               2    1[BANK0 ] unsigned short 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         6       0       0       0       0
  6678 ;;      Locals:         0       3       0       0       0
  6679 ;;      Temps:          2       0       0       0       0
  6680 ;;      Totals:         8       3       0       0       0
  6681 ;;Total ram usage:       11 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    3
  6684 ;; This function calls:
  6685 ;;		i1_ReadSPI
  6686 ;;		i1_WriteSPI
  6687 ;;		i1_read_ram_status
  6688 ;; This function is called by:
  6689 ;;		_saveDataToFlash
  6690 ;;		_write_flash_page
  6691 ;;		_read_flash_page
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           
  6696                           ;psect for function _read_write_flash_ram
  6697  0EF1                     _read_write_flash_ram:	
  6698                           
  6699                           ;incstack = 0
  6700 ;; hardware stack exceeded
  6701                           ; Regs used in _read_write_flash_ram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6702                           ;read_write_flash_ram@one_read_zero_write stored from wreg
  6703  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  6704  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  6705  0EF3  00A0               	movwf	read_write_flash_ram@one_read_zero_write
  6706                           
  6707                           ;m25p16.c: 122: unsigned short int i;
  6708                           ;m25p16.c: 126: RD3 = 0;
  6709  0EF4  1188               	bcf	8,3	;volatile
  6710                           
  6711                           ;m25p16.c: 127: if(one_read_zero_write)
  6712  0EF5  0820               	movf	read_write_flash_ram@one_read_zero_write,w
  6713  0EF6  1903               	btfsc	3,2
  6714  0EF7  2EFA               	goto	i1l2633
  6715                           
  6716                           ;m25p16.c: 128: {
  6717                           ;m25p16.c: 129: WriteSPI(0x03);
  6718  0EF8  3003               	movlw	3
  6719  0EF9  2F08               	goto	L4
  6720  0EFA                     i1l2633:	
  6721                           ;m25p16.c: 130: }
  6722                           
  6723                           
  6724                           ;m25p16.c: 131: else
  6725                           ;m25p16.c: 132: {
  6726                           ;m25p16.c: 133: WriteSPI(0x06);
  6727  0EFA  3006               	movlw	6
  6728  0EFB  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6729                           
  6730                           ;m25p16.c: 134: RD3 = 1;
  6731  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  6732  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  6733  0F02  1588               	bsf	8,3	;volatile
  6734                           
  6735                           ;m25p16.c: 135: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6736  0F03  0000               	nop
  6737                           
  6738                           ;m25p16.c: 136: RD3 = 0;
  6739  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  6740  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  6741  0F06  1188               	bcf	8,3	;volatile
  6742                           
  6743                           ;m25p16.c: 137: WriteSPI(0x02);
  6744  0F07  3002               	movlw	2
  6745  0F08                     L4:	
  6746  0F08  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6747                           
  6748                           ;m25p16.c: 139: }
  6749                           ;m25p16.c: 141: WriteSPI(flash_sector);
  6750  0F0D  0877               	movf	read_write_flash_ram@flash_sector,w
  6751  0F0E  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6752                           
  6753                           ;m25p16.c: 142: WriteSPI(flash_page);
  6754  0F13  0878               	movf	read_write_flash_ram@flash_page,w
  6755  0F14  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6756                           
  6757                           ;m25p16.c: 143: WriteSPI(offset);
  6758  0F19  0879               	movf	read_write_flash_ram@offset,w
  6759  0F1A  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6760                           
  6761                           ;m25p16.c: 145: for (i=0;i<bytes_to_readwrite;i++)
  6762  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  6763  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  6764  0F21  01A1               	clrf	read_write_flash_ram@i
  6765  0F22  01A2               	clrf	read_write_flash_ram@i+1
  6766  0F23                     i1l2651:	
  6767  0F23  0876               	movf	read_write_flash_ram@bytes_to_readwrite+1,w
  6768  0F24  0222               	subwf	read_write_flash_ram@i+1,w
  6769  0F25  1D03               	skipz
  6770  0F26  2F29               	goto	u158_25
  6771  0F27  0875               	movf	read_write_flash_ram@bytes_to_readwrite,w
  6772  0F28  0221               	subwf	read_write_flash_ram@i,w
  6773  0F29                     u158_25:	
  6774  0F29  1803               	btfsc	3,0
  6775  0F2A  2F54               	goto	i1l568
  6776                           
  6777                           ;m25p16.c: 146: {
  6778                           ;m25p16.c: 147: if (one_read_zero_write)
  6779  0F2B  0820               	movf	read_write_flash_ram@one_read_zero_write,w
  6780  0F2C  1903               	btfsc	3,2
  6781  0F2D  2F3F               	goto	i1l2647
  6782                           
  6783                           ;m25p16.c: 148: {
  6784                           ;m25p16.c: 149: mem_ptr[i] = ReadSPI();
  6785  0F2E  120A  158A  2186  120A  158A  	fcall	i1_ReadSPI
  6786  0F33  00FB               	movwf	??_read_write_flash_ram
  6787  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  6788  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  6789  0F36  0821               	movf	read_write_flash_ram@i,w
  6790  0F37  077A               	addwf	read_write_flash_ram@mem_ptr,w
  6791  0F38  00FC               	movwf	??_read_write_flash_ram+1
  6792  0F39  087C               	movf	??_read_write_flash_ram+1,w
  6793  0F3A  0084               	movwf	4
  6794  0F3B  087B               	movf	??_read_write_flash_ram,w
  6795  0F3C  1383               	bcf	3,7	;select IRP bank0
  6796  0F3D  0080               	movwf	0
  6797                           
  6798                           ;m25p16.c: 150: }
  6799  0F3E  2F4B               	goto	i1l2649
  6800  0F3F                     i1l2647:	
  6801                           
  6802                           ;m25p16.c: 151: else
  6803                           ;m25p16.c: 152: {
  6804                           ;m25p16.c: 153: WriteSPI(mem_ptr[i]);
  6805  0F3F  0821               	movf	read_write_flash_ram@i,w
  6806  0F40  077A               	addwf	read_write_flash_ram@mem_ptr,w
  6807  0F41  00FB               	movwf	??_read_write_flash_ram
  6808  0F42  087B               	movf	??_read_write_flash_ram,w
  6809  0F43  0084               	movwf	4
  6810  0F44  1383               	bcf	3,7	;select IRP bank0
  6811  0F45  0800               	movf	0,w
  6812  0F46  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6813  0F4B                     i1l2649:	
  6814  0F4B  3001               	movlw	1
  6815  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  6816  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  6817  0F4E  07A1               	addwf	read_write_flash_ram@i,f
  6818  0F4F  1803               	skipnc
  6819  0F50  0AA2               	incf	read_write_flash_ram@i+1,f
  6820  0F51  3000               	movlw	0
  6821  0F52  07A2               	addwf	read_write_flash_ram@i+1,f
  6822  0F53  2F23               	goto	i1l2651
  6823  0F54                     i1l568:	
  6824                           
  6825                           ;m25p16.c: 154: }
  6826                           ;m25p16.c: 155: }
  6827                           ;m25p16.c: 157: RD3 = 1;
  6828  0F54  1588               	bsf	8,3	;volatile
  6829                           
  6830                           ;m25p16.c: 159: _delay((unsigned long)((1)*(4000000/4000000.0)));
  6831  0F55  0000               	nop
  6832  0F56                     i1l2655:	
  6833                           ;m25p16.c: 160: while (read_ram_status() & 0b00000011) {
  6834                           
  6835  0F56  120A  158A  2215  120A  158A  	fcall	i1_read_ram_status
  6836  0F5B  3903               	andlw	3
  6837  0F5C  1903               	btfsc	3,2
  6838  0F5D  0008               	return
  6839                           
  6840                           ;m25p16.c: 161: _delay((unsigned long)((1)*(4000000/4000.0)));
  6841  0F5E  30C7               	movlw	199
  6842  0F5F  00FB               	movwf	??_read_write_flash_ram
  6843  0F60                     u305_27:	
  6844  0F60  2F61               	nop2
  6845  0F61  0BFB               	decfsz	??_read_write_flash_ram,f
  6846  0F62  2F60               	goto	u305_27
  6847  0F63  2F64               	nop2
  6848  0F64  2F65               	nop2
  6849  0F65  2F56               	goto	i1l2655
  6850  0F66                     __end_of_read_write_flash_ram:	
  6851                           
  6852                           	psect	text41
  6853  0A15                     __ptext41:	
  6854 ;; *************** function i1_read_ram_status *****************
  6855 ;; Defined at:
  6856 ;;		line 57 in file "m25p16.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  read_ram_sta    1    4[COMMON] unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      unsigned char 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0, pclath, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6870 ;;      Params:         0       0       0       0       0
  6871 ;;      Locals:         1       0       0       0       0
  6872 ;;      Temps:          1       0       0       0       0
  6873 ;;      Totals:         2       0       0       0       0
  6874 ;;Total ram usage:        2 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; Hardware stack levels required when called:    2
  6877 ;; This function calls:
  6878 ;;		i1_ReadSPI
  6879 ;;		i1_WriteSPI
  6880 ;; This function is called by:
  6881 ;;		_read_write_flash_ram
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function i1_read_ram_status
  6887  0A15                     i1_read_ram_status:	
  6888                           
  6889                           ;m25p16.c: 59: unsigned char status;
  6890                           ;m25p16.c: 60: RD3 = 0;
  6891                           
  6892                           ;incstack = 0
  6893 ;; hardware stack exceeded
  6894                           ; Regs used in i1_read_ram_status: [wreg+status,2+status,0+pclath+cstack]
  6895  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  6896  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  6897  0A17  1188               	bcf	8,3	;volatile
  6898                           
  6899                           ;m25p16.c: 61: WriteSPI(0x05);
  6900  0A18  3005               	movlw	5
  6901  0A19  120A  158A  21C9  120A  158A  	fcall	i1_WriteSPI
  6902                           
  6903                           ;m25p16.c: 62: status = ReadSPI();
  6904  0A1E  120A  158A  2186   	fcall	i1_ReadSPI
  6905  0A21  00F3               	movwf	??i1_read_ram_status
  6906  0A22  0873               	movf	??i1_read_ram_status,w
  6907  0A23  00F4               	movwf	i1read_ram_status@status
  6908                           
  6909                           ;m25p16.c: 63: RD3 = 1;
  6910  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  6911  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  6912  0A26  1588               	bsf	8,3	;volatile
  6913                           
  6914                           ;m25p16.c: 64: return status;
  6915  0A27  0874               	movf	i1read_ram_status@status,w
  6916  0A28  0008               	return
  6917  0A29                     __end_ofi1_read_ram_status:	
  6918                           
  6919                           	psect	text42
  6920  0986                     __ptext42:	
  6921 ;; *************** function i1_ReadSPI *****************
  6922 ;; Defined at:
  6923 ;;		line 503 in file "functions.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      unsigned char 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6937 ;;      Params:         0       0       0       0       0
  6938 ;;      Locals:         0       0       0       0       0
  6939 ;;      Temps:          0       0       0       0       0
  6940 ;;      Totals:         0       0       0       0       0
  6941 ;;Total ram usage:        0 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    1
  6944 ;; This function calls:
  6945 ;;		i1_WriteSPI
  6946 ;; This function is called by:
  6947 ;;		_read_write_flash_ram
  6948 ;;		i1_read_ram_status
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function i1_ReadSPI
  6954  0986                     i1_ReadSPI:	
  6955                           
  6956                           ;functions.c: 505: WriteSPI(0x00);
  6957                           
  6958                           ;incstack = 0
  6959 ;; hardware stack exceeded
  6960                           ; Regs used in i1_ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  6961  0986  3000               	movlw	0
  6962  0987  120A  158A  21C9   	fcall	i1_WriteSPI
  6963                           
  6964                           ;functions.c: 506: return SSPBUF;
  6965  098A  1283               	bcf	3,5	;RP0=0, select bank0
  6966  098B  1303               	bcf	3,6	;RP1=0, select bank0
  6967  098C  0813               	movf	19,w	;volatile
  6968  098D  0008               	return
  6969  098E                     __end_ofi1_ReadSPI:	
  6970                           
  6971                           	psect	text43
  6972  09C9                     __ptext43:	
  6973 ;; *************** function i1_WriteSPI *****************
  6974 ;; Defined at:
  6975 ;;		line 491 in file "functions.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  databyte        1    wreg     unsigned char 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  databyte        1    2[COMMON] unsigned char 
  6980 ;;  WriteSPI        1    1[COMMON] unsigned char 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1    wreg      void 
  6983 ;; Registers used:
  6984 ;;		wreg
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6990 ;;      Params:         0       0       0       0       0
  6991 ;;      Locals:         2       0       0       0       0
  6992 ;;      Temps:          1       0       0       0       0
  6993 ;;      Totals:         3       0       0       0       0
  6994 ;;Total ram usage:        3 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_read_write_flash_ram
  7000 ;;		i1_ReadSPI
  7001 ;;		i1_read_ram_status
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function i1_WriteSPI
  7007  09C9                     i1_WriteSPI:	
  7008                           
  7009                           ;incstack = 0
  7010 ;; hardware stack exceeded
  7011                           ; Regs used in i1_WriteSPI: [wreg]
  7012                           ;i1WriteSPI@databyte stored from wreg
  7013  09C9  00F2               	movwf	i1WriteSPI@databyte
  7014                           
  7015                           ;functions.c: 493: unsigned char buffer;
  7016                           ;functions.c: 494: buffer = SSPBUF;
  7017  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  7018  09CB  1303               	bcf	3,6	;RP1=0, select bank0
  7019  09CC  0813               	movf	19,w	;volatile
  7020  09CD  00F0               	movwf	??i1_WriteSPI
  7021  09CE  0870               	movf	??i1_WriteSPI,w
  7022  09CF  00F1               	movwf	i1WriteSPI@buffer
  7023                           
  7024                           ;functions.c: 495: PIR1bits.SSPIF=0;
  7025  09D0  118C               	bcf	12,3	;volatile
  7026                           
  7027                           ;functions.c: 496: SSPBUF = databyte;
  7028  09D1  0872               	movf	i1WriteSPI@databyte,w
  7029  09D2  0093               	movwf	19	;volatile
  7030  09D3                     i1l394:	
  7031                           ;functions.c: 497: while(PIR1bits.SSPIF == 0);
  7032                           
  7033  09D3  1D8C               	btfss	12,3	;volatile
  7034  09D4  29D3               	goto	i1l394
  7035                           
  7036                           ;functions.c: 498: PIR1bits.SSPIF = 0;
  7037  09D5  118C               	bcf	12,3	;volatile
  7038  09D6  0008               	return
  7039  09D7                     __end_ofi1_WriteSPI:	
  7040                           
  7041                           	psect	text44
  7042  0B3B                     __ptext44:	
  7043 ;; *************** function _ReadMemoryAdress *****************
  7044 ;; Defined at:
  7045 ;;		line 955 in file "functions.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  var3            1    wreg     PTR unsigned char 
  7048 ;;		 -> saveDataToFlash@addr3(1), 
  7049 ;;  var2            1    2[COMMON] PTR unsigned char 
  7050 ;;		 -> saveDataToFlash@addr2(1), 
  7051 ;;  var1            1    3[COMMON] PTR unsigned char 
  7052 ;;		 -> saveDataToFlash@addr1(1), 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  var3            1    5[COMMON] PTR unsigned char 
  7055 ;;		 -> saveDataToFlash@addr3(1), 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         2       0       0       0       0
  7066 ;;      Locals:         1       0       0       0       0
  7067 ;;      Temps:          1       0       0       0       0
  7068 ;;      Totals:         4       0       0       0       0
  7069 ;;Total ram usage:        4 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    1
  7072 ;; This function calls:
  7073 ;;		i1_eeprom_read
  7074 ;; This function is called by:
  7075 ;;		_saveDataToFlash
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _ReadMemoryAdress
  7081  0B3B                     _ReadMemoryAdress:	
  7082                           
  7083                           ;incstack = 0
  7084 ;; hardware stack exceeded
  7085                           ; Regs used in _ReadMemoryAdress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7086                           ;ReadMemoryAdress@var3 stored from wreg
  7087  0B3B  00F5               	movwf	ReadMemoryAdress@var3
  7088                           
  7089                           ;functions.c: 957: *var3 = eeprom_read(1);
  7090  0B3C  3001               	movlw	1
  7091  0B3D  120A  158A  22A1  120A  158A  	fcall	i1_eeprom_read
  7092  0B42  00F4               	movwf	??_ReadMemoryAdress
  7093  0B43  0875               	movf	ReadMemoryAdress@var3,w
  7094  0B44  0084               	movwf	4
  7095  0B45  0874               	movf	??_ReadMemoryAdress,w
  7096  0B46  1383               	bcf	3,7	;select IRP bank0
  7097  0B47  0080               	movwf	0
  7098                           
  7099                           ;functions.c: 958: *var2 = eeprom_read(2);
  7100  0B48  3002               	movlw	2
  7101  0B49  120A  158A  22A1  120A  158A  	fcall	i1_eeprom_read
  7102  0B4E  00F4               	movwf	??_ReadMemoryAdress
  7103  0B4F  0872               	movf	ReadMemoryAdress@var2,w
  7104  0B50  0084               	movwf	4
  7105  0B51  0874               	movf	??_ReadMemoryAdress,w
  7106  0B52  1383               	bcf	3,7	;select IRP bank0
  7107  0B53  0080               	movwf	0
  7108                           
  7109                           ;functions.c: 959: *var1 = eeprom_read(3);
  7110  0B54  3003               	movlw	3
  7111  0B55  120A  158A  22A1   	fcall	i1_eeprom_read
  7112  0B58  00F4               	movwf	??_ReadMemoryAdress
  7113  0B59  0873               	movf	ReadMemoryAdress@var1,w
  7114  0B5A  0084               	movwf	4
  7115  0B5B  0874               	movf	??_ReadMemoryAdress,w
  7116  0B5C  1383               	bcf	3,7	;select IRP bank0
  7117  0B5D  0080               	movwf	0
  7118  0B5E  0008               	return
  7119  0B5F                     __end_of_ReadMemoryAdress:	
  7120                           
  7121                           	psect	text45
  7122  0D0B                     __ptext45:	
  7123 ;; *************** function _IncreaseMemoryAdress *****************
  7124 ;; Defined at:
  7125 ;;		line 980 in file "functions.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  var3            1    6[COMMON] unsigned char 
  7130 ;;  var2            1    5[COMMON] unsigned char 
  7131 ;;  var1            1    4[COMMON] unsigned char 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       0       0       0       0
  7142 ;;      Locals:         3       0       0       0       0
  7143 ;;      Temps:          1       0       0       0       0
  7144 ;;      Totals:         4       0       0       0       0
  7145 ;;Total ram usage:        4 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    1
  7148 ;; This function calls:
  7149 ;;		i1_eeprom_read
  7150 ;;		i1_eeprom_write
  7151 ;; This function is called by:
  7152 ;;		_saveDataToFlash
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function _IncreaseMemoryAdress
  7158  0D0B                     _IncreaseMemoryAdress:	
  7159                           
  7160                           ;functions.c: 982: unsigned char var1, var2, var3;
  7161                           ;functions.c: 983: var1 = eeprom_read(3);
  7162                           
  7163                           ;incstack = 0
  7164 ;; hardware stack exceeded
  7165                           ; Regs used in _IncreaseMemoryAdress: [wreg+status,2+status,0+pclath+cstack]
  7166  0D0B  3003               	movlw	3
  7167  0D0C  120A  158A  22A1  120A  158A  	fcall	i1_eeprom_read
  7168  0D11  00F3               	movwf	??_IncreaseMemoryAdress
  7169  0D12  0873               	movf	??_IncreaseMemoryAdress,w
  7170  0D13  00F4               	movwf	IncreaseMemoryAdress@var1
  7171                           
  7172                           ;functions.c: 984: var1++;
  7173  0D14  3001               	movlw	1
  7174  0D15  00F3               	movwf	??_IncreaseMemoryAdress
  7175  0D16  0873               	movf	??_IncreaseMemoryAdress,w
  7176  0D17  07F4               	addwf	IncreaseMemoryAdress@var1,f
  7177                           
  7178                           ;functions.c: 985: eeprom_write(3,var1);
  7179  0D18  0874               	movf	IncreaseMemoryAdress@var1,w
  7180  0D19  00F3               	movwf	??_IncreaseMemoryAdress
  7181  0D1A  0873               	movf	??_IncreaseMemoryAdress,w
  7182  0D1B  00F0               	movwf	i1eeprom_write@value
  7183  0D1C  3003               	movlw	3
  7184  0D1D  120A  158A  2383  120A  158A  	fcall	i1_eeprom_write
  7185                           
  7186                           ;functions.c: 986: if(var1 == 0)
  7187  0D22  0874               	movf	IncreaseMemoryAdress@var1,w
  7188  0D23  1D03               	btfss	3,2
  7189  0D24  0008               	return
  7190                           
  7191                           ;functions.c: 987: {
  7192                           ;functions.c: 988: var2 = eeprom_read(2);
  7193  0D25  3002               	movlw	2
  7194  0D26  120A  158A  22A1  120A  158A  	fcall	i1_eeprom_read
  7195  0D2B  00F3               	movwf	??_IncreaseMemoryAdress
  7196  0D2C  0873               	movf	??_IncreaseMemoryAdress,w
  7197  0D2D  00F5               	movwf	IncreaseMemoryAdress@var2
  7198                           
  7199                           ;functions.c: 989: var2++;
  7200  0D2E  3001               	movlw	1
  7201  0D2F  00F3               	movwf	??_IncreaseMemoryAdress
  7202  0D30  0873               	movf	??_IncreaseMemoryAdress,w
  7203  0D31  07F5               	addwf	IncreaseMemoryAdress@var2,f
  7204                           
  7205                           ;functions.c: 990: eeprom_write(2,var2);
  7206  0D32  0875               	movf	IncreaseMemoryAdress@var2,w
  7207  0D33  00F3               	movwf	??_IncreaseMemoryAdress
  7208  0D34  0873               	movf	??_IncreaseMemoryAdress,w
  7209  0D35  00F0               	movwf	i1eeprom_write@value
  7210  0D36  3002               	movlw	2
  7211  0D37  120A  158A  2383  120A  158A  	fcall	i1_eeprom_write
  7212                           
  7213                           ;functions.c: 991: if(var2 == 0)
  7214  0D3C  0875               	movf	IncreaseMemoryAdress@var2,w
  7215  0D3D  1D03               	btfss	3,2
  7216  0D3E  0008               	return
  7217                           
  7218                           ;functions.c: 992: {
  7219                           ;functions.c: 993: var3 = eeprom_read(1);
  7220  0D3F  3001               	movlw	1
  7221  0D40  120A  158A  22A1  120A  158A  	fcall	i1_eeprom_read
  7222  0D45  00F3               	movwf	??_IncreaseMemoryAdress
  7223  0D46  0873               	movf	??_IncreaseMemoryAdress,w
  7224  0D47  00F6               	movwf	IncreaseMemoryAdress@var3
  7225                           
  7226                           ;functions.c: 994: var3++;
  7227  0D48  3001               	movlw	1
  7228  0D49  00F3               	movwf	??_IncreaseMemoryAdress
  7229  0D4A  0873               	movf	??_IncreaseMemoryAdress,w
  7230  0D4B  07F6               	addwf	IncreaseMemoryAdress@var3,f
  7231                           
  7232                           ;functions.c: 995: if(var3 > 0x1F)
  7233  0D4C  3020               	movlw	32
  7234  0D4D  0276               	subwf	IncreaseMemoryAdress@var3,w
  7235  0D4E  1C03               	skipc
  7236  0D4F  2D54               	goto	i1l2625
  7237                           
  7238                           ;functions.c: 996: var3 = 0x1F;
  7239  0D50  301F               	movlw	31
  7240  0D51  00F3               	movwf	??_IncreaseMemoryAdress
  7241  0D52  0873               	movf	??_IncreaseMemoryAdress,w
  7242  0D53  00F6               	movwf	IncreaseMemoryAdress@var3
  7243  0D54                     i1l2625:	
  7244                           
  7245                           ;functions.c: 998: eeprom_write(1, var3);
  7246  0D54  0876               	movf	IncreaseMemoryAdress@var3,w
  7247  0D55  00F3               	movwf	??_IncreaseMemoryAdress
  7248  0D56  0873               	movf	??_IncreaseMemoryAdress,w
  7249  0D57  00F0               	movwf	i1eeprom_write@value
  7250  0D58  3001               	movlw	1
  7251  0D59  120A  158A  2383   	fcall	i1_eeprom_write
  7252  0D5C  0008               	return
  7253  0D5D                     __end_of_IncreaseMemoryAdress:	
  7254                           
  7255                           	psect	text46
  7256  0B83                     __ptext46:	
  7257 ;; *************** function i1_eeprom_write *****************
  7258 ;; Defined at:
  7259 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  addr            1    wreg     unsigned char 
  7262 ;;  value           1    0[COMMON] unsigned char 
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;  addr            1    2[COMMON] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7274 ;;      Params:         1       0       0       0       0
  7275 ;;      Locals:         1       0       0       0       0
  7276 ;;      Temps:          1       0       0       0       0
  7277 ;;      Totals:         3       0       0       0       0
  7278 ;;Total ram usage:        3 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_IncreaseMemoryAdress
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function i1_eeprom_write
  7289  0B83                     i1_eeprom_write:	
  7290                           
  7291                           ;incstack = 0
  7292 ;; hardware stack exceeded
  7293                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  7294                           ;i1eeprom_write@addr stored from wreg
  7295  0B83  00F2               	movwf	i1eeprom_write@addr
  7296  0B84                     i1l673:	
  7297  0B84  1683               	bsf	3,5	;RP0=1, select bank3
  7298  0B85  1703               	bsf	3,6	;RP1=1, select bank3
  7299  0B86  188C               	btfsc	12,1	;volsfr
  7300  0B87  2B84               	goto	i1l673
  7301  0B88  0872               	movf	i1eeprom_write@addr,w
  7302  0B89  1283               	bcf	3,5	;RP0=0, select bank2
  7303  0B8A  1703               	bsf	3,6	;RP1=1, select bank2
  7304  0B8B  008D               	movwf	13	;volatile
  7305  0B8C  0870               	movf	i1eeprom_write@value,w
  7306  0B8D  008C               	movwf	12	;volatile
  7307  0B8E  303F               	movlw	63
  7308  0B8F  00F1               	movwf	??i1_eeprom_write
  7309  0B90  0871               	movf	??i1_eeprom_write,w
  7310  0B91  1683               	bsf	3,5	;RP0=1, select bank3
  7311  0B92  1703               	bsf	3,6	;RP1=1, select bank3
  7312  0B93  058C               	andwf	12,f	;volsfr
  7313  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  7314  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  7315  0B96  1003               	bcf	3,0	;volatile
  7316  0B97  1B8B               	btfsc	11,7	;volatile
  7317  0B98  1403               	bsf	3,0	;volatile
  7318  0B99  138B               	bcf	11,7	;volatile
  7319  0B9A  1683               	bsf	3,5	;RP0=1, select bank3
  7320  0B9B  1703               	bsf	3,6	;RP1=1, select bank3
  7321  0B9C  150C               	bsf	12,2	;volsfr
  7322  0B9D  3055               	movlw	85
  7323  0B9E  008D               	movwf	13	;volsfr
  7324  0B9F  30AA               	movlw	170
  7325  0BA0  008D               	movwf	13	;volsfr
  7326  0BA1  148C               	bsf	12,1	;volsfr
  7327  0BA2  110C               	bcf	12,2	;volsfr
  7328  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7329  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  7330  0BA5  1C03               	btfss	3,0	;volatile
  7331  0BA6  0008               	return
  7332  0BA7  178B               	bsf	11,7	;volatile
  7333  0BA8  0008               	return
  7334  0BA9                     __end_ofi1_eeprom_write:	
  7335                           
  7336                           	psect	text47
  7337  0AA1                     __ptext47:	
  7338 ;; *************** function i1_eeprom_read *****************
  7339 ;; Defined at:
  7340 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  addr            1    wreg     unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  addr            1    1[COMMON] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      unsigned char 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7354 ;;      Params:         0       0       0       0       0
  7355 ;;      Locals:         1       0       0       0       0
  7356 ;;      Temps:          1       0       0       0       0
  7357 ;;      Totals:         2       0       0       0       0
  7358 ;;Total ram usage:        2 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; This function calls:
  7361 ;;		Nothing
  7362 ;; This function is called by:
  7363 ;;		_ReadMemoryAdress
  7364 ;;		_IncreaseMemoryAdress
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           
  7369                           ;psect for function i1_eeprom_read
  7370  0AA1                     i1_eeprom_read:	
  7371                           
  7372                           ;incstack = 0
  7373 ;; hardware stack exceeded
  7374                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0]
  7375                           ;i1eeprom_read@addr stored from wreg
  7376  0AA1  00F1               	movwf	i1eeprom_read@addr
  7377  0AA2                     i1l651:	
  7378  0AA2  0064               	clrwdt	;# 
  7379  0AA3  1683               	bsf	3,5	;RP0=1, select bank3
  7380  0AA4  1703               	bsf	3,6	;RP1=1, select bank3
  7381  0AA5  188C               	btfsc	12,1	;volsfr
  7382  0AA6  2AA2               	goto	i1l651
  7383  0AA7  0871               	movf	i1eeprom_read@addr,w
  7384  0AA8  1283               	bcf	3,5	;RP0=0, select bank2
  7385  0AA9  1703               	bsf	3,6	;RP1=1, select bank2
  7386  0AAA  008D               	movwf	13	;volatile
  7387  0AAB  303F               	movlw	63
  7388  0AAC  00F0               	movwf	??i1_eeprom_read
  7389  0AAD  0870               	movf	??i1_eeprom_read,w
  7390  0AAE  1683               	bsf	3,5	;RP0=1, select bank3
  7391  0AAF  1703               	bsf	3,6	;RP1=1, select bank3
  7392  0AB0  058C               	andwf	12,f	;volsfr
  7393  0AB1  140C               	bsf	12,0	;volsfr
  7394  0AB2  1003               	clrc
  7395  0AB3  180C               	btfsc	12,0	;volsfr
  7396  0AB4  1403               	setc
  7397  0AB5  3000               	movlw	0
  7398  0AB6  1803               	skipnc
  7399  0AB7  3001               	movlw	1
  7400  0AB8  1283               	bcf	3,5	;RP0=0, select bank2
  7401  0AB9  1703               	bsf	3,6	;RP1=1, select bank2
  7402  0ABA  080C               	movf	12,w	;volatile
  7403  0ABB  0008               	return
  7404  0ABC                     __end_ofi1_eeprom_read:	
  7405                           
  7406                           	psect	text48
  7407  0CC9                     __ptext48:	
  7408 ;; *************** function _TimerCounter *****************
  7409 ;; Defined at:
  7410 ;;		line 386 in file "functions.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  i               2    3[COMMON] int 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7424 ;;      Params:         0       0       0       0       0
  7425 ;;      Locals:         2       0       0       0       0
  7426 ;;      Temps:          3       0       0       0       0
  7427 ;;      Totals:         5       0       0       0       0
  7428 ;;Total ram usage:        5 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_tc_int
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           
  7438                           ;psect for function _TimerCounter
  7439  0CC9                     _TimerCounter:	
  7440                           
  7441                           ;functions.c: 388: for (int i = 0; i < 5; i++)
  7442                           
  7443                           ;incstack = 0
  7444 ;; hardware stack exceeded
  7445                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  7446  0CC9  01F3               	clrf	TimerCounter@i
  7447  0CCA  01F4               	clrf	TimerCounter@i+1
  7448  0CCB                     L5:	
  7449  0CCB  0874               	movf	TimerCounter@i+1,w
  7450  0CCC  3A80               	xorlw	128
  7451  0CCD  00FF               	movwf	127
  7452  0CCE  3080               	movlw	128
  7453  0CCF  027F               	subwf	127,w
  7454  0CD0  1D03               	skipz
  7455  0CD1  2CD4               	goto	u179_25
  7456  0CD2  3005               	movlw	5
  7457  0CD3  0273               	subwf	TimerCounter@i,w
  7458  0CD4                     u179_25:	
  7459  0CD4  1803               	btfsc	3,0
  7460  0CD5  0008               	return
  7461                           
  7462                           ;functions.c: 389: {
  7463                           ;functions.c: 390: if(intClockTimer[i]>0)
  7464  0CD6  0873               	movf	TimerCounter@i,w
  7465  0CD7  00F0               	movwf	??_TimerCounter
  7466  0CD8  0770               	addwf	??_TimerCounter,w
  7467  0CD9  3ED0               	addlw	(low (_intClockTimer| 0))& (0+255)
  7468  0CDA  0084               	movwf	4
  7469  0CDB  1383               	bcf	3,7	;select IRP bank1
  7470  0CDC  0800               	movf	0,w
  7471  0CDD  00F1               	movwf	??_TimerCounter+1
  7472  0CDE  0A84               	incf	4,f
  7473  0CDF  0800               	movf	0,w
  7474  0CE0  00F2               	movwf	??_TimerCounter+2
  7475  0CE1  0872               	movf	??_TimerCounter+2,w
  7476  0CE2  3A80               	xorlw	128
  7477  0CE3  00FF               	movwf	127
  7478  0CE4  3080               	movlw	128
  7479  0CE5  027F               	subwf	127,w
  7480  0CE6  1D03               	skipz
  7481  0CE7  2CEA               	goto	u180_25
  7482  0CE8  3001               	movlw	1
  7483  0CE9  0271               	subwf	??_TimerCounter+1,w
  7484  0CEA                     u180_25:	
  7485  0CEA  1C03               	skipc
  7486  0CEB  2CFE               	goto	i1l2907
  7487                           
  7488                           ;functions.c: 391: intClockTimer[i]--;
  7489  0CEC  0873               	movf	TimerCounter@i,w
  7490  0CED  00F0               	movwf	??_TimerCounter
  7491  0CEE  0770               	addwf	??_TimerCounter,w
  7492  0CEF  3ED0               	addlw	(low (_intClockTimer| 0))& (0+255)
  7493  0CF0  0084               	movwf	4
  7494  0CF1  30FF               	movlw	255
  7495  0CF2  1383               	bcf	3,7	;select IRP bank1
  7496  0CF3  0780               	addwf	0,f
  7497  0CF4  0F84               	incfsz	4,f
  7498  0CF5  0800               	movf	0,w
  7499  0CF6  1803               	skipnc
  7500  0CF7  0A00               	incf	0,w
  7501  0CF8  00FF               	movwf	127
  7502  0CF9  30FF               	movlw	255
  7503  0CFA  077F               	addwf	127,w
  7504  0CFB  0080               	movwf	0
  7505  0CFC  0384               	decf	4,f
  7506  0CFD  2D04               	goto	i1l2909
  7507  0CFE                     i1l2907:	
  7508                           
  7509                           ;functions.c: 392: else
  7510                           ;functions.c: 393: bTimerComplete[i] = 1;
  7511  0CFE  0873               	movf	TimerCounter@i,w
  7512  0CFF  3E46               	addlw	(low (_bTimerComplete| 0))& (0+255)
  7513  0D00  0084               	movwf	4
  7514  0D01  1383               	bcf	3,7	;select IRP bank0
  7515  0D02  0180               	clrf	0
  7516  0D03  0A80               	incf	0,f
  7517  0D04                     i1l2909:	
  7518  0D04  3001               	movlw	1
  7519  0D05  07F3               	addwf	TimerCounter@i,f
  7520  0D06  1803               	skipnc
  7521  0D07  0AF4               	incf	TimerCounter@i+1,f
  7522  0D08  3000               	movlw	0
  7523  0D09  07F4               	addwf	TimerCounter@i+1,f
  7524  0D0A  2CCB               	goto	L5
  7525  0D0B                     __end_of_TimerCounter:	
  7526  007E                     btemp	set	126	;btemp
  7527  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    39
    Data        3
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      62
    BANK1            80     48      59
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    read_write_flash_ram@mem_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@value(BANK0[1]), 

    ReadMemoryAdress@var1	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@addr1(BANK0[1]), 

    ReadMemoryAdress@var2	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@addr2(BANK0[1]), 

    ReadMemoryAdress@var3	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@addr3(BANK0[1]), 

    ReceivedPacketHandler@Data	PTR unsigned char  size(1) Largest target is 30
		 -> TransiverReadFIFO@ReceivedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _saveDataToFlash->_read_write_flash_ram
    i1_AnalogValue->i1_DelayDs
    _read_write_flash_ram->i1_read_ram_status
    i1_read_ram_status->i1_WriteSPI
    i1_ReadSPI->i1_WriteSPI
    _ReadMemoryAdress->i1_eeprom_read
    _IncreaseMemoryAdress->i1_eeprom_write

Critical Paths under _main in BANK0

    _main->_TransmittPacket
    _TransiverToReceive->_FindChannel
    _ReceivedPacketHandler->_TransmittPacket
    _write_ram_status->_read_ram_status
    _ram_bulk_erase->_read_ram_status
    _read_ram_status->_WriteSPI
    _ResetMemoryAdress->_eeprom_write
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittPacket
    _Mode_4->_TransmittPacket
    _TransmittPacket->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs
    _ClockInit->_WriteSPI
    _ReadSPI->_WriteSPI

Critical Paths under _tc_int in BANK0

    _tc_int->_saveDataToFlash
    _saveDataToFlash->_read_write_flash_ram

Critical Paths under _main in BANK1

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_ReceivedPacketHandler
    _ReceivedPacketHandler->_TransmittPacket
    _TransiverInit->_FindChannel
    _Mode_5->_TransmittPacket
    _Mode_4->_TransmittPacket
    _TransmittPacket->_FindChannel

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   97994
                                             45 BANK1      3     3      0
                        _AnalogValue
                          _ClockInit
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_4
                             _Mode_5
                      _OperationMode
                            _PICInit
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0   12302
                                             35 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                   36    36      0   22086
                                              9 BANK1     36    36      0
                           _ReadFIFO
              _ReceivedPacketHandler
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _ReceivedPacketHandler                                2     2      0   18002
                                              7 BANK1      2     2      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                  _ResetMemoryAdress
                     _SendMemoryData
                    _TransmittPacket
                        _eeprom_read
                     _ram_bulk_erase
                    _read_ram_status
                   _write_ram_status
 ---------------------------------------------------------------------------------
 (3) _write_ram_status                                     1     1      0     167
                                             23 BANK0      1     1      0
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (3) _ram_bulk_erase                                       0     0      0     136
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (4) _read_ram_status                                      2     2      0     102
                                             21 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _SendMemoryData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ResetMemoryAdress                                    0     0      0     419
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         3     2      1     419
                                             18 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0       3
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      68
                                             21 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   12576
                                             35 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2    1137
                                             24 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _PICInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               1     1      0   15618
                                              7 BANK1      1     1      0
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   15618
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (1) _TransmittPacket                                      6     5      1   13664
                                             35 BANK0      3     2      1
                                              4 BANK1      3     3      0
                        _AnalogValue (ARG)
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                        _eeprom_read (ARG)
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _WriteFIFO                                            1     1      0      65
                                             21 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    5882
                                             32 BANK0      3     3      0
                                              0 BANK1      4     4      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2873
                                             29 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2517
                                             25 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     167
                                             21 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1954
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0    1091
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1954
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1954
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     863
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0    1091
                                             26 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      31
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0    1023
                                             24 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     992
                                             18 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ClockInit                                            2     2      0     105
                                             21 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      34
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             3     3      0      34
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0    5634
                                             11 BANK0      7     7      0
                       _TimerCounter
                    _saveDataToFlash
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _saveDataToFlash                                     8     8      0    5521
                                              3 BANK0      8     8      0
               _IncreaseMemoryAdress
                   _ReadMemoryAdress
               _read_write_flash_ram
                      i1_AnalogValue
 ---------------------------------------------------------------------------------
 (11) i1_AnalogValue                                       2     2      0     120
                                              6 COMMON     2     2      0
                          i1_DelayDs
 ---------------------------------------------------------------------------------
 (12) i1_DelayDs                                           6     4      2      98
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (11) _read_write_flash_ram                               11     5      6    2919
                                              5 COMMON     8     2      6
                                              0 BANK0      3     3      0
                          i1_ReadSPI
                         i1_WriteSPI
                  i1_read_ram_status
 ---------------------------------------------------------------------------------
 (12) i1_read_ram_status                                   2     2      0      69
                                              3 COMMON     2     2      0
                          i1_ReadSPI
                         i1_WriteSPI
 ---------------------------------------------------------------------------------
 (13) i1_ReadSPI                                           0     0      0      23
                         i1_WriteSPI
 ---------------------------------------------------------------------------------
 (13) i1_WriteSPI                                          3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _ReadMemoryAdress                                    4     2      2    1194
                                              2 COMMON     4     2      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (11) _IncreaseMemoryAdress                                4     4      0     283
                                              3 COMMON     4     4      0
                      i1_eeprom_read
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (12) i1_eeprom_write                                      3     2      1     122
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (12) i1_eeprom_read                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AnalogValue
     _DelayDs
   _ClockInit
     _ReadSPI
       _WriteSPI
     _WriteSPI
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _OperationMode
   _PICInit
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _ReceivedPacketHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _ResetMemoryAdress
         _eeprom_write
       _SendMemoryData
       _TransmittPacket
         _AnalogValue (ARG)
           _DelayDs
         _FindChannel (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet (ARG)
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO (ARG)
           _WriteSPI
         _eeprom_read (ARG)
         _timerFunction (ARG)
       _eeprom_read
       _ram_bulk_erase
         _WriteSPI
         _read_ram_status
           _ReadSPI
             _WriteSPI
           _WriteSPI
       _read_ram_status
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _write_ram_status
         _WriteSPI
         _read_ram_status
           _ReadSPI
             _WriteSPI
           _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _TransmittPacket
     _AnalogValue (ARG)
       _DelayDs
     _FindChannel (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead (ARG)
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _WriteFIFO (ARG)
       _WriteSPI
     _eeprom_read (ARG)
     _timerFunction (ARG)

 _tc_int (ROOT)
   _TimerCounter
   _saveDataToFlash
     _IncreaseMemoryAdress
       i1_eeprom_read
       i1_eeprom_write
     _ReadMemoryAdress
       i1_eeprom_read
     _read_write_flash_ram
       i1_ReadSPI
         i1_WriteSPI
       i1_WriteSPI
       i1_read_ram_status
         i1_ReadSPI
           i1_WriteSPI
         i1_WriteSPI
     i1_AnalogValue
       i1_DelayDs
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     30      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 07 22:14:00 2017

                             __CFG_CP$ON 0000                 __size_of_read_ram_status 0014  
                                      pc 0002               __size_of_TransiverReadFIFO 0065  
                  _bTransiverModeReceive 00DA                               i1_WriteSPI 09C9  
                            _SSPSTATbits 0094                                       _RD 0C60  
                            __CFG_CPD$ON 0000                                       _WR 0C61  
                        _saveDataToFlash 01D1                                       fsr 0004  
                    ??i1_read_ram_status 0073                                      l300 0083  
                                    l340 0A6B            __size_of_read_write_flash_ram 0075  
                                    l345 09C7                                      l329 07B7  
                                    l418 0EED                                      l364 0CC7  
                                    l293 01D0                                      l382 0DE6  
                                    l297 0055                                      l394 09E1  
                                    l634 0FFC                                      l458 0BF4  
                                    l651 0B65                                      l379 0DE0  
                                    l299 006C                                      l388 0B1C  
                                    l673 0C2A                                      _GIE 005F  
                                    _RA1 0029                                      _RB0 0030  
                                    _RB1 0031                                      _RC0 0038  
                                    _RA4 002C                                      _RC1 0039  
                                    _RB3 0033                                      _RA5 002D  
                                    _RC2 003A                                      _RB4 0034  
                                    _RB5 0035                                      _RD3 0043  
                                    _RD4 0044                    __end_of_DarknessCheck 07FF  
                                    fsr0 0004                                      indf 0000  
                       TransmittPacket@i 00A4                      __end_of_FindChannel 0578  
                        ??_timerFunction 0036                             __CFG_LVP$OFF 0000  
                                   l3231 0EBD                                     l3233 0ECC  
                                   l3225 0E92                                     l3403 07FC  
                                   l3227 0E9F                                     l3405 07FD  
                                   l3229 0EAE                                     l3237 0EDA  
                                   l3421 0C1E                                     l3501 0123  
                                   l3271 0490                                     l3291 0563  
                                   l3355 0763                                     l3435 0B0F  
                                   l3515 0153                                     l3507 013E  
                                   l3381 07C0                                     l3357 0776  
                                   l3533 01A0                                     l3517 015B  
                                   l3287 0552                                     l3295 0576  
                                   l3527 0175                                     l3703 0E66  
                                   l3289 052A                                     l3529 0182  
                                   l3627 0FDC                                     l3547 0C97  
                                   l3467 009A                                     l3539 01AE  
                                   l3707 0E6D                                     l3557 0CAC  
                                   l3637 0A60                                     l3653 09FF  
                                   l3469 00AC                                     l3399 07E3  
                                   l3575 0C5D                                     l3583 065D  
                                   l3495 0108                                     l3479 00CB  
                                   l3751 041D                                     l3727 036F  
                                   l3489 00ED                                     l3673 0D94  
                                   l3659 0A4F                                     l3675 0DA7  
                                   l3771 045B                                     l3763 0444  
                                   l3755 042A                                     l3747 0410  
            __size_of_TransiverToReceive 005C                                     l3767 0451  
                                   l3759 0437                                     l3699 0E52  
                                   u2125 0B26                                     u3007 0B2E  
                                   u3017 0F82                                     u2145 048E  
                                   u3027 0FA1                                     u3037 0FC0  
                                   u2181 0B63                                     u2165 0535  
                                   u2175 0574                                     u2515 0C67  
                                   u2645 0E42                                     u2907 0407  
                                   u2917 0D78                                     u2927 0DB1  
                                   u2847 0356                                     _RBIF 0058  
                                   u2937 0E73                                     u2857 0368  
                                   u2947 0747                                     u2867 038D  
                                   u2957 0780                                     u2877 03AB  
                                   u2967 07C4                                     u2887 03C9  
                                   u2977 07D1                                     u2897 03E7  
                                   u2987 047B                                     u2997 055E  
                        __end_of_PICInit 0E1D                                     _WREN 0C62  
                         ??_eeprom_write 0033                     i1AnalogValue@channel 0077  
              __end_ofi1_read_ram_status 0A29                                     _main 033C  
                                   btemp 007E                                     start 0012  
                          __CFG_IESO$OFF 0000                          __end_of_DelayDs 0B3B  
       __size_of_LightWithSensController 003F                          __end_of_ReadSPI 0996  
                                  ?_main 0070                                    _EEADR 010D  
                          __CFG_WDTE$OFF 0000                                    _CARRY 0018  
                                  _ANSEL 0188                    __end_of_OperationMode 09B0  
                                  _T1CON 0010                           __CFG_DEBUG$OFF 0000  
                                  i1l447 06A4                                    i1l394 09D3  
                                  i1l458 0BCB                                    i1l651 0AA2  
                                  i1l388 0ADA                                    i1l568 0F54  
                                  i1l673 0B84                                    _TMR1H 000F  
                                  _TMR1L 000E                                    _PORTA 0005  
                                  _PORTB 0006                                    _PORTC 0007  
                                  _PORTD 0008                                    _PORTE 0009  
                                  _TRISA 0085                                    _TRISB 0086  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _SSPIE 0463                                    _TRISE 0089  
                  read_write_flash_ram@i 0021                                    _Blink 0C57  
                     __size_ofi1_DelayDs 001E                                    _bDark 005A  
                         __CFG_FCMEN$OFF 0000                       __size_ofi1_ReadSPI 0008  
                ??_ReceivedPacketHandler 00A7                              _AnalogValue 0BD2  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                        ??_TransiverInit 0043                                    status 0003  
                          _intBlinkCycle 004F                                    wtemp0 007E  
                         WriteSPI@buffer 0033                     ReadMemoryAdress@var1 0073  
                   ReadMemoryAdress@var2 0072                     ReadMemoryAdress@var3 0075  
                       __end_of_ChannelP 0813                         __end_of_ChannelR 0820  
                       __end_of_ChannelS 082D                  __end_of_saveDataToFlash 033C  
                         __CFG_MCLRE$OFF 0000                            _intClockTimer 00D0  
                      _intNumberOfBlinks 005B                          __initialization 0015  
                           __end_of_main 046A                         __end_of_ReadFIFO 09F3  
                            ?i1_WriteSPI 0070                            ReadFIFO@value 0036  
                       ??_SendMemoryData 0032                              _FindChannel 046A  
                          ??_RegisterSet 003A                                   ??_main 00CD  
                      ??_read_ram_status 0035                       __size_of_ClockInit 009A  
                                 ?_Blink 0038                   __size_ofi1_eeprom_read 001B  
                              ??_PICInit 0032                                   _ADRESH 001E  
                                 _EEDATA 010C                                   _EECON1 018C  
                                 _EECON2 018D                    __end_ofi1_AnalogValue 0BD2  
                                 _ANSELH 0189                         __end_of_WriteSPI 09E5  
                                 i1l3043 067A                                   u200_25 06BE  
                                 i1l3061 06A7                                   i1l3091 0714  
                                 i1l3067 06C4                                   i1l3085 06FE  
                                 u201_25 06D6                                   i1l3069 06C5  
                                 i1l3079 06E7                                   i1l2625 0D54  
                                 i1l2633 0EFA                                   i1l2651 0F23  
                                 u202_25 06F2                                   i1l2655 0F56  
                                 i1l2647 0F3F                                   i1l2649 0F4B  
                                 i1l2907 0CFE                                   i1l2909 0D04  
                                 u203_25 0709                                   u126_25 0AE4  
                                 u304_27 0AEA                                   u305_27 0F60  
                                 u180_25 0CEA                                ??_DelayDs 0034  
                                 u158_25 0F29                                   Blink@i 003B  
                                 Blink@n 0038                                   u179_25 0CD4  
                                 u196_25 0696                         _write_ram_status 0BFB  
             __size_ofi1_read_ram_status 0014                         ??_ram_bulk_erase 0037  
                                 _TMR1IF 0060                                   _TMR1ON 0080  
           i1OperationMode@bracketStatus 0071            __size_of_IncreaseMemoryAdress 0052  
                                 _SSPBUF 0013                                ??_ReadSPI 0035  
                         __CFG_PWRTE$OFF 0000                                   _Mode_0 0982  
                                 _Mode_1 0A53                                   _Mode_2 09BC  
                                 _Mode_4 09F3                                   _Mode_5 0A3D  
                     __size_of_SetRFMode 006F                        __end_ofi1_DelayDs 0AF6  
                   __size_of_eeprom_read 0024          TransiverReadFIFO@ReceivedString 00AB  
                      __end_ofi1_ReadSPI 098E                                   _tc_int 0662  
                   __end_of_eeprom_write 0C57                                   saved_w 007E  
                      _ResetMemoryAdress 0A87                      __end_of_RegisterSet 0A87  
                          ?_RegisterRead 0070                       ?_ResetMemoryAdress 0070  
                     RegisterRead@adress 0038                      __size_ofi1_WriteSPI 000E  
                     __size_of_WriteFIFO 000C                  __end_of__initialization 003F  
                        eeprom_read@addr 0033                      ??_ResetMemoryAdress 0035  
                      __end_of_ClockInit 1000                  _LightWithSensController 0C8A  
                          _bChannelFound 0059                            i1_eeprom_read 0AA1  
                i1read_ram_status@status 0074                         ?_saveDataToFlash 0070  
                          __end_of_Blink 0C8A                           __pcstackCOMMON 0070  
                      ?_ReadMemoryAdress 0072                             __pidataBANK0 097F  
                           _channelFound 004B                       ??_ReadMemoryAdress 0074  
              __end_of_ResetMemoryAdress 0AA1                           _OPTION_REGbits 0081  
                                ??_Blink 003A                        __end_of_SetRFMode 0EF1  
                      eeprom_write@value 0032                           ??_RegisterRead 0035  
                             __pbssBANK0 0046                               __pbssBANK1 00D0  
                             __pbssBANK3 0190                 __size_ofi1_OperationMode 0009  
                              ?_ReadFIFO 0070               timerFunction@intSetSeconds 0034  
                     AnalogValue@channel 0039             __end_of_read_write_flash_ram 0F66  
               __size_of_TransmittPacket 00B1                           ?i1_eeprom_read 0070  
                                ?_Mode_0 0070                                  ?_Mode_1 0070  
                                ?_Mode_2 0070                                  ?_Mode_4 0070  
                                ?_Mode_5 0070                  __size_ofi1_eeprom_write 0026  
                             __pmaintext 033C                               __pintentry 0004  
                                ?_tc_int 0070                                ?_WriteSPI 0070  
                      __end_of_WriteFIFO 09BC                              _RegisterSet 0A6D  
                                _PICInit 0DB9                            ?_TimerCounter 0070  
             __end_of_TransiverToReceive 0DB9                    __end_of_timerFunction 0A15  
                           ?_AnalogValue 0070                               __stringtab 0800  
                             ??_ReadFIFO 0035           __size_of_ReceivedPacketHandler 018E  
          __end_of_ReceivedPacketHandler 01D1                                  _DelayDs 0B18  
              ??_LightWithSensController 003C                                  _ReadSPI 098E  
                 __size_of_DarknessCheck 0029                          __size_of_Mode_0 0004  
                        __size_of_Mode_1 001A                          __size_of_Mode_2 000D  
                        __size_of_Mode_4 0010                          __size_of_Mode_5 0016  
             OperationMode@bracketStatus 0033                          _read_ram_status 0A29  
                  __size_of_eeprom_write 0030                    read_ram_status@status 0036  
                           ??i1_WriteSPI 0070                             ?_FindChannel 0070  
                              _ANSELbits 0188                         i1WriteSPI@buffer 0071  
               __end_of_write_ram_status 0C27                               ??_WriteSPI 0032  
                        __size_of_tc_int 00C3                                  __ptext1 0D5D  
                                __ptext2 0E1D                                  __ptext3 0043  
                                __ptext4 0BFB                                  __ptext5 0AF6  
                                __ptext6 0A29                                  __ptext7 07FF  
                                __ptext8 0A87                                  __ptext9 0C27  
             __size_of_ResetMemoryAdress 001A                                _T1CONbits 0010  
                         ??_TimerCounter 0070                     saveDataToFlash@addr1 0028  
                   saveDataToFlash@addr2 0029                     saveDataToFlash@addr3 002A  
read_write_flash_ram@one_read_zero_write 0020                     saveDataToFlash@value 0027  
                                clrloop0 0997                     end_of_initialization 003F  
                        ??i1_eeprom_read 0070                       __end_ofi1_WriteSPI 09D7  
                           _eeprom_write 0C27                    __end_of_TransiverInit 0662  
                   TransmittPacket@value 0043                     TransmittPacket@topic 00A6  
                 __size_of_OperationMode 0009                        ??i1_OperationMode 0070  
                       WriteSPI@databyte 0034                     __end_of_RegisterRead 0AD8  
                      ??_TransmittPacket 0044                                i1_DelayDs 0AD8  
                          WriteFIFO@Data 0035             __end_of_IncreaseMemoryAdress 0D5D  
                        _intBlinkCounter 004D                                i1_ReadSPI 0986  
                   _read_write_flash_ram 0EF1                            _DarknessCheck 07D6  
                __end_of_read_ram_status 0A3D                            ??_eeprom_read 0032  
                         i1_eeprom_write 0B83                           __end_of_Mode_0 0986  
                         __end_of_Mode_1 0A6D                           __end_of_Mode_2 09C9  
                         __end_of_Mode_4 0A03                           __end_of_Mode_5 0A53  
                              _ClockInit 0F66                               ?i1_DelayDs 0070  
                 __size_ofi1_AnalogValue 0029                    ?_read_write_flash_ram 0075  
                             ?i1_ReadSPI 0070                           __end_of_tc_int 0725  
                         ?_DarknessCheck 0070                            _OperationMode 09A7  
                    start_initialization 0015                __size_of_ReadMemoryAdress 0024  
                __size_of_SendMemoryData 0001                    _intDarkCheckIntervall 0051  
             DarknessCheck@darknessValue 003B                                _SetRFMode 0E82  
                   __size_of_AnalogValue 0029                   __end_ofi1_eeprom_write 0BA9  
                      __size_of_ReadFIFO 000E                 __CFG_FOSC$INTRC_NOCLKOUT 0000  
                               ??_Mode_0 003C                                 ??_Mode_1 003C  
                               ??_Mode_2 003C                                 ??_Mode_4 0046  
                               ??_Mode_5 00A7                     __end_of_TimerCounter 0D0B  
                             ?_ClockInit 0070                      __end_of_eeprom_read 0B83  
                          TimerCounter@i 0073                  __size_of_ram_bulk_erase 0022  
                            __pdataBANK0 005B                                 ??_tc_int 002B  
               __size_of_saveDataToFlash 016B                             ?_RegisterSet 0039  
                         ?_OperationMode 0070                     __size_of_FindChannel 010E  
            read_write_flash_ram@mem_ptr 007A                        RegisterRead@value 0037  
                      __size_of_WriteSPI 000E                                ___latbits 0002  
                              _WriteFIFO 09B0                            __pcstackBANK0 0020  
                          __pcstackBANK1 00A0                                 ?_PICInit 0070  
                           _ReceivedData 0190                   SetRFMode@mcparam0_read 003F  
                             ?_SetRFMode 0070                            i1_AnalogValue 0BA9  
                       eeprom_write@addr 0034                                 ?_DelayDs 0032  
                      RegisterSet@adress 003C                     _IncreaseMemoryAdress 0D0B  
                       ?_read_ram_status 0070                          ?i1_eeprom_write 0070  
                           i1DelayDs@cnt 0070                   write_ram_status@status 0037  
                     i1WriteSPI@databyte 0072                                 ?_ReadSPI 0070  
                  __size_of_RegisterRead 001C                       _TransiverToReceive 0D5D  
                    i1eeprom_write@value 0070                      ?_TransiverToReceive 0070  
                            ??i1_DelayDs 0072                   ??_read_write_flash_ram 007B  
                        ??_DarknessCheck 003A                                __pstrings 0800  
                            ??i1_ReadSPI 0073                        ?_write_ram_status 0070  
            timerFunction@intTimerNumber 0032                       ??_write_ram_status 0037  
                         __size_of_Blink 0033                               ?_WriteFIFO 0070  
                        i1_OperationMode 099E                     ??_TransiverToReceive 0043  
                           _RegisterRead 0ABC                           ?i1_AnalogValue 0070  
                  ?_IncreaseMemoryAdress 0070                          _TransmittPacket 0725  
                      interrupt_function 0004                                 _IOCBbits 0096  
                               DelayDs@i 0036                             FindChannel@i 00A2  
                  _ReceivedPacketHandler 0043                                clear_ram0 0996  
                            _eeprom_read 0B5F                                 _PIE1bits 008C  
                               _PIR1bits 000C                              ??_ClockInit 0035  
                           ClockInit@cnt 0036                   __size_of_timerFunction 0012  
                        ??_OperationMode 0032                            SetRFMode@mode 003E  
                             _ADCON0bits 001F                              __stringbase 0805  
                             _ADCON1bits 009F                                 _WPUBbits 0095  
                               _ChannelP 0806                                 _ChannelR 0813  
                               _ChannelS 0820                           _SendMemoryData 07FF  
                       _ReadMemoryAdress 0B3B                        ??_saveDataToFlash 0023  
                       __size_of_PICInit 0064                 ?_LightWithSensController 0070  
                            ??_SetRFMode 003D                                 _ReadFIFO 09E5  
                  __size_of_TimerCounter 0042                         __size_of_DelayDs 0023  
       read_write_flash_ram@flash_sector 0077                    __end_ofi1_eeprom_read 0ABC  
                       __size_of_ReadSPI 0008                           _bTimerComplete 0046  
                         _ram_bulk_erase 0AF6                         _intMinuteCounter 0055  
             read_write_flash_ram@offset 0079                        _TransiverReadFIFO 0E1D  
                               _WriteSPI 09D7                       __end_of__stringtab 0806  
                       _intSecondCounter 0057                       ?_TransiverReadFIFO 0070  
                             _ANSELHbits 0189                  __end_ofi1_OperationMode 09A7  
                 __end_of_SendMemoryData 0800                   __size_of_TransiverInit 00EA  
                   __size_of_RegisterSet 001A                         RegisterSet@value 0039  
                     i1eeprom_write@addr 0072                              ??_WriteFIFO 0035  
                __end_of_TransmittPacket 07D6                          ??i1_AnalogValue 0076  
                           _TimerCounter 0CC9                                 __ptext10 09A7  
                               __ptext11 09E5                                 __ptext20 0E82  
                               __ptext12 0578                                 __ptext21 0A6D  
                               __ptext13 0C57                                 __ptext30 0BD2  
                               __ptext22 0ABC                                 __ptext14 0DB9  
                               __ptext31 0B18                                 __ptext23 09BC  
                               __ptext15 0A3D                                 __ptext40 0EF1  
                               __ptext32 0F66                                 __ptext24 0A53  
                               __ptext16 09F3                                 __ptext41 0A15  
                               __ptext33 098E                                 __ptext25 0982  
                               __ptext17 0725                                 __ptext42 0986  
                               __ptext34 09D7                                 __ptext26 0C8A  
                               __ptext18 09B0                                 __ptext43 09C9  
                               __ptext35 0662                                 __ptext27 0A03  
                               __ptext19 046A                                 __ptext44 0B3B  
                               __ptext36 099E                                 __ptext28 07D6  
                               __ptext45 0D0B                                 __ptext37 01D1  
                               __ptext29 0B5F                                 __ptext46 0B83  
                               __ptext38 0BA9                                 __ptext47 0AA1  
                               __ptext39 0AD8                                 __ptext48 0CC9  
                    ??_TransiverReadFIFO 00A9                            _timerFunction 0A03  
                 ??_IncreaseMemoryAdress 0073                        i1eeprom_read@addr 0071  
                 ?_ReceivedPacketHandler 0070                            __size_of_main 012E  
                 __end_of_ram_bulk_erase 0B18                            _bValueFromPot 005D  
              __end_of_TransiverReadFIFO 0E82                               DelayDs@cnt 0032  
                         FindChannel@cnt 00A0          __end_of_LightWithSensController 0CC9  
                   _intHalfSecondCounter 0053                          ?_SendMemoryData 0070  
                             _INTCONbits 000B           read_write_flash_ram@flash_page 0078  
                     TransiverReadFIFO@i 00C9                       TransiverReadFIFO@j 00CB  
                       ??i1_eeprom_write 0071                           ?_timerFunction 0032  
                          ??_AnalogValue 0038                                 intlevel1 0000  
                             i1DelayDs@i 0074                            _TransiverInit 0578  
 read_write_flash_ram@bytes_to_readwrite 0075                                stringcode 0800  
                             _OSCCONbits 008F                          ?_ram_bulk_erase 0070  
                          ??_FindChannel 0040                         ?i1_OperationMode 0070  
                               stringdir 0800                                 stringtab 0800  
                       ?_TransmittPacket 0043                ReceivedPacketHandler@Data 00A8  
              __size_of_write_ram_status 002C                            ?_eeprom_write 0032  
               IncreaseMemoryAdress@var1 0074                 IncreaseMemoryAdress@var2 0075  
               IncreaseMemoryAdress@var3 0076                           ?_TransiverInit 0070  
                           ?_eeprom_read 0070                      __end_of_AnalogValue 0BFB  
                             _SSPCONbits 0014                        i1_read_ram_status 0A15  
                     ?i1_read_ram_status 0070                 __end_of_ReadMemoryAdress 0B5F  
