

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Jan 03 14:54:30 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 1.40
    60                           ; Generated 01/12/2016 GMT
    61                           ; 
    62                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F886 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245                           
   246                           	psect	idataBANK0
   247  05FF                     __pidataBANK0:	
   248                           
   249                           ;initializer for _bValueFromPot
   250  05FF  3401               	retlw	1
   251                           
   252                           	psect	idataBANK1
   253  0C1D                     __pidataBANK1:	
   254                           
   255                           ;initializer for _intNumberOfBlinks
   256  0C1D  3458               	retlw	88
   257  0C1E  3402               	retlw	2
   258                           
   259                           	psect	strings
   260  0600                     __pstrings:	
   261  0600                     stringtab:	
   262  0600                     __stringtab:	
   263                           
   264                           ;	String table - string pointers are 1 byte each
   265  0600  1BFF               	btfsc	btemp+1,7
   266  0601  2E0A               	ljmp	stringcode
   267  0602  1383               	bcf	3,7
   268  0603  187F               	btfsc	btemp+1,0
   269  0604  1783               	bsf	3,7
   270  0605  0800               	movf	0,w
   271  0606  0A84               	incf	4,f
   272  0607  1903               	skipnz
   273  0608  0AFF               	incf	btemp+1,f
   274  0609  0008               	return
   275  060A                     stringcode:	
   276  060A                     stringdir:	
   277  060A  3006               	movlw	high stringdir
   278  060B  008A               	movwf	10
   279  060C  0804               	movf	4,w
   280  060D  0A84               	incf	4,f
   281  060E  0782               	addwf	2,f
   282  060F                     __stringbase:	
   283  060F  3400               	retlw	0
   284  0610                     __end_of__stringtab:	
   285  0610                     _ChannelP:	
   286  0610  343F               	retlw	63
   287  0611  3447               	retlw	71
   288  0612  344F               	retlw	79
   289  0613  3457               	retlw	87
   290  0614  345F               	retlw	95
   291  0615  3477               	retlw	119
   292  0616  347E               	retlw	126
   293  0617  347F               	retlw	127
   294  0618  3486               	retlw	134
   295  0619  3487               	retlw	135
   296  061A  3437               	retlw	55
   297  061B  3467               	retlw	103
   298  061C  346F               	retlw	111
   299  061D                     __end_of_ChannelP:	
   300  061D                     _ChannelR:	
   301  061D  344F               	retlw	79
   302  061E  3459               	retlw	89
   303  061F  3463               	retlw	99
   304  0620  346D               	retlw	109
   305  0621  3477               	retlw	119
   306  0622  3495               	retlw	149
   307  0623  349F               	retlw	159
   308  0624  349F               	retlw	159
   309  0625  34A9               	retlw	169
   310  0626  34A9               	retlw	169
   311  0627  3445               	retlw	69
   312  0628  3481               	retlw	129
   313  0629  348B               	retlw	139
   314  062A                     __end_of_ChannelR:	
   315  062A                     _ChannelS:	
   316  062A  3418               	retlw	24
   317  062B  341B               	retlw	27
   318  062C  341E               	retlw	30
   319  062D  3421               	retlw	33
   320  062E  3424               	retlw	36
   321  062F  342D               	retlw	45
   322  0630  347B               	retlw	123
   323  0631  3430               	retlw	48
   324  0632  347E               	retlw	126
   325  0633  3433               	retlw	51
   326  0634  3415               	retlw	21
   327  0635  3427               	retlw	39
   328  0636  342A               	retlw	42
   329  0637                     __end_of_ChannelS:	
   330  001F                     _ADCON0bits	set	31
   331  001E                     _ADRESH	set	30
   332  000B                     _INTCONbits	set	11
   333  000C                     _PIR1bits	set	12
   334  0005                     _PORTA	set	5
   335  0005                     _PORTAbits	set	5
   336  0006                     _PORTB	set	6
   337  0006                     _PORTBbits	set	6
   338  0007                     _PORTC	set	7
   339  0007                     _PORTCbits	set	7
   340  0013                     _SSPBUF	set	19
   341  0014                     _SSPCONbits	set	20
   342  0010                     _T1CON	set	16
   343  0010                     _T1CONbits	set	16
   344  000F                     _TMR1H	set	15
   345  000E                     _TMR1L	set	14
   346  0018                     _CARRY	set	24
   347  005F                     _GIE	set	95
   348  0058                     _RBIF	set	88
   349  0060                     _TMR1IF	set	96
   350  0080                     _TMR1ON	set	128
   351  009F                     _ADCON1bits	set	159
   352  0096                     _IOCBbits	set	150
   353  0081                     _OPTION_REGbits	set	129
   354  008F                     _OSCCONbits	set	143
   355  008C                     _PIE1bits	set	140
   356  0094                     _SSPSTATbits	set	148
   357  0085                     _TRISA	set	133
   358  0086                     _TRISB	set	134
   359  0087                     _TRISC	set	135
   360  0095                     _WPUBbits	set	149
   361  0463                     _SSPIE	set	1123
   362  010D                     _EEADR	set	269
   363  010C                     _EEDATA	set	268
   364  0188                     _ANSEL	set	392
   365  0189                     _ANSELH	set	393
   366  0188                     _ANSELbits	set	392
   367  018C                     _EECON1	set	396
   368  018D                     _EECON2	set	397
   369  0C60                     _RD	set	3168
   370  0C61                     _WR	set	3169
   371  0C62                     _WREN	set	3170
   372  0637                     STR_9:	
   373  0637  344E               	retlw	78	;'N'
   374  0638  346F               	retlw	111	;'o'
   375  0639  3474               	retlw	116	;'t'
   376  063A  3420               	retlw	32	;' '
   377  063B  3444               	retlw	68	;'D'
   378  063C  3461               	retlw	97	;'a'
   379  063D  3472               	retlw	114	;'r'
   380  063E  346B               	retlw	107	;'k'
   381  063F  3420               	retlw	32	;' '
   382  0640  3420               	retlw	32	;' '
   383  0641  3420               	retlw	32	;' '
   384  0642  3420               	retlw	32	;' '
   385  0643  3420               	retlw	32	;' '
   386  0644  3400               	retlw	0
   387  0645                     STR_8:	
   388  0645  3449               	retlw	73	;'I'
   389  0646  3474               	retlw	116	;'t'
   390  0647  3427               	retlw	39	;'''
   391  0648  3473               	retlw	115	;'s'
   392  0649  3420               	retlw	32	;' '
   393  064A  3444               	retlw	68	;'D'
   394  064B  3461               	retlw	97	;'a'
   395  064C  3472               	retlw	114	;'r'
   396  064D  346B               	retlw	107	;'k'
   397  064E  3420               	retlw	32	;' '
   398  064F  3420               	retlw	32	;' '
   399  0650  3420               	retlw	32	;' '
   400  0651  3420               	retlw	32	;' '
   401  0652  3400               	retlw	0
   402  0653                     STR_7:	
   403  0653  3444               	retlw	68	;'D'
   404  0654  3441               	retlw	65	;'A'
   405  0655  3452               	retlw	82	;'R'
   406  0656  344B               	retlw	75	;'K'
   407  0657  3443               	retlw	67	;'C'
   408  0658  3441               	retlw	65	;'A'
   409  0659  344C               	retlw	76	;'L'
   410  065A  3443               	retlw	67	;'C'
   411  065B  3400               	retlw	0
   412  065C                     STR_13:	
   413  065C  3443               	retlw	67	;'C'
   414  065D  3448               	retlw	72	;'H'
   415  065E  3453               	retlw	83	;'S'
   416  065F  3454               	retlw	84	;'T'
   417  0660  3441               	retlw	65	;'A'
   418  0661  3454               	retlw	84	;'T'
   419  0662  3445               	retlw	69	;'E'
   420  0663  3400               	retlw	0
   421  0664                     STR_1:	
   422  0664  344E               	retlw	78	;'N'
   423  0665  3431               	retlw	49	;'1'
   424  0666  3442               	retlw	66	;'B'
   425  0667  344C               	retlw	76	;'L'
   426  0668  3449               	retlw	73	;'I'
   427  0669  344E               	retlw	78	;'N'
   428  066A  344B               	retlw	75	;'K'
   429  066B  3400               	retlw	0
   430  066C                     STR_2:	
   431  066C  344E               	retlw	78	;'N'
   432  066D  3432               	retlw	50	;'2'
   433  066E  3442               	retlw	66	;'B'
   434  066F  344C               	retlw	76	;'L'
   435  0670  3449               	retlw	73	;'I'
   436  0671  344E               	retlw	78	;'N'
   437  0672  344B               	retlw	75	;'K'
   438  0673  3400               	retlw	0
   439  0674                     STR_5:	
   440  0674  3453               	retlw	83	;'S'
   441  0675  3445               	retlw	69	;'E'
   442  0676  344E               	retlw	78	;'N'
   443  0677  3453               	retlw	83	;'S'
   444  0678  3456               	retlw	86	;'V'
   445  0679  3441               	retlw	65	;'A'
   446  067A  344C               	retlw	76	;'L'
   447  067B  3400               	retlw	0
   448  067C                     STR_10:	
   449  067C  3453               	retlw	83	;'S'
   450  067D  3454               	retlw	84	;'T'
   451  067E  3441               	retlw	65	;'A'
   452  067F  3454               	retlw	84	;'T'
   453  0680  3445               	retlw	69	;'E'
   454  0681  343F               	retlw	63	;'?'
   455  0682  3400               	retlw	0
   456  0683                     STR_4:	
   457  0683  3446               	retlw	70	;'F'
   458  0684  344C               	retlw	76	;'L'
   459  0685  3441               	retlw	65	;'A'
   460  0686  3453               	retlw	83	;'S'
   461  0687  3448               	retlw	72	;'H'
   462  0688  3442               	retlw	66	;'B'
   463  0689  3400               	retlw	0
   464  068A                     STR_6:	
   465  068A  3450               	retlw	80	;'P'
   466  068B  344F               	retlw	79	;'O'
   467  068C  3454               	retlw	84	;'T'
   468  068D  3456               	retlw	86	;'V'
   469  068E  3441               	retlw	65	;'A'
   470  068F  344C               	retlw	76	;'L'
   471  0690  3400               	retlw	0
   472  0691                     STR_3:	
   473  0691  3446               	retlw	70	;'F'
   474  0692  344C               	retlw	76	;'L'
   475  0693  3441               	retlw	65	;'A'
   476  0694  3453               	retlw	83	;'S'
   477  0695  3448               	retlw	72	;'H'
   478  0696  344C               	retlw	76	;'L'
   479  0697  3400               	retlw	0
   480  0698                     STR_15:	
   481  0698  3453               	retlw	83	;'S'
   482  0699  3445               	retlw	69	;'E'
   483  069A  3454               	retlw	84	;'T'
   484  069B  3444               	retlw	68	;'D'
   485  069C  3456               	retlw	86	;'V'
   486  069D  3400               	retlw	0
   487  069E                     STR_14:	
   488  069E  3452               	retlw	82	;'R'
   489  069F  344D               	retlw	77	;'M'
   490  06A0  3444               	retlw	68	;'D'
   491  06A1  3456               	retlw	86	;'V'
   492  06A2  3400               	retlw	0
   493  06A3                     STR_12:	
   494  06A3  3450               	retlw	80	;'P'
   495  06A4  3449               	retlw	73	;'I'
   496  06A5  3443               	retlw	67	;'C'
   497  06A6  3400               	retlw	0
   498  06A7                     STR_11:	
   499  06A7  3450               	retlw	80	;'P'
   500  06A8  346F               	retlw	111	;'o'
   501  06A9  3474               	retlw	116	;'t'
   502  06AA  3400               	retlw	0
   503  0664                     
   504                           ; #config settings
   505  0000                     
   506                           	psect	cinit
   507  0015                     start_initialization:	
   508  0015                     __initialization:	
   509                           
   510                           ; Initialize objects allocated to BANK1
   511  0015  1683               	bsf	3,5	;RP0=1, select bank1
   512  0016  1303               	bcf	3,6	;RP1=0, select bank1
   513  0017  120A  158A  241D  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   514  001C  00D7               	movwf	__pdataBANK1& (0+127)
   515  001D  120A  158A  241E  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   516  0022  00D8               	movwf	(__pdataBANK1+1)& (0+127)
   517                           
   518                           ; Initialize objects allocated to BANK0
   519  0023  1283               	bcf	3,5	;RP0=0, select bank0
   520  0024  1303               	bcf	3,6	;RP1=0, select bank0
   521  0025  120A  118A  25FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   522  002A  00EF               	movwf	__pdataBANK0& (0+127)
   523                           
   524                           ; Clear objects allocated to BANK3
   525  002B  1783               	bsf	3,7	;select IRP bank2
   526  002C  3090               	movlw	low __pbssBANK3
   527  002D  0084               	movwf	4
   528  002E  30B8               	movlw	low (__pbssBANK3+40)
   529  002F  120A  158A  2427  120A  118A  	fcall	clear_ram0
   530                           
   531                           ; Clear objects allocated to BANK1
   532  0034  1383               	bcf	3,7	;select IRP bank0
   533  0035  30A0               	movlw	low __pbssBANK1
   534  0036  0084               	movwf	4
   535  0037  30D7               	movlw	low (__pbssBANK1+55)
   536  0038  120A  158A  2427   	fcall	clear_ram0
   537                           
   538                           ; Clear objects allocated to BANK0
   539  003B  01E8               	clrf	__pbssBANK0& (0+127)
   540  003C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   541  003D  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   542  003E  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   543  003F  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   544  0040  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   545  0041  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   546                           
   547                           ; Clear objects allocated to COMMON
   548  0042  01FC               	clrf	__pbssCOMMON& (0+127)
   549  0043  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   550  0044                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  0044                     __end_of__initialization:	
   554  0044  0183               	clrf	3
   555  0045  120A  118A  2EAB   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  007C                     __pbssCOMMON:	
   559  007C                     _addressDarknessValue:	
   560  007C                     	ds	2
   561                           
   562                           	psect	bssBANK0
   563  0068                     __pbssBANK0:	
   564  0068                     _intBlinkCycle:	
   565  0068                     	ds	2
   566  006A                     _intSecondCounter:	
   567  006A                     	ds	2
   568  006C                     _bChannelFound:	
   569  006C                     	ds	1
   570  006D                     _bDark:	
   571  006D                     	ds	1
   572  006E                     _bTransiverModeReceive:	
   573  006E                     	ds	1
   574                           
   575                           	psect	dataBANK0
   576  006F                     __pdataBANK0:	
   577  006F                     _bValueFromPot:	
   578  006F                     	ds	1
   579                           
   580                           	psect	bssBANK1
   581  00A0                     __pbssBANK1:	
   582  00A0                     _intClockTimer:	
   583  00A0                     	ds	10
   584  00AA                     _bTimerComplete:	
   585  00AA                     	ds	5
   586  00AF                     _channelFound:	
   587  00AF                     	ds	2
   588  00B1                     _intBlinkCounter:	
   589  00B1                     	ds	2
   590  00B3                     _intDarkCheckIntervall:	
   591  00B3                     	ds	2
   592  00B5                     _intHalfSecondCounter:	
   593  00B5                     	ds	2
   594  00B7                     _intMinuteCounter:	
   595  00B7                     	ds	2
   596  00B9                     _TransmittedString:	
   597  00B9                     	ds	30
   598                           
   599                           	psect	dataBANK1
   600  00D7                     __pdataBANK1:	
   601  00D7                     _intNumberOfBlinks:	
   602  00D7                     	ds	2
   603                           
   604                           	psect	bssBANK3
   605  0190                     __pbssBANK3:	
   606  0190                     _ReceivedData:	
   607  0190                     	ds	40
   608                           
   609                           	psect	clrtext
   610  0C27                     clear_ram0:	
   611                           ;	Called with FSR containing the base address, and
   612                           ;	W with the last address+1
   613                           
   614  0C27  0064               	clrwdt	;clear the watchdog before getting into this loop
   615  0C28                     clrloop0:	
   616  0C28  0180               	clrf	0	;clear RAM location pointed to by FSR
   617  0C29  0A84               	incf	4,f	;increment pointer
   618  0C2A  0604               	xorwf	4,w	;XOR with final address
   619  0C2B  1903               	btfsc	3,2	;have we reached the end yet?
   620  0C2C  3400               	retlw	0	;all done for this memory range, return
   621  0C2D  0604               	xorwf	4,w	;XOR again to restore value
   622  0C2E  2C28               	goto	clrloop0	;do the next byte
   623                           
   624                           	psect	cstackCOMMON
   625  0070                     __pcstackCOMMON:	
   626  0070                     ?_isdigit:	
   627  0070                     ?_init:	
   628                           ; 1 bit 
   629                           
   630  0070                     ?_TransiverInit:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_OperationMode:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_Mode_0:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Mode_1:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_Mode_2:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_Mode_4:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_Mode_5:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_TransiverToReceive:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_TransiverReadFIFO:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_SetRFMode:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_RegisterRead:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_FindChannel:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_ReadFIFO:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_TransmittedDataHandler:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_AnalogValue:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_DarknessCheck:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_eeprom_read:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_WriteFIFO:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_LightWithSensController:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_main:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_TimerCounter:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_TimerCounter:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_WriteSPI:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_ReadSPI:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_tc_int:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?i1_OperationMode:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ??i1_OperationMode:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0070                     	ds	1
   714  0071                     i1OperationMode@bracketStatus:	
   715                           
   716                           ; 1 bytes @ 0x1
   717  0071                     	ds	2
   718  0073                     TimerCounter@i:	
   719                           
   720                           ; 2 bytes @ 0x3
   721  0073                     	ds	2
   722  0075                     ??_tc_int:	
   723                           
   724                           ; 1 bytes @ 0x5
   725  0075                     	ds	7
   726                           
   727                           	psect	cstackBANK0
   728  0020                     __pcstackBANK0:	
   729  0020                     ??_init:	
   730  0020                     ??_OperationMode:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ?_timerFunction:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     ?_DelayDs:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ??_eeprom_read:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ?_eeprom_write:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0020                     ??_isdigit:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ?_strchr:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ??_WriteSPI:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ?_strlen:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     ?___wmul:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     eeprom_write@value:	
   761                           ; 2 bytes @ 0x0
   762                           
   763  0020                     _isdigit$1118:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0020                     timerFunction@intTimerNumber:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0020                     DelayDs@cnt:	
   770                           ; 2 bytes @ 0x0
   771                           
   772  0020                     ___wmul@multiplier:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0020                     strchr@chr:	
   776                           ; 2 bytes @ 0x0
   777                           
   778                           
   779                           ; 2 bytes @ 0x0
   780  0020                     	ds	1
   781  0021                     ??_eeprom_write:	
   782  0021                     WriteSPI@buffer:	
   783                           ; 1 bytes @ 0x1
   784                           
   785  0021                     OperationMode@bracketStatus:	
   786                           ; 1 bytes @ 0x1
   787                           
   788  0021                     eeprom_read@addr:	
   789                           ; 1 bytes @ 0x1
   790                           
   791  0021                     isdigit@c:	
   792                           ; 1 bytes @ 0x1
   793                           
   794                           
   795                           ; 1 bytes @ 0x1
   796  0021                     	ds	1
   797  0022                     ??_DelayDs:	
   798  0022                     ??_strlen:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0022                     ??_strchr:	
   802                           ; 1 bytes @ 0x2
   803                           
   804  0022                     WriteSPI@databyte:	
   805                           ; 1 bytes @ 0x2
   806                           
   807  0022                     eeprom_write@addr:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0022                     strchr@ptr:	
   811                           ; 1 bytes @ 0x2
   812                           
   813  0022                     timerFunction@intSetSeconds:	
   814                           ; 1 bytes @ 0x2
   815                           
   816  0022                     ___wmul@multiplicand:	
   817                           ; 2 bytes @ 0x2
   818                           
   819                           
   820                           ; 2 bytes @ 0x2
   821  0022                     	ds	1
   822  0023                     ??_RegisterRead:	
   823  0023                     ??_ReadFIFO:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0023                     ??_WriteFIFO:	
   827                           ; 1 bytes @ 0x3
   828                           
   829  0023                     ??_ReadSPI:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0023                     WriteFIFO@Data:	
   833                           ; 1 bytes @ 0x3
   834                           
   835                           
   836                           ; 1 bytes @ 0x3
   837  0023                     	ds	1
   838  0024                     ??_timerFunction:	
   839  0024                     ??___wmul:	
   840                           ; 1 bytes @ 0x4
   841                           
   842  0024                     ReadFIFO@value:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0024                     DelayDs@i:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0024                     ___wmul@product:	
   849                           ; 2 bytes @ 0x4
   850                           
   851                           
   852                           ; 2 bytes @ 0x4
   853  0024                     	ds	1
   854  0025                     RegisterRead@value:	
   855                           
   856                           ; 1 bytes @ 0x5
   857  0025                     	ds	1
   858  0026                     ??_AnalogValue:	
   859  0026                     ?_Blink:	
   860                           ; 1 bytes @ 0x6
   861                           
   862  0026                     ?_atoi:	
   863                           ; 1 bytes @ 0x6
   864                           
   865  0026                     RegisterRead@adress:	
   866                           ; 2 bytes @ 0x6
   867                           
   868  0026                     strlen@s:	
   869                           ; 1 bytes @ 0x6
   870                           
   871  0026                     Blink@n:	
   872                           ; 1 bytes @ 0x6
   873                           
   874                           
   875                           ; 2 bytes @ 0x6
   876  0026                     	ds	1
   877  0027                     ?_RegisterSet:	
   878  0027                     RegisterSet@value:	
   879                           ; 1 bytes @ 0x7
   880                           
   881  0027                     AnalogValue@channel:	
   882                           ; 1 bytes @ 0x7
   883                           
   884  0027                     strlen@cp:	
   885                           ; 1 bytes @ 0x7
   886                           
   887                           
   888                           ; 1 bytes @ 0x7
   889  0027                     	ds	1
   890  0028                     ??_RegisterSet:	
   891  0028                     ??_DarknessCheck:	
   892                           ; 1 bytes @ 0x8
   893                           
   894  0028                     ??_atoi:	
   895                           ; 1 bytes @ 0x8
   896                           
   897  0028                     ??_Blink:	
   898                           ; 1 bytes @ 0x8
   899                           
   900  0028                     ?_strncmp:	
   901                           ; 1 bytes @ 0x8
   902                           
   903  0028                     strncmp@s2:	
   904                           ; 2 bytes @ 0x8
   905                           
   906                           
   907                           ; 1 bytes @ 0x8
   908  0028                     	ds	1
   909  0029                     DarknessCheck@darknessValue:	
   910  0029                     Blink@i:	
   911                           ; 1 bytes @ 0x9
   912                           
   913  0029                     strncmp@len:	
   914                           ; 2 bytes @ 0x9
   915                           
   916                           
   917                           ; 2 bytes @ 0x9
   918  0029                     	ds	1
   919  002A                     ??_Mode_0:	
   920  002A                     ??_Mode_1:	
   921                           ; 1 bytes @ 0xA
   922                           
   923  002A                     ??_Mode_2:	
   924                           ; 1 bytes @ 0xA
   925                           
   926  002A                     ??_LightWithSensController:	
   927                           ; 1 bytes @ 0xA
   928                           
   929  002A                     RegisterSet@adress:	
   930                           ; 1 bytes @ 0xA
   931                           
   932  002A                     atoi@sign:	
   933                           ; 1 bytes @ 0xA
   934                           
   935                           
   936                           ; 1 bytes @ 0xA
   937  002A                     	ds	1
   938  002B                     ??_SetRFMode:	
   939  002B                     ??_strncmp:	
   940                           ; 1 bytes @ 0xB
   941                           
   942  002B                     atoi@a:	
   943                           ; 1 bytes @ 0xB
   944                           
   945                           
   946                           ; 2 bytes @ 0xB
   947  002B                     	ds	1
   948  002C                     SetRFMode@mode:	
   949                           
   950                           ; 1 bytes @ 0xC
   951  002C                     	ds	1
   952  002D                     SetRFMode@mcparam0_read:	
   953  002D                     atoi@s:	
   954                           ; 1 bytes @ 0xD
   955                           
   956  002D                     strncmp@s1:	
   957                           ; 1 bytes @ 0xD
   958                           
   959                           
   960                           ; 1 bytes @ 0xD
   961  002D                     	ds	1
   962  002E                     ??_FindChannel:	
   963  002E                     ?_strstr:	
   964                           ; 1 bytes @ 0xE
   965                           
   966  002E                     strstr@s2:	
   967                           ; 1 bytes @ 0xE
   968                           
   969                           
   970                           ; 1 bytes @ 0xE
   971  002E                     	ds	1
   972  002F                     ??_strstr:	
   973                           
   974                           ; 1 bytes @ 0xF
   975  002F                     	ds	2
   976  0031                     FindChannel@cnt:	
   977                           
   978                           ; 2 bytes @ 0x11
   979  0031                     	ds	1
   980  0032                     strstr@s1:	
   981                           
   982                           ; 1 bytes @ 0x12
   983  0032                     	ds	1
   984  0033                     FindChannel@i:	
   985                           
   986                           ; 2 bytes @ 0x13
   987  0033                     	ds	2
   988  0035                     ??_TransiverInit:	
   989  0035                     ??_TransiverToReceive:	
   990                           ; 1 bytes @ 0x15
   991                           
   992  0035                     ?_TransmittString:	
   993                           ; 1 bytes @ 0x15
   994                           
   995  0035                     TransmittString@dataString:	
   996                           ; 1 bytes @ 0x15
   997                           
   998                           
   999                           ; 2 bytes @ 0x15
  1000  0035                     	ds	2
  1001  0037                     ??_TransmittString:	
  1002                           
  1003                           ; 1 bytes @ 0x17
  1004  0037                     	ds	3
  1005  003A                     TransmittString@i:	
  1006                           
  1007                           ; 2 bytes @ 0x1A
  1008  003A                     	ds	2
  1009  003C                     ??_Mode_4:	
  1010  003C                     ??_Mode_5:	
  1011                           ; 1 bytes @ 0x1C
  1012                           
  1013  003C                     ??_TransmittedDataHandler:	
  1014                           ; 1 bytes @ 0x1C
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x1C
  1018  003C                     	ds	1
  1019  003D                     TransmittedDataHandler@slask:	
  1020                           
  1021                           ; 8 bytes @ 0x1D
  1022  003D                     	ds	8
  1023  0045                     TransmittedDataHandler@slask_734:	
  1024                           
  1025                           ; 8 bytes @ 0x25
  1026  0045                     	ds	8
  1027  004D                     TransmittedDataHandler@slask_743:	
  1028                           
  1029                           ; 8 bytes @ 0x2D
  1030  004D                     	ds	8
  1031  0055                     TransmittedDataHandler@slask_746:	
  1032                           
  1033                           ; 8 bytes @ 0x35
  1034  0055                     	ds	8
  1035  005D                     TransmittedDataHandler@value:	
  1036                           
  1037                           ; 2 bytes @ 0x3D
  1038  005D                     	ds	2
  1039  005F                     ??_TransiverReadFIFO:	
  1040                           
  1041                           ; 1 bytes @ 0x3F
  1042  005F                     	ds	2
  1043  0061                     TransiverReadFIFO@i:	
  1044                           
  1045                           ; 2 bytes @ 0x41
  1046  0061                     	ds	2
  1047  0063                     TransiverReadFIFO@j:	
  1048                           
  1049                           ; 2 bytes @ 0x43
  1050  0063                     	ds	2
  1051  0065                     ??_main:	
  1052                           
  1053                           ; 1 bytes @ 0x45
  1054  0065                     	ds	3
  1055                           
  1056                           	psect	maintext
  1057  06AB                     __pmaintext:	
  1058 ;;
  1059 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1060 ;;
  1061 ;; *************** function _main *****************
  1062 ;; Defined at:
  1063 ;;		line 27 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : B00/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0
  1079 ;;      Temps:          0       3       0       0       0
  1080 ;;      Totals:         0       3       0       0       0
  1081 ;;Total ram usage:        3 bytes
  1082 ;; Hardware stack levels required when called:   10
  1083 ;; This function calls:
  1084 ;;		_Mode_0
  1085 ;;		_Mode_1
  1086 ;;		_Mode_2
  1087 ;;		_Mode_4
  1088 ;;		_Mode_5
  1089 ;;		_OperationMode
  1090 ;;		_TransiverInit
  1091 ;;		_TransiverReadFIFO
  1092 ;;		_TransiverToReceive
  1093 ;;		_init
  1094 ;; This function is called by:
  1095 ;;		Startup code after reset
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _main
  1101  06AB                     _main:	
  1102                           
  1103                           ;main.c: 30: init();
  1104                           
  1105                           ;incstack = 0
  1106 ;; hardware stack exceeded
  1107                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1108  06AB  120A  158A  2751  120A  118A  	fcall	_init
  1109                           
  1110                           ;main.c: 32: _delay((unsigned long)((800)*(4000000/4000.0)));
  1111  06B0  3005               	movlw	5
  1112  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1113  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1114  06B3  00E7               	movwf	??_main+2
  1115  06B4  300F               	movlw	15
  1116  06B5  00E6               	movwf	??_main+1
  1117  06B6  30F0               	movlw	240
  1118  06B7  00E5               	movwf	??_main
  1119  06B8                     u2117:	
  1120  06B8  0BE5               	decfsz	??_main,f
  1121  06B9  2EB8               	goto	u2117
  1122  06BA  0BE6               	decfsz	??_main+1,f
  1123  06BB  2EB8               	goto	u2117
  1124  06BC  0BE7               	decfsz	??_main+2,f
  1125  06BD  2EB8               	goto	u2117
  1126  06BE  0000               	nop
  1127                           
  1128                           ;main.c: 33: TransiverInit();
  1129  06BF  120A  118A  22ED  120A  118A  	fcall	_TransiverInit
  1130  06C4                     l2378:	
  1131                           ;main.c: 35: while(1)
  1132                           
  1133                           
  1134                           ;main.c: 36: {
  1135                           ;main.c: 37: if(OperationMode() == 0)
  1136  06C4  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1137  06C9  3A00               	xorlw	0
  1138  06CA  1D03               	skipz
  1139  06CB  2ED1               	goto	l2382
  1140                           
  1141                           ;main.c: 38: {
  1142                           ;main.c: 39: Mode_0();
  1143  06CC  120A  118A  27FC  120A  118A  	fcall	_Mode_0
  1144  06D1                     l2382:	
  1145                           
  1146                           ;main.c: 40: }
  1147                           ;main.c: 41: if(OperationMode() == 1)
  1148  06D1  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1149  06D6  3A01               	xorlw	1
  1150  06D7  1D03               	skipz
  1151  06D8  2EDE               	goto	l2386
  1152                           
  1153                           ;main.c: 42: {
  1154                           ;main.c: 43: Mode_1();
  1155  06D9  120A  158A  24CF  120A  118A  	fcall	_Mode_1
  1156  06DE                     l2386:	
  1157                           
  1158                           ;main.c: 44: }
  1159                           ;main.c: 46: if(OperationMode() == 2)
  1160  06DE  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1161  06E3  3A02               	xorlw	2
  1162  06E4  1D03               	skipz
  1163  06E5  2EEB               	goto	l2390
  1164                           
  1165                           ;main.c: 47: {
  1166                           ;main.c: 48: Mode_2();
  1167  06E6  120A  158A  244D  120A  118A  	fcall	_Mode_2
  1168  06EB                     l2390:	
  1169                           
  1170                           ;main.c: 49: }
  1171                           ;main.c: 51: if(OperationMode() == 4)
  1172  06EB  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1173  06F0  3A04               	xorlw	4
  1174  06F1  1D03               	skipz
  1175  06F2  2EF8               	goto	l2394
  1176                           
  1177                           ;main.c: 52: {
  1178                           ;main.c: 53: Mode_4();
  1179  06F3  120A  158A  2486  120A  118A  	fcall	_Mode_4
  1180  06F8                     l2394:	
  1181                           
  1182                           ;main.c: 54: }
  1183                           ;main.c: 56: if(OperationMode() == 5)
  1184  06F8  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1185  06FD  3A05               	xorlw	5
  1186  06FE  1D03               	skipz
  1187  06FF  2F05               	goto	l2398
  1188                           
  1189                           ;main.c: 57: {
  1190                           ;main.c: 58: Mode_5();
  1191  0700  120A  158A  2497  120A  118A  	fcall	_Mode_5
  1192  0705                     l2398:	
  1193                           
  1194                           ;main.c: 59: }
  1195                           ;main.c: 63: if(!bTransiverModeReceive)
  1196  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0707  086E               	movf	_bTransiverModeReceive,w
  1199  0708  1D03               	btfss	3,2
  1200  0709  2F0F               	goto	l2402
  1201                           
  1202                           ;main.c: 64: TransiverToReceive();
  1203  070A  120A  158A  27A4  120A  118A  	fcall	_TransiverToReceive
  1204  070F                     l2402:	
  1205                           
  1206                           ;main.c: 65: if(PORTBbits.RB4 && bTransiverModeReceive)
  1207  070F  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0710  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0711  1E06               	btfss	6,4	;volatile
  1210  0712  2EC4               	goto	l2378
  1211  0713  086E               	movf	_bTransiverModeReceive,w
  1212  0714  1903               	btfsc	3,2
  1213  0715  2EC4               	goto	l2378
  1214                           
  1215                           ;main.c: 66: TransiverReadFIFO();
  1216  0716  120A  118A  2575  120A  118A  	fcall	_TransiverReadFIFO
  1217  071B  2EC4               	goto	l2378
  1218  071C                     __end_of_main:	
  1219                           
  1220                           	psect	text1
  1221  0F51                     __ptext1:	
  1222 ;; *************** function _init *****************
  1223 ;; Defined at:
  1224 ;;		line 368 in file "functions.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    2
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _init
  1254  0F51                     _init:	
  1255                           
  1256                           ;functions.c: 371: OSCCONbits.IRCF2 = 1;
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _init: [wreg+status,2+status,0]
  1260  0F51  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0F52  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0F53  170F               	bsf	15,6	;volatile
  1263                           
  1264                           ;functions.c: 372: OSCCONbits.IRCF1 = 1;
  1265  0F54  168F               	bsf	15,5	;volatile
  1266                           
  1267                           ;functions.c: 373: OSCCONbits.IRCF0 = 0;
  1268  0F55  120F               	bcf	15,4	;volatile
  1269                           
  1270                           ;functions.c: 374: OSCCONbits.SCS = 1;
  1271  0F56  140F               	bsf	15,0	;volatile
  1272                           
  1273                           ;functions.c: 377: PORTA = 0x00;
  1274  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0F59  0185               	clrf	5	;volatile
  1277                           
  1278                           ;functions.c: 378: PORTB = 0x00;
  1279  0F5A  0186               	clrf	6	;volatile
  1280                           
  1281                           ;functions.c: 379: PORTC = 0x00;
  1282  0F5B  0187               	clrf	7	;volatile
  1283                           
  1284                           ;functions.c: 380: TRISA = 0b00001011;
  1285  0F5C  300B               	movlw	11
  1286  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0F5E  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0F5F  0085               	movwf	5	;volatile
  1289                           
  1290                           ;functions.c: 381: TRISB = 0b00111111;
  1291  0F60  303F               	movlw	63
  1292  0F61  0086               	movwf	6	;volatile
  1293                           
  1294                           ;functions.c: 382: TRISC = 0b00010000;
  1295  0F62  3010               	movlw	16
  1296  0F63  0087               	movwf	7	;volatile
  1297                           
  1298                           ;functions.c: 383: ANSEL = 0b00000000;
  1299  0F64  1683               	bsf	3,5	;RP0=1, select bank3
  1300  0F65  1703               	bsf	3,6	;RP1=1, select bank3
  1301  0F66  0188               	clrf	8	;volatile
  1302                           
  1303                           ;functions.c: 384: ANSELH = 0b00000000;
  1304  0F67  0189               	clrf	9	;volatile
  1305                           
  1306                           ;functions.c: 385: ANSELbits.ANS0 = 1;
  1307  0F68  1408               	bsf	8,0	;volatile
  1308                           
  1309                           ;functions.c: 386: ANSELbits.ANS3 = 1;
  1310  0F69  1588               	bsf	8,3	;volatile
  1311                           
  1312                           ;functions.c: 387: OPTION_REGbits.nRBPU = 0;
  1313  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0F6C  1381               	bcf	1,7	;volatile
  1316                           
  1317                           ;functions.c: 388: WPUBbits.WPUB5 = 0;
  1318  0F6D  1295               	bcf	21,5	;volatile
  1319  0F6E                     l332:	
  1320                           ;functions.c: 389: while(!PORTBbits.RB5);
  1321                           
  1322  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0F6F  1E86               	btfss	6,5	;volatile
  1324  0F70  2F6E               	goto	l332
  1325                           
  1326                           ;functions.c: 392: SSPCONbits.SSPM=0x00;
  1327  0F71  30F0               	movlw	-16
  1328  0F72  0594               	andwf	20,f	;volatile
  1329                           
  1330                           ;functions.c: 393: SSPCONbits.CKP=0;
  1331  0F73  1214               	bcf	20,4	;volatile
  1332                           
  1333                           ;functions.c: 394: SSPSTATbits.CKE=1;
  1334  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0F76  1714               	bsf	20,6	;volatile
  1337                           
  1338                           ;functions.c: 395: SSPSTATbits.SMP=0;
  1339  0F77  1394               	bcf	20,7	;volatile
  1340                           
  1341                           ;functions.c: 396: SSPCONbits.SSPEN=0x01;
  1342  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0F7A  1694               	bsf	20,5	;volatile
  1345                           
  1346                           ;functions.c: 397: SSPIE = 0;
  1347  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0F7D  118C               	bcf	12,3	;volatile
  1350                           
  1351                           ;functions.c: 400: PORTAbits.RA5 = 1;
  1352  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0F80  1685               	bsf	5,5	;volatile
  1355                           
  1356                           ;functions.c: 401: PORTAbits.RA4 = 1;
  1357  0F81  1605               	bsf	5,4	;volatile
  1358                           
  1359                           ;functions.c: 404: INTCONbits.RBIE = 1;
  1360  0F82  158B               	bsf	11,3	;volatile
  1361                           
  1362                           ;functions.c: 405: INTCONbits.PEIE = 1;
  1363  0F83  170B               	bsf	11,6	;volatile
  1364                           
  1365                           ;functions.c: 406: PIE1bits.TMR1IE = 1;
  1366  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0F86  140C               	bsf	12,0	;volatile
  1369                           
  1370                           ;functions.c: 407: INTCONbits.GIE = 1;
  1371  0F87  178B               	bsf	11,7	;volatile
  1372                           
  1373                           ;functions.c: 408: IOCBbits.IOCB5 = 1;
  1374  0F88  1696               	bsf	22,5	;volatile
  1375                           
  1376                           ;functions.c: 411: T1CON = 0b00110000;
  1377  0F89  3030               	movlw	48
  1378  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0F8C  0090               	movwf	16	;volatile
  1381                           
  1382                           ;functions.c: 412: TMR1H = 0x0B;
  1383  0F8D  300B               	movlw	11
  1384  0F8E  008F               	movwf	15	;volatile
  1385                           
  1386                           ;functions.c: 413: TMR1L = 0xDB;
  1387  0F8F  30DB               	movlw	219
  1388  0F90  008E               	movwf	14	;volatile
  1389                           
  1390                           ;functions.c: 414: T1CONbits.TMR1ON = 1;
  1391  0F91  1410               	bsf	16,0	;volatile
  1392                           
  1393                           ;functions.c: 417: ADCON0bits.ADCS0 = 0;
  1394  0F92  131F               	bcf	31,6	;volatile
  1395                           
  1396                           ;functions.c: 418: ADCON0bits.ADCS1 = 0;
  1397  0F93  139F               	bcf	31,7	;volatile
  1398                           
  1399                           ;functions.c: 419: ADCON1bits.ADFM = 0;
  1400  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0F96  139F               	bcf	31,7	;volatile
  1403                           
  1404                           ;functions.c: 420: ADCON1bits.VCFG1 = 0;
  1405  0F97  129F               	bcf	31,5	;volatile
  1406                           
  1407                           ;functions.c: 421: ADCON1bits.VCFG0 = 0;
  1408  0F98  121F               	bcf	31,4	;volatile
  1409                           
  1410                           ;functions.c: 424: intSecondCounter = 0;
  1411  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0F9B  01EA               	clrf	_intSecondCounter
  1414  0F9C  01EB               	clrf	_intSecondCounter+1
  1415                           
  1416                           ;functions.c: 425: intHalfSecondCounter = 0;
  1417  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0F9F  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1420  0FA0  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1421                           
  1422                           ;functions.c: 426: intMinuteCounter = 0;
  1423  0FA1  01B7               	clrf	_intMinuteCounter^(0+128)
  1424  0FA2  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1425  0FA3  0008               	return
  1426  0FA4                     __end_of_init:	
  1427                           
  1428                           	psect	text2
  1429  0FA4                     __ptext2:	
  1430 ;; *************** function _TransiverToReceive *****************
  1431 ;; Defined at:
  1432 ;;		line 12 in file "functions.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          0       2       0       0       0
  1449 ;;      Totals:         0       2       0       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    7
  1453 ;; This function calls:
  1454 ;;		_FindChannel
  1455 ;;		_RegisterRead
  1456 ;;		_RegisterSet
  1457 ;;		_SetRFMode
  1458 ;;		_timerFunction
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _TransiverToReceive
  1466  0FA4                     _TransiverToReceive:	
  1467                           
  1468                           ;functions.c: 14: timerFunction(2, 5);
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1472  0FA4  3002               	movlw	2
  1473  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0FA7  00A0               	movwf	timerFunction@intTimerNumber
  1476  0FA8  3000               	movlw	0
  1477  0FA9  00A1               	movwf	timerFunction@intTimerNumber+1
  1478  0FAA  3005               	movlw	5
  1479  0FAB  00A2               	movwf	timerFunction@intSetSeconds
  1480  0FAC  3000               	movlw	0
  1481  0FAD  00A3               	movwf	timerFunction@intSetSeconds+1
  1482  0FAE  120A  158A  24A8  120A  158A  	fcall	_timerFunction
  1483                           
  1484                           ;functions.c: 18: SetRFMode(0x20);
  1485  0FB3  3020               	movlw	32
  1486  0FB4  120A  118A  278D  120A  158A  	fcall	_SetRFMode
  1487                           
  1488                           ;functions.c: 19: _delay((unsigned long)((10)*(4000000/4000.0)));
  1489  0FB9  300D               	movlw	13
  1490  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0FBC  00B6               	movwf	??_TransiverToReceive+1
  1493  0FBD  30FB               	movlw	251
  1494  0FBE  00B5               	movwf	??_TransiverToReceive
  1495  0FBF                     u2127:	
  1496  0FBF  0BB5               	decfsz	??_TransiverToReceive,f
  1497  0FC0  2FBF               	goto	u2127
  1498  0FC1  0BB6               	decfsz	??_TransiverToReceive+1,f
  1499  0FC2  2FBF               	goto	u2127
  1500                           
  1501                           ;functions.c: 20: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1502  0FC3  300E               	movlw	14
  1503  0FC4  120A  158A  2503  120A  158A  	fcall	_RegisterRead
  1504  0FC9  3802               	iorlw	2
  1505  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0FCC  00B5               	movwf	??_TransiverToReceive
  1508  0FCD  0835               	movf	??_TransiverToReceive,w
  1509  0FCE  00A7               	movwf	RegisterSet@value
  1510  0FCF  300E               	movlw	14
  1511  0FD0  120A  158A  24E9  120A  158A  	fcall	_RegisterSet
  1512                           
  1513                           ;functions.c: 21: SetRFMode(0x40);
  1514  0FD5  3040               	movlw	64
  1515  0FD6  120A  118A  278D  120A  158A  	fcall	_SetRFMode
  1516  0FDB                     l2310:	
  1517                           ;functions.c: 22: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1518                           
  1519  0FDB  300E               	movlw	14
  1520  0FDC  120A  158A  2503  120A  158A  	fcall	_RegisterRead
  1521  0FE1  3902               	andlw	2
  1522  0FE2  1D03               	btfss	3,2
  1523  0FE3  2FEE               	goto	l2312
  1524                           
  1525                           ;functions.c: 23: {
  1526                           ;functions.c: 24: if(bTimerComplete[2])
  1527  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0FE6  082C               	movf	(_bTimerComplete^(0+128)+2),w
  1530  0FE7  1903               	btfsc	3,2
  1531  0FE8  2FDB               	goto	l2310
  1532                           
  1533                           ;functions.c: 25: {
  1534                           ;functions.c: 26: FindChannel();
  1535  0FE9  120A  118A  21ED  120A  158A  	fcall	_FindChannel
  1536  0FEE                     l2312:	
  1537                           ;functions.c: 27: break;
  1538                           
  1539                           
  1540                           ;functions.c: 28: }
  1541                           ;functions.c: 29: }
  1542                           ;functions.c: 31: SetRFMode(0x60);
  1543  0FEE  3060               	movlw	96
  1544  0FEF  120A  118A  278D  120A  158A  	fcall	_SetRFMode
  1545                           
  1546                           ;functions.c: 32: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1547  0FF4  30A5               	movlw	165
  1548  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0FF7  00B5               	movwf	??_TransiverToReceive
  1551  0FF8                     u2137:	
  1552  0FF8  0BB5               	decfsz	??_TransiverToReceive,f
  1553  0FF9  2FF8               	goto	u2137
  1554  0FFA  2FFB               	nop2
  1555                           
  1556                           ;functions.c: 33: bTransiverModeReceive = 1;
  1557  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0FFD  01EE               	clrf	_bTransiverModeReceive
  1560  0FFE  0AEE               	incf	_bTransiverModeReceive,f
  1561  0FFF  0008               	return
  1562  1000                     __end_of_TransiverToReceive:	
  1563                           
  1564                           	psect	text3
  1565  0575                     __ptext3:	
  1566 ;; *************** function _TransiverReadFIFO *****************
  1567 ;; Defined at:
  1568 ;;		line 38 in file "functions.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  j               2   67[BANK0 ] int 
  1573 ;;  i               2   65[BANK0 ] int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       4       0       0       0
  1585 ;;      Temps:          0       2       0       0       0
  1586 ;;      Totals:         0       6       0       0       0
  1587 ;;Total ram usage:        6 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    9
  1590 ;; This function calls:
  1591 ;;		_ReadFIFO
  1592 ;;		_SetRFMode
  1593 ;;		_TransmittedDataHandler
  1594 ;;		_timerFunction
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _TransiverReadFIFO
  1602  0575                     _TransiverReadFIFO:	
  1603                           
  1604                           ;functions.c: 40: timerFunction(3, 5);
  1605                           
  1606                           ;incstack = 0
  1607 ;; hardware stack exceeded
  1608                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1609  0575  3003               	movlw	3
  1610  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0578  00A0               	movwf	timerFunction@intTimerNumber
  1613  0579  3000               	movlw	0
  1614  057A  00A1               	movwf	timerFunction@intTimerNumber+1
  1615  057B  3005               	movlw	5
  1616  057C  00A2               	movwf	timerFunction@intSetSeconds
  1617  057D  3000               	movlw	0
  1618  057E  00A3               	movwf	timerFunction@intSetSeconds+1
  1619  057F  120A  158A  24A8  120A  118A  	fcall	_timerFunction
  1620                           
  1621                           ;functions.c: 42: SetRFMode(0x20);
  1622  0584  3020               	movlw	32
  1623  0585  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  1624                           
  1625                           ;functions.c: 43: bTransiverModeReceive = 0;
  1626  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1627  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1628  058C  01EE               	clrf	_bTransiverModeReceive
  1629                           
  1630                           ;functions.c: 44: int i = 0;
  1631  058D  01E1               	clrf	TransiverReadFIFO@i
  1632  058E  01E2               	clrf	TransiverReadFIFO@i+1
  1633                           
  1634                           ;functions.c: 45: for (int j = 0; j < 30; ++j)
  1635  058F  01E3               	clrf	TransiverReadFIFO@j
  1636  0590  01E4               	clrf	TransiverReadFIFO@j+1
  1637  0591                     L1:	
  1638  0591  0864               	movf	TransiverReadFIFO@j+1,w
  1639  0592  3A80               	xorlw	128
  1640  0593  00FF               	movwf	127
  1641  0594  3080               	movlw	128
  1642  0595  027F               	subwf	127,w
  1643  0596  1D03               	skipz
  1644  0597  2D9A               	goto	u1835
  1645  0598  301E               	movlw	30
  1646  0599  0263               	subwf	TransiverReadFIFO@j,w
  1647  059A                     u1835:	
  1648  059A  1803               	btfsc	3,0
  1649  059B  2DBE               	goto	l2340
  1650                           
  1651                           ;functions.c: 46: {
  1652                           ;functions.c: 47: TransmittedString[j] = 0;
  1653  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  059E  0863               	movf	TransiverReadFIFO@j,w
  1656  059F  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1657  05A0  0084               	movwf	4
  1658  05A1  1383               	bcf	3,7	;select IRP bank1
  1659  05A2  0180               	clrf	0
  1660  05A3  3001               	movlw	1
  1661  05A4  07E3               	addwf	TransiverReadFIFO@j,f
  1662  05A5  1803               	skipnc
  1663  05A6  0AE4               	incf	TransiverReadFIFO@j+1,f
  1664  05A7  3000               	movlw	0
  1665  05A8  07E4               	addwf	TransiverReadFIFO@j+1,f
  1666  05A9  2D91               	goto	L1
  1667  05AA                     l2336:	
  1668                           ;functions.c: 48: }
  1669                           ;functions.c: 49: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1670                           
  1671                           
  1672                           ;functions.c: 50: {
  1673                           ;functions.c: 51: TransmittedString[i] = ReadFIFO();
  1674  05AA  120A  158A  2468  120A  118A  	fcall	_ReadFIFO
  1675  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1676  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1677  05B1  00DF               	movwf	??_TransiverReadFIFO
  1678  05B2  0861               	movf	TransiverReadFIFO@i,w
  1679  05B3  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1680  05B4  0084               	movwf	4
  1681  05B5  085F               	movf	??_TransiverReadFIFO,w
  1682  05B6  1383               	bcf	3,7	;select IRP bank1
  1683  05B7  0080               	movwf	0
  1684                           
  1685                           ;functions.c: 52: i++;
  1686  05B8  3001               	movlw	1
  1687  05B9  07E1               	addwf	TransiverReadFIFO@i,f
  1688  05BA  1803               	skipnc
  1689  05BB  0AE2               	incf	TransiverReadFIFO@i+1,f
  1690  05BC  3000               	movlw	0
  1691  05BD  07E2               	addwf	TransiverReadFIFO@i+1,f
  1692  05BE                     l2340:	
  1693  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1694  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1695  05C0  1D86               	btfss	6,3	;volatile
  1696  05C1  2DC7               	goto	l2344
  1697  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1698  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1699  05C4  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1700  05C5  1903               	btfsc	3,2
  1701  05C6  2DAA               	goto	l2336
  1702  05C7                     l2344:	
  1703                           
  1704                           ;functions.c: 53: }
  1705                           ;functions.c: 55: _delay((unsigned long)((10)*(4000000/4000.0)));
  1706  05C7  300D               	movlw	13
  1707  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1708  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1709  05CA  00E0               	movwf	??_TransiverReadFIFO+1
  1710  05CB  30FB               	movlw	251
  1711  05CC  00DF               	movwf	??_TransiverReadFIFO
  1712  05CD                     u2147:	
  1713  05CD  0BDF               	decfsz	??_TransiverReadFIFO,f
  1714  05CE  2DCD               	goto	u2147
  1715  05CF  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1716  05D0  2DCD               	goto	u2147
  1717                           
  1718                           ;functions.c: 56: SetRFMode(0x00);
  1719  05D1  3000               	movlw	0
  1720  05D2  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  1721                           
  1722                           ;functions.c: 57: TransmittedDataHandler();
  1723  05D7  120A  118A  2048   	fcall	_TransmittedDataHandler
  1724  05DA  0008               	return
  1725  05DB                     __end_of_TransiverReadFIFO:	
  1726                           
  1727                           	psect	text4
  1728  0048                     __ptext4:	
  1729 ;; *************** function _TransmittedDataHandler *****************
  1730 ;; Defined at:
  1731 ;;		line 59 in file "functions.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1736 ;;  value           2   61[BANK0 ] int 
  1737 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1738 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1739 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         0      34       0       0       0
  1751 ;;      Temps:          0       1       0       0       0
  1752 ;;      Totals:         0      35       0       0       0
  1753 ;;Total ram usage:       35 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    8
  1756 ;; This function calls:
  1757 ;;		_AnalogValue
  1758 ;;		_DarknessCheck
  1759 ;;		_DelayDs
  1760 ;;		_OperationMode
  1761 ;;		_TransmittString
  1762 ;;		_atoi
  1763 ;;		_eeprom_read
  1764 ;;		_eeprom_write
  1765 ;;		_strstr
  1766 ;; This function is called by:
  1767 ;;		_TransiverReadFIFO
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _TransmittedDataHandler
  1773  0048                     _TransmittedDataHandler:	
  1774                           
  1775                           ;functions.c: 62: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() == 6))
  1776                           
  1777                           ;incstack = 0
  1778 ;; hardware stack exceeded
  1779                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1780  0048  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1781  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1782  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1783  004B  00BC               	movwf	??_TransmittedDataHandler
  1784  004C  083C               	movf	??_TransmittedDataHandler,w
  1785  004D  00AE               	movwf	strstr@s2
  1786  004E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1787  004F  120A  158A  270B  120A  118A  	fcall	_strstr
  1788  0054  3A00               	xorlw	0
  1789  0055  1903               	skipnz
  1790  0056  2873               	goto	l2072
  1791  0057  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1792  005C  3A06               	xorlw	6
  1793  005D  1D03               	skipz
  1794  005E  2873               	goto	l2072
  1795                           
  1796                           ;functions.c: 63: {
  1797                           ;functions.c: 64: intBlinkCycle = 1;
  1798  005F  3001               	movlw	1
  1799  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0062  00E8               	movwf	_intBlinkCycle
  1802  0063  3000               	movlw	0
  1803  0064  00E9               	movwf	_intBlinkCycle+1
  1804                           
  1805                           ;functions.c: 65: intBlinkCounter = 0;
  1806  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0067  01B1               	clrf	_intBlinkCounter^(0+128)
  1809  0068  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1810                           
  1811                           ;functions.c: 66: DelayDs(100);
  1812  0069  3064               	movlw	100
  1813  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1814  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1815  006C  00A0               	movwf	DelayDs@cnt
  1816  006D  3000               	movlw	0
  1817  006E  00A1               	movwf	DelayDs@cnt+1
  1818  006F  120A  158A  251F   	fcall	_DelayDs
  1819                           
  1820                           ;functions.c: 67: }
  1821  0072  0008               	return
  1822  0073                     l2072:	
  1823                           
  1824                           ;functions.c: 68: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMode() == 
      +                          7))
  1825  0073  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1826  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0076  00BC               	movwf	??_TransmittedDataHandler
  1829  0077  083C               	movf	??_TransmittedDataHandler,w
  1830  0078  00AE               	movwf	strstr@s2
  1831  0079  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1832  007A  120A  158A  270B  120A  118A  	fcall	_strstr
  1833  007F  3A00               	xorlw	0
  1834  0080  1903               	skipnz
  1835  0081  289E               	goto	l2082
  1836  0082  120A  158A  2438  120A  118A  	fcall	_OperationMode
  1837  0087  3A07               	xorlw	7
  1838  0088  1D03               	skipz
  1839  0089  289E               	goto	l2082
  1840                           
  1841                           ;functions.c: 69: {
  1842                           ;functions.c: 70: intBlinkCycle = 1;
  1843  008A  3001               	movlw	1
  1844  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1845  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1846  008D  00E8               	movwf	_intBlinkCycle
  1847  008E  3000               	movlw	0
  1848  008F  00E9               	movwf	_intBlinkCycle+1
  1849                           
  1850                           ;functions.c: 71: intBlinkCounter = 0;
  1851  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0092  01B1               	clrf	_intBlinkCounter^(0+128)
  1854  0093  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1855                           
  1856                           ;functions.c: 72: DelayDs(100);
  1857  0094  3064               	movlw	100
  1858  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0097  00A0               	movwf	DelayDs@cnt
  1861  0098  3000               	movlw	0
  1862  0099  00A1               	movwf	DelayDs@cnt+1
  1863  009A  120A  158A  251F   	fcall	_DelayDs
  1864                           
  1865                           ;functions.c: 73: }
  1866  009D  0008               	return
  1867  009E                     l2082:	
  1868                           
  1869                           ;functions.c: 74: else if((strstr(TransmittedString,"FLASHL")))
  1870  009E  3082               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1871  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1872  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1873  00A1  00BC               	movwf	??_TransmittedDataHandler
  1874  00A2  083C               	movf	??_TransmittedDataHandler,w
  1875  00A3  00AE               	movwf	strstr@s2
  1876  00A4  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1877  00A5  120A  158A  270B  120A  118A  	fcall	_strstr
  1878  00AA  3A00               	xorlw	0
  1879  00AB  1903               	skipnz
  1880  00AC  28C4               	goto	l2090
  1881                           
  1882                           ;functions.c: 75: {
  1883                           ;functions.c: 76: PORTCbits.RC2 = 1;
  1884  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1885  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1886  00AF  1507               	bsf	7,2	;volatile
  1887                           
  1888                           ;functions.c: 77: DelayDs(10);
  1889  00B0  300A               	movlw	10
  1890  00B1  00A0               	movwf	DelayDs@cnt
  1891  00B2  3000               	movlw	0
  1892  00B3  00A1               	movwf	DelayDs@cnt+1
  1893  00B4  120A  158A  251F  120A  118A  	fcall	_DelayDs
  1894                           
  1895                           ;functions.c: 78: PORTCbits.RC2 = 0;
  1896  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1897  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1898  00BB  1107               	bcf	7,2	;volatile
  1899                           
  1900                           ;functions.c: 79: DelayDs(5);
  1901  00BC  3005               	movlw	5
  1902  00BD  00A0               	movwf	DelayDs@cnt
  1903  00BE  3000               	movlw	0
  1904  00BF  00A1               	movwf	DelayDs@cnt+1
  1905  00C0  120A  158A  251F   	fcall	_DelayDs
  1906                           
  1907                           ;functions.c: 80: }
  1908  00C3  0008               	return
  1909  00C4                     l2090:	
  1910                           
  1911                           ;functions.c: 81: else if((strstr(TransmittedString,"FLASHB")))
  1912  00C4  3074               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1913  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1914  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1915  00C7  00BC               	movwf	??_TransmittedDataHandler
  1916  00C8  083C               	movf	??_TransmittedDataHandler,w
  1917  00C9  00AE               	movwf	strstr@s2
  1918  00CA  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1919  00CB  120A  158A  270B  120A  118A  	fcall	_strstr
  1920  00D0  3A00               	xorlw	0
  1921  00D1  1903               	skipnz
  1922  00D2  28EA               	goto	l2098
  1923                           
  1924                           ;functions.c: 82: {
  1925                           ;functions.c: 83: PORTCbits.RC1 = 1;
  1926  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1927  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1928  00D5  1487               	bsf	7,1	;volatile
  1929                           
  1930                           ;functions.c: 84: DelayDs(10);
  1931  00D6  300A               	movlw	10
  1932  00D7  00A0               	movwf	DelayDs@cnt
  1933  00D8  3000               	movlw	0
  1934  00D9  00A1               	movwf	DelayDs@cnt+1
  1935  00DA  120A  158A  251F  120A  118A  	fcall	_DelayDs
  1936                           
  1937                           ;functions.c: 85: PORTCbits.RC1 = 0;
  1938  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1939  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1940  00E1  1087               	bcf	7,1	;volatile
  1941                           
  1942                           ;functions.c: 86: DelayDs(5);
  1943  00E2  3005               	movlw	5
  1944  00E3  00A0               	movwf	DelayDs@cnt
  1945  00E4  3000               	movlw	0
  1946  00E5  00A1               	movwf	DelayDs@cnt+1
  1947  00E6  120A  158A  251F   	fcall	_DelayDs
  1948                           
  1949                           ;functions.c: 87: }
  1950  00E9  0008               	return
  1951  00EA                     l2098:	
  1952                           
  1953                           ;functions.c: 88: else if((strstr(TransmittedString,"SENSVAL")))
  1954  00EA  3065               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1955  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1956  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1957  00ED  00BC               	movwf	??_TransmittedDataHandler
  1958  00EE  083C               	movf	??_TransmittedDataHandler,w
  1959  00EF  00AE               	movwf	strstr@s2
  1960  00F0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1961  00F1  120A  158A  270B  120A  118A  	fcall	_strstr
  1962  00F6  3A00               	xorlw	0
  1963  00F7  1903               	skipnz
  1964  00F8  290C               	goto	l2104
  1965                           
  1966                           ;functions.c: 89: {
  1967                           ;functions.c: 90: unsigned char slask[8];
  1968                           ;functions.c: 91: slask[0] = AnalogValue(0);
  1969  00F9  3000               	movlw	0
  1970  00FA  120A  158A  2565  120A  118A  	fcall	_AnalogValue
  1971  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0101  00BC               	movwf	??_TransmittedDataHandler
  1974  0102  083C               	movf	??_TransmittedDataHandler,w
  1975  0103  00BD               	movwf	TransmittedDataHandler@slask
  1976                           
  1977                           ;functions.c: 92: TransmittString(slask);
  1978  0104  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1979  0105  00B5               	movwf	TransmittString@dataString
  1980  0106  3000               	movlw	0
  1981  0107  00B6               	movwf	TransmittString@dataString+1
  1982  0108  120A  118A  23D7   	fcall	_TransmittString
  1983                           
  1984                           ;functions.c: 93: }
  1985  010B  0008               	return
  1986  010C                     l2104:	
  1987                           
  1988                           ;functions.c: 94: else if((strstr(TransmittedString,"POTVAL")))
  1989  010C  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1990  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1991  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1992  010F  00BC               	movwf	??_TransmittedDataHandler
  1993  0110  083C               	movf	??_TransmittedDataHandler,w
  1994  0111  00AE               	movwf	strstr@s2
  1995  0112  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1996  0113  120A  158A  270B  120A  118A  	fcall	_strstr
  1997  0118  3A00               	xorlw	0
  1998  0119  1903               	skipnz
  1999  011A  292E               	goto	l2110
  2000                           
  2001                           ;functions.c: 95: {
  2002                           ;functions.c: 96: unsigned char slask[8];
  2003                           ;functions.c: 97: slask[0] = AnalogValue(3);
  2004  011B  3003               	movlw	3
  2005  011C  120A  158A  2565  120A  118A  	fcall	_AnalogValue
  2006  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0123  00BC               	movwf	??_TransmittedDataHandler
  2009  0124  083C               	movf	??_TransmittedDataHandler,w
  2010  0125  00C5               	movwf	TransmittedDataHandler@slask_734
  2011                           
  2012                           ;functions.c: 98: TransmittString(slask);
  2013  0126  3045               	movlw	(low (TransmittedDataHandler@slask_734| 0))& (0+255)
  2014  0127  00B5               	movwf	TransmittString@dataString
  2015  0128  3000               	movlw	0
  2016  0129  00B6               	movwf	TransmittString@dataString+1
  2017  012A  120A  118A  23D7   	fcall	_TransmittString
  2018                           
  2019                           ;functions.c: 99: }
  2020  012D  0008               	return
  2021  012E                     l2110:	
  2022                           
  2023                           ;functions.c: 100: else if((strstr(TransmittedString,"DARKCALC")))
  2024  012E  3044               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2025  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0131  00BC               	movwf	??_TransmittedDataHandler
  2028  0132  083C               	movf	??_TransmittedDataHandler,w
  2029  0133  00AE               	movwf	strstr@s2
  2030  0134  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2031  0135  120A  158A  270B  120A  118A  	fcall	_strstr
  2032  013A  3A00               	xorlw	0
  2033  013B  1903               	skipnz
  2034  013C  2959               	goto	l2120
  2035                           
  2036                           ;functions.c: 101: {
  2037                           ;functions.c: 102: DarknessCheck();
  2038  013D  120A  158A  258E  120A  118A  	fcall	_DarknessCheck
  2039                           
  2040                           ;functions.c: 103: if(bDark)
  2041  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0144  086D               	movf	_bDark,w
  2044  0145  1903               	btfsc	3,2
  2045  0146  294F               	goto	l2118
  2046                           
  2047                           ;functions.c: 104: TransmittString("It's Dark    ");
  2048  0147  3036               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2049  0148  00B5               	movwf	TransmittString@dataString
  2050  0149  3080               	movlw	128
  2051  014A  00B6               	movwf	TransmittString@dataString+1
  2052  014B  120A  118A  23D7   	fcall	_TransmittString
  2053  014E  0008               	return
  2054  014F                     l2118:	
  2055                           
  2056                           ;functions.c: 105: else
  2057                           ;functions.c: 106: TransmittString("Not Dark     ");
  2058  014F  3028               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2059  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0152  00B5               	movwf	TransmittString@dataString
  2062  0153  3080               	movlw	128
  2063  0154  00B6               	movwf	TransmittString@dataString+1
  2064  0155  120A  118A  23D7   	fcall	_TransmittString
  2065                           
  2066                           ;functions.c: 107: }
  2067  0158  0008               	return
  2068  0159                     l2120:	
  2069                           
  2070                           ;functions.c: 108: else if((strstr(TransmittedString,"STATE?")))
  2071  0159  306D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2072  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2073  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2074  015C  00BC               	movwf	??_TransmittedDataHandler
  2075  015D  083C               	movf	??_TransmittedDataHandler,w
  2076  015E  00AE               	movwf	strstr@s2
  2077  015F  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2078  0160  120A  158A  270B  120A  118A  	fcall	_strstr
  2079  0165  3A00               	xorlw	0
  2080  0166  1903               	skipnz
  2081  0167  297F               	goto	l2128
  2082                           
  2083                           ;functions.c: 109: {
  2084                           ;functions.c: 110: if(bValueFromPot == TRUE)
  2085  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2087  016A  036F               	decf	_bValueFromPot,w
  2088  016B  1D03               	btfss	3,2
  2089  016C  2975               	goto	l2126
  2090                           
  2091                           ;functions.c: 111: TransmittString("Pot");
  2092  016D  3098               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2093  016E  00B5               	movwf	TransmittString@dataString
  2094  016F  3080               	movlw	128
  2095  0170  00B6               	movwf	TransmittString@dataString+1
  2096  0171  120A  118A  23D7   	fcall	_TransmittString
  2097  0174  0008               	return
  2098  0175                     l2126:	
  2099                           
  2100                           ;functions.c: 112: else
  2101                           ;functions.c: 113: TransmittString("PIC");
  2102  0175  3094               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2103  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0178  00B5               	movwf	TransmittString@dataString
  2106  0179  3080               	movlw	128
  2107  017A  00B6               	movwf	TransmittString@dataString+1
  2108  017B  120A  118A  23D7   	fcall	_TransmittString
  2109                           
  2110                           ;functions.c: 115: }
  2111  017E  0008               	return
  2112  017F                     l2128:	
  2113                           
  2114                           ;functions.c: 116: else if((strstr(TransmittedString,"CHSTATE")))
  2115  017F  304D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2116  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0182  00BC               	movwf	??_TransmittedDataHandler
  2119  0183  083C               	movf	??_TransmittedDataHandler,w
  2120  0184  00AE               	movwf	strstr@s2
  2121  0185  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2122  0186  120A  158A  270B  120A  118A  	fcall	_strstr
  2123  018B  3A00               	xorlw	0
  2124  018C  1903               	skipnz
  2125  018D  2998               	goto	l2134
  2126                           
  2127                           ;functions.c: 117: {
  2128                           ;functions.c: 118: if(bValueFromPot== TRUE)
  2129  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2130  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0190  036F               	decf	_bValueFromPot,w
  2132  0191  1D03               	btfss	3,2
  2133  0192  2995               	goto	l266
  2134                           
  2135                           ;functions.c: 119: bValueFromPot= FALSE;
  2136  0193  01EF               	clrf	_bValueFromPot
  2137  0194  0008               	return
  2138  0195                     l266:	
  2139                           
  2140                           ;functions.c: 120: else
  2141                           ;functions.c: 121: bValueFromPot=TRUE;
  2142  0195  01EF               	clrf	_bValueFromPot
  2143  0196  0AEF               	incf	_bValueFromPot,f
  2144                           
  2145                           ;functions.c: 122: }
  2146  0197  0008               	return
  2147  0198                     l2134:	
  2148                           
  2149                           ;functions.c: 124: else if((strstr(TransmittedString,"RMDV")))
  2150  0198  308F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2151  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2152  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2153  019B  00BC               	movwf	??_TransmittedDataHandler
  2154  019C  083C               	movf	??_TransmittedDataHandler,w
  2155  019D  00AE               	movwf	strstr@s2
  2156  019E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2157  019F  120A  158A  270B  120A  118A  	fcall	_strstr
  2158  01A4  3A00               	xorlw	0
  2159  01A5  1903               	skipnz
  2160  01A6  29BA               	goto	l2140
  2161                           
  2162                           ;functions.c: 125: {
  2163                           ;functions.c: 126: unsigned char slask[8];
  2164                           ;functions.c: 127: slask[0] = eeprom_read(addressDarknessValue);
  2165  01A7  087C               	movf	_addressDarknessValue,w
  2166  01A8  120A  118A  25DB  120A  118A  	fcall	_eeprom_read
  2167  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2168  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2169  01AF  00BC               	movwf	??_TransmittedDataHandler
  2170  01B0  083C               	movf	??_TransmittedDataHandler,w
  2171  01B1  00CD               	movwf	TransmittedDataHandler@slask_743
  2172                           
  2173                           ;functions.c: 128: TransmittString(slask);
  2174  01B2  304D               	movlw	(low (TransmittedDataHandler@slask_743| 0))& (0+255)
  2175  01B3  00B5               	movwf	TransmittString@dataString
  2176  01B4  3000               	movlw	0
  2177  01B5  00B6               	movwf	TransmittString@dataString+1
  2178  01B6  120A  118A  23D7   	fcall	_TransmittString
  2179                           
  2180                           ;functions.c: 130: }
  2181  01B9  0008               	return
  2182  01BA                     l2140:	
  2183                           
  2184                           ;functions.c: 132: else if((strstr(TransmittedString,"SETDV")))
  2185  01BA  3089               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2186  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2187  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2188  01BD  00BC               	movwf	??_TransmittedDataHandler
  2189  01BE  083C               	movf	??_TransmittedDataHandler,w
  2190  01BF  00AE               	movwf	strstr@s2
  2191  01C0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2192  01C1  120A  158A  270B  120A  118A  	fcall	_strstr
  2193  01C6  3A00               	xorlw	0
  2194  01C7  1903               	skipnz
  2195  01C8  0008               	return
  2196                           
  2197                           ;functions.c: 133: {
  2198                           ;functions.c: 135: int value;
  2199                           ;functions.c: 136: unsigned char slask[8];
  2200                           ;functions.c: 137: value = atoi(&TransmittedString[6]);
  2201  01C9  30BF               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2202  01CA  120A  118A  271C  120A  118A  	fcall	_atoi
  2203  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2204  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2205  01D1  0827               	movf	?_atoi+1,w
  2206  01D2  00DE               	movwf	TransmittedDataHandler@value+1
  2207  01D3  0826               	movf	?_atoi,w
  2208  01D4  00DD               	movwf	TransmittedDataHandler@value
  2209                           
  2210                           ;functions.c: 138: slask[0] = (unsigned char)value;
  2211  01D5  085D               	movf	TransmittedDataHandler@value,w
  2212  01D6  00BC               	movwf	??_TransmittedDataHandler
  2213  01D7  083C               	movf	??_TransmittedDataHandler,w
  2214  01D8  00D5               	movwf	TransmittedDataHandler@slask_746
  2215                           
  2216                           ;functions.c: 139: TransmittString(slask);
  2217  01D9  3055               	movlw	(low (TransmittedDataHandler@slask_746| 0))& (0+255)
  2218  01DA  00B5               	movwf	TransmittString@dataString
  2219  01DB  3000               	movlw	0
  2220  01DC  00B6               	movwf	TransmittString@dataString+1
  2221  01DD  120A  118A  23D7  120A  118A  	fcall	_TransmittString
  2222                           
  2223                           ;functions.c: 140: eeprom_write(addressDarknessValue,(unsigned char)value);
  2224  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2225  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2226  01E4  085D               	movf	TransmittedDataHandler@value,w
  2227  01E5  00BC               	movwf	??_TransmittedDataHandler
  2228  01E6  083C               	movf	??_TransmittedDataHandler,w
  2229  01E7  00A0               	movwf	eeprom_write@value
  2230  01E8  087C               	movf	_addressDarknessValue,w
  2231  01E9  120A  158A  25E3   	fcall	_eeprom_write
  2232  01EC  0008               	return
  2233  01ED                     __end_of_TransmittedDataHandler:	
  2234                           
  2235                           	psect	text5
  2236  0F0B                     __ptext5:	
  2237 ;; *************** function _strstr *****************
  2238 ;; Defined at:
  2239 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strstr.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  s1              1    wreg     PTR const unsigned char 
  2242 ;;		 -> NULL(0), TransmittedString(30), 
  2243 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2244 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2245 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2246 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2249 ;;		 -> NULL(0), TransmittedString(30), 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      PTR unsigned char 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       1       0       0       0
  2260 ;;      Locals:         0       1       0       0       0
  2261 ;;      Temps:          0       3       0       0       0
  2262 ;;      Totals:         0       5       0       0       0
  2263 ;;Total ram usage:        5 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    3
  2266 ;; This function calls:
  2267 ;;		_strchr
  2268 ;;		_strlen
  2269 ;;		_strncmp
  2270 ;; This function is called by:
  2271 ;;		_TransmittedDataHandler
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _strstr
  2277  0F0B                     _strstr:	
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2281                           ;strstr@s1 stored from wreg
  2282  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0F0D  00B2               	movwf	strstr@s1
  2285  0F0E  2F46               	goto	l1930
  2286  0F0F                     l1922:	
  2287  0F0F  082E               	movf	strstr@s2,w
  2288  0F10  00AF               	movwf	??_strstr
  2289  0F11  082F               	movf	??_strstr,w
  2290  0F12  00A8               	movwf	strncmp@s2
  2291  0F13  082E               	movf	strstr@s2,w
  2292  0F14  120A  158A  25B7  120A  158A  	fcall	_strlen
  2293  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0F1B  0821               	movf	?_strlen+1,w
  2296  0F1C  00AA               	movwf	strncmp@len+1
  2297  0F1D  0820               	movf	?_strlen,w
  2298  0F1E  00A9               	movwf	strncmp@len
  2299  0F1F  0832               	movf	strstr@s1,w
  2300  0F20  120A  158A  26C7  120A  158A  	fcall	_strncmp
  2301  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0F27  0828               	movf	?_strncmp,w
  2304  0F28  0429               	iorwf	?_strncmp+1,w
  2305  0F29  1D03               	btfss	3,2
  2306  0F2A  2F2D               	goto	l1928
  2307  0F2B  0832               	movf	strstr@s1,w
  2308  0F2C  0008               	return
  2309  0F2D                     l1928:	
  2310  0F2D  082E               	movf	strstr@s2,w
  2311  0F2E  0084               	movwf	4
  2312  0F2F  120A  118A  260A  120A  158A  	fcall	stringdir
  2313  0F34  00AF               	movwf	??_strstr
  2314  0F35  01B0               	clrf	??_strstr+1
  2315  0F36  082F               	movf	??_strstr,w
  2316  0F37  00A0               	movwf	strchr@chr
  2317  0F38  0830               	movf	??_strstr+1,w
  2318  0F39  00A1               	movwf	strchr@chr+1
  2319  0F3A  0832               	movf	strstr@s1,w
  2320  0F3B  3E01               	addlw	1
  2321  0F3C  120A  158A  24BA  120A  158A  	fcall	_strchr
  2322  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0F43  00B1               	movwf	??_strstr+2
  2325  0F44  0831               	movf	??_strstr+2,w
  2326  0F45  00B2               	movwf	strstr@s1
  2327  0F46                     l1930:	
  2328  0F46  0832               	movf	strstr@s1,w
  2329  0F47  1903               	btfsc	3,2
  2330  0F48  2F4F               	goto	l1934
  2331  0F49  0832               	movf	strstr@s1,w
  2332  0F4A  0084               	movwf	4
  2333  0F4B  1383               	bcf	3,7	;select IRP bank0
  2334  0F4C  0800               	movf	0,w
  2335  0F4D  1D03               	btfss	3,2
  2336  0F4E  2F0F               	goto	l1922
  2337  0F4F                     l1934:	
  2338  0F4F  3000               	movlw	0
  2339  0F50  0008               	return
  2340  0F51                     __end_of_strstr:	
  2341                           
  2342                           	psect	text6
  2343  0EC7                     __ptext6:	
  2344 ;; *************** function _strncmp *****************
  2345 ;; Defined at:
  2346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strncmp.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  s1              1    wreg     PTR const unsigned char 
  2349 ;;		 -> NULL(0), TransmittedString(30), 
  2350 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2351 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2352 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2353 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2354 ;;  len             2    9[BANK0 ] unsigned int 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2357 ;;		 -> NULL(0), TransmittedString(30), 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  2    8[BANK0 ] int 
  2360 ;; Registers used:
  2361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       3       0       0       0
  2368 ;;      Locals:         0       1       0       0       0
  2369 ;;      Temps:          0       2       0       0       0
  2370 ;;      Totals:         0       6       0       0       0
  2371 ;;Total ram usage:        6 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    2
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_strstr
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           
  2382                           ;psect for function _strncmp
  2383  0EC7                     _strncmp:	
  2384                           
  2385                           ;incstack = 0
  2386                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2387                           ;strncmp@s1 stored from wreg
  2388  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0EC9  00AD               	movwf	strncmp@s1
  2391  0ECA                     l950:	
  2392  0ECA  3001               	movlw	1
  2393  0ECB  02A9               	subwf	strncmp@len,f
  2394  0ECC  3000               	movlw	0
  2395  0ECD  1C03               	skipc
  2396  0ECE  03AA               	decf	strncmp@len+1,f
  2397  0ECF  02AA               	subwf	strncmp@len+1,f
  2398  0ED0  0A29               	incf	strncmp@len,w
  2399  0ED1  1903               	btfsc	3,2
  2400  0ED2  0A2A               	incf	strncmp@len+1,w
  2401  0ED3  1903               	btfsc	3,2
  2402  0ED4  2F08               	goto	l1898
  2403  0ED5  082D               	movf	strncmp@s1,w
  2404  0ED6  0084               	movwf	4
  2405  0ED7  1383               	bcf	3,7	;select IRP bank0
  2406  0ED8  0800               	movf	0,w
  2407  0ED9  1903               	btfsc	3,2
  2408  0EDA  2EE9               	goto	l1892
  2409  0EDB  0828               	movf	strncmp@s2,w
  2410  0EDC  0084               	movwf	4
  2411  0EDD  120A  118A  260A  120A  158A  	fcall	stringdir
  2412  0EE2  00AB               	movwf	??_strncmp
  2413  0EE3  082D               	movf	strncmp@s1,w
  2414  0EE4  0084               	movwf	4
  2415  0EE5  0800               	movf	0,w
  2416  0EE6  062B               	xorwf	??_strncmp,w
  2417  0EE7  1903               	skipnz
  2418  0EE8  2EFF               	goto	l1896
  2419  0EE9                     l1892:	
  2420  0EE9  0828               	movf	strncmp@s2,w
  2421  0EEA  0084               	movwf	4
  2422  0EEB  120A  118A  260A   	fcall	stringdir
  2423  0EEE  00AB               	movwf	??_strncmp
  2424  0EEF  01AC               	clrf	??_strncmp+1
  2425  0EF0  09AB               	comf	??_strncmp,f
  2426  0EF1  09AC               	comf	??_strncmp+1,f
  2427  0EF2  0AAB               	incf	??_strncmp,f
  2428  0EF3  1903               	skipnz
  2429  0EF4  0AAC               	incf	??_strncmp+1,f
  2430  0EF5  082D               	movf	strncmp@s1,w
  2431  0EF6  0084               	movwf	4
  2432  0EF7  0800               	movf	0,w
  2433  0EF8  072B               	addwf	??_strncmp,w
  2434  0EF9  00A8               	movwf	?_strncmp
  2435  0EFA  082C               	movf	??_strncmp+1,w
  2436  0EFB  1803               	skipnc
  2437  0EFC  0A2C               	incf	??_strncmp+1,w
  2438  0EFD  00A9               	movwf	?_strncmp+1
  2439  0EFE  0008               	return
  2440  0EFF                     l1896:	
  2441  0EFF  3001               	movlw	1
  2442  0F00  00AB               	movwf	??_strncmp
  2443  0F01  082B               	movf	??_strncmp,w
  2444  0F02  07AD               	addwf	strncmp@s1,f
  2445  0F03  3001               	movlw	1
  2446  0F04  00AB               	movwf	??_strncmp
  2447  0F05  082B               	movf	??_strncmp,w
  2448  0F06  07A8               	addwf	strncmp@s2,f
  2449  0F07  2ECA               	goto	l950
  2450  0F08                     l1898:	
  2451  0F08  01A8               	clrf	?_strncmp
  2452  0F09  01A9               	clrf	?_strncmp+1
  2453  0F0A  0008               	return
  2454  0F0B                     __end_of_strncmp:	
  2455                           
  2456                           	psect	text7
  2457  0DB7                     __ptext7:	
  2458 ;; *************** function _strlen *****************
  2459 ;; Defined at:
  2460 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  s               1    wreg     PTR const unsigned char 
  2463 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2464 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2465 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2468 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2469 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2470 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2471 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2472 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2473 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2474 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    0[BANK0 ] unsigned int 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       2       0       0       0
  2485 ;;      Locals:         0       2       0       0       0
  2486 ;;      Temps:          0       4       0       0       0
  2487 ;;      Totals:         0       8       0       0       0
  2488 ;;Total ram usage:        8 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_strstr
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _strlen
  2500  0DB7                     _strlen:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2504                           ;strlen@s stored from wreg
  2505  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0DB9  00A6               	movwf	strlen@s
  2508  0DBA  0826               	movf	strlen@s,w
  2509  0DBB  00A2               	movwf	??_strlen
  2510  0DBC  0822               	movf	??_strlen,w
  2511  0DBD  00A7               	movwf	strlen@cp
  2512  0DBE                     l1880:	
  2513  0DBE  0827               	movf	strlen@cp,w
  2514  0DBF  0084               	movwf	4
  2515  0DC0  120A  118A  260A  120A  158A  	fcall	stringdir
  2516  0DC5  3A00               	xorlw	0
  2517  0DC6  1903               	btfsc	3,2
  2518  0DC7  2DCD               	goto	l1882
  2519  0DC8  3001               	movlw	1
  2520  0DC9  00A2               	movwf	??_strlen
  2521  0DCA  0822               	movf	??_strlen,w
  2522  0DCB  07A7               	addwf	strlen@cp,f
  2523  0DCC  2DBE               	goto	l1880
  2524  0DCD                     l1882:	
  2525  0DCD  0826               	movf	strlen@s,w
  2526  0DCE  00A2               	movwf	??_strlen
  2527  0DCF  3080               	movlw	128
  2528  0DD0  00A3               	movwf	??_strlen+1
  2529  0DD1  09A2               	comf	??_strlen,f
  2530  0DD2  09A3               	comf	??_strlen+1,f
  2531  0DD3  0AA2               	incf	??_strlen,f
  2532  0DD4  1903               	skipnz
  2533  0DD5  0AA3               	incf	??_strlen+1,f
  2534  0DD6  0827               	movf	strlen@cp,w
  2535  0DD7  00A4               	movwf	??_strlen+2
  2536  0DD8  3080               	movlw	128
  2537  0DD9  00A5               	movwf	??_strlen+3
  2538  0DDA  0822               	movf	??_strlen,w
  2539  0DDB  0724               	addwf	??_strlen+2,w
  2540  0DDC  00A0               	movwf	?_strlen
  2541  0DDD  0823               	movf	??_strlen+1,w
  2542  0DDE  1803               	skipnc
  2543  0DDF  0A23               	incf	??_strlen+1,w
  2544  0DE0  0725               	addwf	??_strlen+3,w
  2545  0DE1  00A1               	movwf	?_strlen+1
  2546  0DE2  0008               	return
  2547  0DE3                     __end_of_strlen:	
  2548                           
  2549                           	psect	text8
  2550  0CBA                     __ptext8:	
  2551 ;; *************** function _strchr *****************
  2552 ;; Defined at:
  2553 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strchr.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  ptr             1    wreg     PTR const unsigned char 
  2556 ;;		 -> NULL(0), TransmittedString(30), 
  2557 ;;  chr             2    0[BANK0 ] int 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2560 ;;		 -> NULL(0), TransmittedString(30), 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      PTR unsigned char 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       2       0       0       0
  2571 ;;      Locals:         0       1       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         0       3       0       0       0
  2574 ;;Total ram usage:        3 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    2
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_strstr
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function _strchr
  2586  0CBA                     _strchr:	
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2590                           ;strchr@ptr stored from wreg
  2591  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0CBC  00A2               	movwf	strchr@ptr
  2594  0CBD                     l938:	
  2595  0CBD  0822               	movf	strchr@ptr,w
  2596  0CBE  0084               	movwf	4
  2597  0CBF  1383               	bcf	3,7	;select IRP bank0
  2598  0CC0  0800               	movf	0,w
  2599  0CC1  0620               	xorwf	strchr@chr,w
  2600  0CC2  1D03               	skipz
  2601  0CC3  2CC6               	goto	l1908
  2602  0CC4  0822               	movf	strchr@ptr,w
  2603  0CC5  0008               	return
  2604  0CC6                     l1908:	
  2605  0CC6  0822               	movf	strchr@ptr,w
  2606  0CC7  0084               	movwf	4
  2607  0CC8  3001               	movlw	1
  2608  0CC9  07A2               	addwf	strchr@ptr,f
  2609  0CCA  0800               	movf	0,w
  2610  0CCB  1D03               	btfss	3,2
  2611  0CCC  2CBD               	goto	l938
  2612  0CCD  3000               	movlw	0
  2613  0CCE  0008               	return
  2614  0CCF                     __end_of_strchr:	
  2615                           
  2616                           	psect	text9
  2617  0DE3                     __ptext9:	
  2618 ;; *************** function _eeprom_write *****************
  2619 ;; Defined at:
  2620 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  addr            1    wreg     unsigned char 
  2623 ;;  value           1    0[BANK0 ] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  addr            1    2[BANK0 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       1       0       0       0
  2636 ;;      Locals:         0       1       0       0       0
  2637 ;;      Temps:          0       1       0       0       0
  2638 ;;      Totals:         0       3       0       0       0
  2639 ;;Total ram usage:        3 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    2
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_TransmittedDataHandler
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _eeprom_write
  2651  0DE3                     _eeprom_write:	
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2655                           ;eeprom_write@addr stored from wreg
  2656  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0DE5  00A2               	movwf	eeprom_write@addr
  2659  0DE6                     l456:	
  2660  0DE6  1683               	bsf	3,5	;RP0=1, select bank3
  2661  0DE7  1703               	bsf	3,6	;RP1=1, select bank3
  2662  0DE8  188C               	btfsc	12,1	;volsfr
  2663  0DE9  2DE6               	goto	l456
  2664  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2665  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  2666  0DEC  0822               	movf	eeprom_write@addr,w
  2667  0DED  1283               	bcf	3,5	;RP0=0, select bank2
  2668  0DEE  1703               	bsf	3,6	;RP1=1, select bank2
  2669  0DEF  008D               	movwf	13	;volatile
  2670  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  2672  0DF2  0820               	movf	eeprom_write@value,w
  2673  0DF3  1283               	bcf	3,5	;RP0=0, select bank2
  2674  0DF4  1703               	bsf	3,6	;RP1=1, select bank2
  2675  0DF5  008C               	movwf	12	;volatile
  2676  0DF6  303F               	movlw	63
  2677  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0DF9  00A1               	movwf	??_eeprom_write
  2680  0DFA  0821               	movf	??_eeprom_write,w
  2681  0DFB  1683               	bsf	3,5	;RP0=1, select bank3
  2682  0DFC  1703               	bsf	3,6	;RP1=1, select bank3
  2683  0DFD  058C               	andwf	12,f	;volsfr
  2684  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0E00  1003               	bcf	3,0	;volatile
  2687  0E01  1B8B               	btfsc	11,7	;volatile
  2688  0E02  1403               	bsf	3,0	;volatile
  2689  0E03  138B               	bcf	11,7	;volatile
  2690  0E04  1683               	bsf	3,5	;RP0=1, select bank3
  2691  0E05  1703               	bsf	3,6	;RP1=1, select bank3
  2692  0E06  150C               	bsf	12,2	;volsfr
  2693  0E07  3055               	movlw	85
  2694  0E08  008D               	movwf	13	;volsfr
  2695  0E09  30AA               	movlw	170
  2696  0E0A  008D               	movwf	13	;volsfr
  2697  0E0B  148C               	bsf	12,1	;volsfr
  2698  0E0C  110C               	bcf	12,2	;volsfr
  2699  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0E0F  1C03               	btfss	3,0	;volatile
  2702  0E10  0008               	return
  2703  0E11  178B               	bsf	11,7	;volatile
  2704  0E12  0008               	return
  2705  0E13                     __end_of_eeprom_write:	
  2706                           
  2707                           	psect	text10
  2708  071C                     __ptext10:	
  2709 ;; *************** function _atoi *****************
  2710 ;; Defined at:
  2711 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  s               1    wreg     PTR const unsigned char 
  2714 ;;		 -> TransmittedString(30), 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2717 ;;		 -> TransmittedString(30), 
  2718 ;;  a               2   11[BANK0 ] int 
  2719 ;;  sign            1   10[BANK0 ] unsigned char 
  2720 ;; Return value:  Size  Location     Type
  2721 ;;                  2    6[BANK0 ] int 
  2722 ;; Registers used:
  2723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2724 ;; Tracked objects:
  2725 ;;		On entry : 0/0
  2726 ;;		On exit  : 0/0
  2727 ;;		Unchanged: 0/0
  2728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2729 ;;      Params:         0       2       0       0       0
  2730 ;;      Locals:         0       4       0       0       0
  2731 ;;      Temps:          0       2       0       0       0
  2732 ;;      Totals:         0       8       0       0       0
  2733 ;;Total ram usage:        8 bytes
  2734 ;; Hardware stack levels used:    1
  2735 ;; Hardware stack levels required when called:    3
  2736 ;; This function calls:
  2737 ;;		___wmul
  2738 ;;		_isdigit
  2739 ;; This function is called by:
  2740 ;;		_TransmittedDataHandler
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _atoi
  2746  071C                     _atoi:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2750                           ;atoi@s stored from wreg
  2751  071C  1283               	bcf	3,5	;RP0=0, select bank0
  2752  071D  1303               	bcf	3,6	;RP1=0, select bank0
  2753  071E  00AD               	movwf	atoi@s
  2754  071F                     l2002:	
  2755  071F  082D               	movf	atoi@s,w
  2756  0720  0084               	movwf	4
  2757  0721  3020               	movlw	32
  2758  0722  1383               	bcf	3,7	;select IRP bank0
  2759  0723  0600               	xorwf	0,w
  2760  0724  1D03               	btfss	3,2
  2761  0725  2F2B               	goto	l2004
  2762  0726                     l2000:	
  2763  0726  3001               	movlw	1
  2764  0727  00A8               	movwf	??_atoi
  2765  0728  0828               	movf	??_atoi,w
  2766  0729  07AD               	addwf	atoi@s,f
  2767  072A  2F1F               	goto	l2002
  2768  072B                     l2004:	
  2769  072B  082D               	movf	atoi@s,w
  2770  072C  0084               	movwf	4
  2771  072D  3009               	movlw	9
  2772  072E  0600               	xorwf	0,w
  2773  072F  1903               	btfsc	3,2
  2774  0730  2F26               	goto	l2000
  2775  0731  01AB               	clrf	atoi@a
  2776  0732  01AC               	clrf	atoi@a+1
  2777  0733  01AA               	clrf	atoi@sign
  2778  0734  082D               	movf	atoi@s,w
  2779  0735  0084               	movwf	4
  2780  0736  302D               	movlw	45
  2781  0737  0600               	xorwf	0,w
  2782  0738  1D03               	btfss	3,2
  2783  0739  2F3F               	goto	l2012
  2784  073A  3001               	movlw	1
  2785  073B  00A8               	movwf	??_atoi
  2786  073C  0828               	movf	??_atoi,w
  2787  073D  07AA               	addwf	atoi@sign,f
  2788  073E  2F45               	goto	l2018
  2789  073F                     l2012:	
  2790  073F  082D               	movf	atoi@s,w
  2791  0740  0084               	movwf	4
  2792  0741  302B               	movlw	43
  2793  0742  0600               	xorwf	0,w
  2794  0743  1D03               	btfss	3,2
  2795  0744  2F49               	goto	l2020
  2796  0745                     l2018:	
  2797  0745  3001               	movlw	1
  2798  0746  00A8               	movwf	??_atoi
  2799  0747  0828               	movf	??_atoi,w
  2800  0748  07AD               	addwf	atoi@s,f
  2801  0749                     l2020:	
  2802  0749  082D               	movf	atoi@s,w
  2803  074A  0084               	movwf	4
  2804  074B  0800               	movf	0,w
  2805  074C  120A  158A  2476  120A  118A  	fcall	_isdigit
  2806  0751  1C03               	btfss	3,0
  2807  0752  2F77               	goto	l2022
  2808  0753  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0754  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0755  082C               	movf	atoi@a+1,w
  2811  0756  00A1               	movwf	___wmul@multiplier+1
  2812  0757  082B               	movf	atoi@a,w
  2813  0758  00A0               	movwf	___wmul@multiplier
  2814  0759  300A               	movlw	10
  2815  075A  00A2               	movwf	___wmul@multiplicand
  2816  075B  3000               	movlw	0
  2817  075C  00A3               	movwf	___wmul@multiplicand+1
  2818  075D  120A  158A  2542  120A  118A  	fcall	___wmul
  2819  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0764  082D               	movf	atoi@s,w
  2822  0765  0084               	movwf	4
  2823  0766  1383               	bcf	3,7	;select IRP bank0
  2824  0767  0800               	movf	0,w
  2825  0768  0720               	addwf	?___wmul,w
  2826  0769  00A8               	movwf	??_atoi
  2827  076A  0821               	movf	?___wmul+1,w
  2828  076B  1803               	skipnc
  2829  076C  0A21               	incf	?___wmul+1,w
  2830  076D  00A9               	movwf	??_atoi+1
  2831  076E  0828               	movf	??_atoi,w
  2832  076F  3ED0               	addlw	208
  2833  0770  00AB               	movwf	atoi@a
  2834  0771  0829               	movf	??_atoi+1,w
  2835  0772  1803               	skipnc
  2836  0773  3E01               	addlw	1
  2837  0774  3EFF               	addlw	255
  2838  0775  00AC               	movwf	atoi@a+1
  2839  0776  2F45               	goto	l2018
  2840  0777                     l2022:	
  2841  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0779  082A               	movf	atoi@sign,w
  2844  077A  1903               	btfsc	3,2
  2845  077B  2F88               	goto	l2028
  2846  077C  092B               	comf	atoi@a,w
  2847  077D  00A8               	movwf	??_atoi
  2848  077E  092C               	comf	atoi@a+1,w
  2849  077F  00A9               	movwf	??_atoi+1
  2850  0780  0AA8               	incf	??_atoi,f
  2851  0781  1903               	skipnz
  2852  0782  0AA9               	incf	??_atoi+1,f
  2853  0783  0828               	movf	??_atoi,w
  2854  0784  00A6               	movwf	?_atoi
  2855  0785  0829               	movf	??_atoi+1,w
  2856  0786  00A7               	movwf	?_atoi+1
  2857  0787  0008               	return
  2858  0788                     l2028:	
  2859  0788  082C               	movf	atoi@a+1,w
  2860  0789  00A7               	movwf	?_atoi+1
  2861  078A  082B               	movf	atoi@a,w
  2862  078B  00A6               	movwf	?_atoi
  2863  078C  0008               	return
  2864  078D                     __end_of_atoi:	
  2865                           
  2866                           	psect	text11
  2867  0C76                     __ptext11:	
  2868 ;; *************** function _isdigit *****************
  2869 ;; Defined at:
  2870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  c               1    wreg     unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  c               1    1[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       0       0
  2885 ;;      Locals:         0       2       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       2       0       0       0
  2888 ;;Total ram usage:        2 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_atoi
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function _isdigit
  2900  0C76                     _isdigit:	
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2904                           ;isdigit@c stored from wreg
  2905  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  2906  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  2907  0C78  00A1               	movwf	isdigit@c
  2908  0C79  01A0               	clrf	_isdigit$1118
  2909  0C7A  303A               	movlw	58
  2910  0C7B  0221               	subwf	isdigit@c,w
  2911  0C7C  1803               	skipnc
  2912  0C7D  2C84               	goto	l1872
  2913  0C7E  3030               	movlw	48
  2914  0C7F  0221               	subwf	isdigit@c,w
  2915  0C80  1C03               	skipc
  2916  0C81  2C84               	goto	l1872
  2917  0C82  01A0               	clrf	_isdigit$1118
  2918  0C83  0AA0               	incf	_isdigit$1118,f
  2919  0C84                     l1872:	
  2920  0C84  0C20               	rrf	_isdigit$1118,w
  2921  0C85  0008               	return
  2922  0C86                     __end_of_isdigit:	
  2923                           
  2924                           	psect	text12
  2925  0D42                     __ptext12:	
  2926 ;; *************** function ___wmul *****************
  2927 ;; Defined at:
  2928 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2931 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  product         2    4[BANK0 ] unsigned int 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    0[BANK0 ] unsigned int 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       4       0       0       0
  2944 ;;      Locals:         0       2       0       0       0
  2945 ;;      Temps:          0       0       0       0       0
  2946 ;;      Totals:         0       6       0       0       0
  2947 ;;Total ram usage:        6 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_atoi
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function ___wmul
  2959  0D42                     ___wmul:	
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2963  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0D44  01A4               	clrf	___wmul@product
  2966  0D45  01A5               	clrf	___wmul@product+1
  2967  0D46                     l1852:	
  2968  0D46  1C20               	btfss	___wmul@multiplier,0
  2969  0D47  2D4E               	goto	l546
  2970  0D48  0822               	movf	___wmul@multiplicand,w
  2971  0D49  07A4               	addwf	___wmul@product,f
  2972  0D4A  1803               	skipnc
  2973  0D4B  0AA5               	incf	___wmul@product+1,f
  2974  0D4C  0823               	movf	___wmul@multiplicand+1,w
  2975  0D4D  07A5               	addwf	___wmul@product+1,f
  2976  0D4E                     l546:	
  2977  0D4E  3001               	movlw	1
  2978  0D4F                     u1155:	
  2979  0D4F  1003               	clrc
  2980  0D50  0DA2               	rlf	___wmul@multiplicand,f
  2981  0D51  0DA3               	rlf	___wmul@multiplicand+1,f
  2982  0D52  3EFF               	addlw	-1
  2983  0D53  1D03               	skipz
  2984  0D54  2D4F               	goto	u1155
  2985  0D55  3001               	movlw	1
  2986  0D56                     u1165:	
  2987  0D56  1003               	clrc
  2988  0D57  0CA1               	rrf	___wmul@multiplier+1,f
  2989  0D58  0CA0               	rrf	___wmul@multiplier,f
  2990  0D59  3EFF               	addlw	-1
  2991  0D5A  1D03               	skipz
  2992  0D5B  2D56               	goto	u1165
  2993  0D5C  0820               	movf	___wmul@multiplier,w
  2994  0D5D  0421               	iorwf	___wmul@multiplier+1,w
  2995  0D5E  1D03               	btfss	3,2
  2996  0D5F  2D46               	goto	l1852
  2997  0D60  0825               	movf	___wmul@product+1,w
  2998  0D61  00A1               	movwf	?___wmul+1
  2999  0D62  0824               	movf	___wmul@product,w
  3000  0D63  00A0               	movwf	?___wmul
  3001  0D64  0008               	return
  3002  0D65                     __end_of___wmul:	
  3003                           
  3004                           	psect	text13
  3005  0C38                     __ptext13:	
  3006 ;; *************** function _OperationMode *****************
  3007 ;; Defined at:
  3008 ;;		line 878 in file "functions.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      unsigned char 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       1       0       0       0
  3024 ;;      Temps:          0       1       0       0       0
  3025 ;;      Totals:         0       2       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    2
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;;		_TransmittedDataHandler
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           
  3038                           ;psect for function _OperationMode
  3039  0C38                     _OperationMode:	
  3040                           
  3041                           ;functions.c: 880: unsigned char bracketStatus;
  3042                           ;functions.c: 881: bracketStatus = ((~PORTB) & 0b00000111) ;
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _OperationMode: [wreg+status,2]
  3046  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0C3A  0906               	comf	6,w	;volatile
  3049  0C3B  3907               	andlw	7
  3050  0C3C  00A0               	movwf	??_OperationMode
  3051  0C3D  0820               	movf	??_OperationMode,w
  3052  0C3E  00A1               	movwf	OperationMode@bracketStatus
  3053                           
  3054                           ;functions.c: 883: return bracketStatus;
  3055  0C3F  0821               	movf	OperationMode@bracketStatus,w
  3056  0C40  0008               	return
  3057  0C41                     __end_of_OperationMode:	
  3058                           
  3059                           	psect	text14
  3060  0C68                     __ptext14:	
  3061 ;; *************** function _ReadFIFO *****************
  3062 ;; Defined at:
  3063 ;;		line 695 in file "functions.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  value           1    4[BANK0 ] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      unsigned char 
  3070 ;; Registers used:
  3071 ;;		wreg, status,2, status,0, pclath, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       0       0       0
  3078 ;;      Locals:         0       1       0       0       0
  3079 ;;      Temps:          0       1       0       0       0
  3080 ;;      Totals:         0       2       0       0       0
  3081 ;;Total ram usage:        2 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    4
  3084 ;; This function calls:
  3085 ;;		_ReadSPI
  3086 ;; This function is called by:
  3087 ;;		_TransiverReadFIFO
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _ReadFIFO
  3093  0C68                     _ReadFIFO:	
  3094                           
  3095                           ;functions.c: 697: BYTE value;
  3096                           ;functions.c: 698: PORTAbits.RA5 = 0;
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  3100  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0C6A  1285               	bcf	5,5	;volatile
  3103                           
  3104                           ;functions.c: 699: value = ReadSPI();
  3105  0C6B  120A  158A  241F   	fcall	_ReadSPI
  3106  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0C70  00A3               	movwf	??_ReadFIFO
  3109  0C71  0823               	movf	??_ReadFIFO,w
  3110  0C72  00A4               	movwf	ReadFIFO@value
  3111                           
  3112                           ;functions.c: 700: PORTAbits.RA5 = 1;
  3113  0C73  1685               	bsf	5,5	;volatile
  3114                           
  3115                           ;functions.c: 701: return value;
  3116  0C74  0824               	movf	ReadFIFO@value,w
  3117  0C75  0008               	return
  3118  0C76                     __end_of_ReadFIFO:	
  3119                           
  3120                           	psect	text15
  3121  02ED                     __ptext15:	
  3122 ;; *************** function _TransiverInit *****************
  3123 ;; Defined at:
  3124 ;;		line 460 in file "functions.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       1       0       0       0
  3141 ;;      Totals:         0       1       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    7
  3145 ;; This function calls:
  3146 ;;		_Blink
  3147 ;;		_FindChannel
  3148 ;;		_RegisterRead
  3149 ;;		_RegisterSet
  3150 ;;		_SetRFMode
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _TransiverInit
  3158  02ED                     _TransiverInit:	
  3159                           
  3160                           ;functions.c: 463: RegisterSet(0x00, 0x30);
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3164  02ED  3030               	movlw	48
  3165  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3166  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3167  02F0  00B5               	movwf	??_TransiverInit
  3168  02F1  0835               	movf	??_TransiverInit,w
  3169  02F2  00A7               	movwf	RegisterSet@value
  3170  02F3  3000               	movlw	0
  3171  02F4  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3172                           
  3173                           ;functions.c: 464: RegisterSet(0x01,(0xA8));
  3174  02F9  30A8               	movlw	168
  3175  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3176  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3177  02FC  00B5               	movwf	??_TransiverInit
  3178  02FD  0835               	movf	??_TransiverInit,w
  3179  02FE  00A7               	movwf	RegisterSet@value
  3180  02FF  3001               	movlw	1
  3181  0300  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3182                           
  3183                           ;functions.c: 465: RegisterSet(0x02, 0x09);
  3184  0305  3009               	movlw	9
  3185  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0308  00B5               	movwf	??_TransiverInit
  3188  0309  0835               	movf	??_TransiverInit,w
  3189  030A  00A7               	movwf	RegisterSet@value
  3190  030B  3002               	movlw	2
  3191  030C  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3192                           
  3193                           ;functions.c: 466: RegisterSet(0x03, 0x07);
  3194  0311  3007               	movlw	7
  3195  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0314  00B5               	movwf	??_TransiverInit
  3198  0315  0835               	movf	??_TransiverInit,w
  3199  0316  00A7               	movwf	RegisterSet@value
  3200  0317  3003               	movlw	3
  3201  0318  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3202                           
  3203                           ;functions.c: 467: RegisterSet(0x05,(0x0A));
  3204  031D  300A               	movlw	10
  3205  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3206  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0320  00B5               	movwf	??_TransiverInit
  3208  0321  0835               	movf	??_TransiverInit,w
  3209  0322  00A7               	movwf	RegisterSet@value
  3210  0323  3005               	movlw	5
  3211  0324  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3212                           
  3213                           ;functions.c: 468: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3214  0329  30B9               	movlw	185
  3215  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3216  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3217  032C  00B5               	movwf	??_TransiverInit
  3218  032D  0835               	movf	??_TransiverInit,w
  3219  032E  00A7               	movwf	RegisterSet@value
  3220  032F  300D               	movlw	13
  3221  0330  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3222                           
  3223                           ;functions.c: 469: RegisterSet(0x0E,(0x01|0x10|0x01));
  3224  0335  3011               	movlw	17
  3225  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0338  00B5               	movwf	??_TransiverInit
  3228  0339  0835               	movf	??_TransiverInit,w
  3229  033A  00A7               	movwf	RegisterSet@value
  3230  033B  300E               	movlw	14
  3231  033C  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3232                           
  3233                           ;functions.c: 470: RegisterSet(0x10, 0xA3);
  3234  0341  30A3               	movlw	163
  3235  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0344  00B5               	movwf	??_TransiverInit
  3238  0345  0835               	movf	??_TransiverInit,w
  3239  0346  00A7               	movwf	RegisterSet@value
  3240  0347  3010               	movlw	16
  3241  0348  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3242                           
  3243                           ;functions.c: 471: RegisterSet(0x12,(0x18|0x20|0x06));
  3244  034D  303E               	movlw	62
  3245  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3246  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0350  00B5               	movwf	??_TransiverInit
  3248  0351  0835               	movf	??_TransiverInit,w
  3249  0352  00A7               	movwf	RegisterSet@value
  3250  0353  3012               	movlw	18
  3251  0354  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3252                           
  3253                           ;functions.c: 472: RegisterSet(0x16,('S'));
  3254  0359  3053               	movlw	83
  3255  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3256  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3257  035C  00B5               	movwf	??_TransiverInit
  3258  035D  0835               	movf	??_TransiverInit,w
  3259  035E  00A7               	movwf	RegisterSet@value
  3260  035F  3016               	movlw	22
  3261  0360  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3262                           
  3263                           ;functions.c: 473: RegisterSet(0x17,('Y'));
  3264  0365  3059               	movlw	89
  3265  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3266  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0368  00B5               	movwf	??_TransiverInit
  3268  0369  0835               	movf	??_TransiverInit,w
  3269  036A  00A7               	movwf	RegisterSet@value
  3270  036B  3017               	movlw	23
  3271  036C  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3272                           
  3273                           ;functions.c: 474: RegisterSet(0x18,('N'));
  3274  0371  304E               	movlw	78
  3275  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0374  00B5               	movwf	??_TransiverInit
  3278  0375  0835               	movf	??_TransiverInit,w
  3279  0376  00A7               	movwf	RegisterSet@value
  3280  0377  3018               	movlw	24
  3281  0378  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3282                           
  3283                           ;functions.c: 475: RegisterSet(0x19,('C'));
  3284  037D  3043               	movlw	67
  3285  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3286  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3287  0380  00B5               	movwf	??_TransiverInit
  3288  0381  0835               	movf	??_TransiverInit,w
  3289  0382  00A7               	movwf	RegisterSet@value
  3290  0383  3019               	movlw	25
  3291  0384  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3292                           
  3293                           ;functions.c: 476: RegisterSet(0x1A, 0x72);
  3294  0389  3072               	movlw	114
  3295  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3296  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3297  038C  00B5               	movwf	??_TransiverInit
  3298  038D  0835               	movf	??_TransiverInit,w
  3299  038E  00A7               	movwf	RegisterSet@value
  3300  038F  301A               	movlw	26
  3301  0390  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3302                           
  3303                           ;functions.c: 477: RegisterSet(0x1B, 0x3C);
  3304  0395  303C               	movlw	60
  3305  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0398  00B5               	movwf	??_TransiverInit
  3308  0399  0835               	movf	??_TransiverInit,w
  3309  039A  00A7               	movwf	RegisterSet@value
  3310  039B  301B               	movlw	27
  3311  039C  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3312                           
  3313                           ;functions.c: 478: RegisterSet(0x1F, 0x80);
  3314  03A1  3080               	movlw	128
  3315  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3316  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3317  03A4  00B5               	movwf	??_TransiverInit
  3318  03A5  0835               	movf	??_TransiverInit,w
  3319  03A6  00A7               	movwf	RegisterSet@value
  3320  03A7  301F               	movlw	31
  3321  03A8  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3322                           
  3323                           ;functions.c: 479: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3324  03AD  3000               	movlw	0
  3325  03AE  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  3326  03B3  3801               	iorlw	1
  3327  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3328  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3329  03B6  00B5               	movwf	??_TransiverInit
  3330  03B7  0835               	movf	??_TransiverInit,w
  3331  03B8  00A7               	movwf	RegisterSet@value
  3332  03B9  3000               	movlw	0
  3333  03BA  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3334                           
  3335                           ;functions.c: 481: if(FindChannel() == 1)
  3336  03BF  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3337  03C4  3A01               	xorlw	1
  3338  03C5  1D03               	skipz
  3339  03C6  2BD2               	goto	l2264
  3340                           
  3341                           ;functions.c: 482: Blink(1);
  3342  03C7  3001               	movlw	1
  3343  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3344  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3345  03CA  00A6               	movwf	Blink@n
  3346  03CB  3000               	movlw	0
  3347  03CC  00A7               	movwf	Blink@n+1
  3348  03CD  120A  158A  2613  120A  118A  	fcall	_Blink
  3349  03D2                     l2264:	
  3350                           
  3351                           ;functions.c: 483: SetRFMode(0x00);
  3352  03D2  3000               	movlw	0
  3353  03D3  120A  118A  278D   	fcall	_SetRFMode
  3354  03D6  0008               	return
  3355  03D7                     __end_of_TransiverInit:	
  3356                           
  3357                           	psect	text16
  3358  0E13                     __ptext16:	
  3359 ;; *************** function _Blink *****************
  3360 ;; Defined at:
  3361 ;;		line 608 in file "functions.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  n               2    6[BANK0 ] int 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  i               2    9[BANK0 ] int 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3375 ;;      Params:         0       2       0       0       0
  3376 ;;      Locals:         0       2       0       0       0
  3377 ;;      Temps:          0       1       0       0       0
  3378 ;;      Totals:         0       5       0       0       0
  3379 ;;Total ram usage:        5 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    3
  3382 ;; This function calls:
  3383 ;;		_DelayDs
  3384 ;; This function is called by:
  3385 ;;		_TransiverInit
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _Blink
  3391  0E13                     _Blink:	
  3392                           
  3393                           ;functions.c: 610: for(int i = 1;i<=n;i++)
  3394                           
  3395                           ;incstack = 0
  3396                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3397  0E13  3001               	movlw	1
  3398  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0E16  00A9               	movwf	Blink@i
  3401  0E17  3000               	movlw	0
  3402  0E18  00AA               	movwf	Blink@i+1
  3403  0E19                     l2184:	
  3404  0E19  0827               	movf	Blink@n+1,w
  3405  0E1A  3A80               	xorlw	128
  3406  0E1B  00A8               	movwf	??_Blink
  3407  0E1C  082A               	movf	Blink@i+1,w
  3408  0E1D  3A80               	xorlw	128
  3409  0E1E  0228               	subwf	??_Blink,w
  3410  0E1F  1D03               	skipz
  3411  0E20  2E23               	goto	u1715
  3412  0E21  0829               	movf	Blink@i,w
  3413  0E22  0226               	subwf	Blink@n,w
  3414  0E23                     u1715:	
  3415  0E23  1C03               	btfss	3,0
  3416  0E24  0008               	return
  3417                           
  3418                           ;functions.c: 611: {
  3419                           ;functions.c: 612: PORTCbits.RC1 = 1;
  3420  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0E27  1487               	bsf	7,1	;volatile
  3423                           
  3424                           ;functions.c: 613: DelayDs(2);
  3425  0E28  3002               	movlw	2
  3426  0E29  00A0               	movwf	DelayDs@cnt
  3427  0E2A  3000               	movlw	0
  3428  0E2B  00A1               	movwf	DelayDs@cnt+1
  3429  0E2C  120A  158A  251F  120A  158A  	fcall	_DelayDs
  3430                           
  3431                           ;functions.c: 614: PORTCbits.RC1 = 0;
  3432  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0E33  1087               	bcf	7,1	;volatile
  3435                           
  3436                           ;functions.c: 615: DelayDs(6);
  3437  0E34  3006               	movlw	6
  3438  0E35  00A0               	movwf	DelayDs@cnt
  3439  0E36  3000               	movlw	0
  3440  0E37  00A1               	movwf	DelayDs@cnt+1
  3441  0E38  120A  158A  251F  120A  158A  	fcall	_DelayDs
  3442  0E3D  3001               	movlw	1
  3443  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0E40  07A9               	addwf	Blink@i,f
  3446  0E41  1803               	skipnc
  3447  0E42  0AAA               	incf	Blink@i+1,f
  3448  0E43  3000               	movlw	0
  3449  0E44  07AA               	addwf	Blink@i+1,f
  3450  0E45  2E19               	goto	l2184
  3451  0E46                     __end_of_Blink:	
  3452                           
  3453                           	psect	text17
  3454  0C97                     __ptext17:	
  3455 ;; *************** function _Mode_5 *****************
  3456 ;; Defined at:
  3457 ;;		line 269 in file "functions.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    8
  3478 ;; This function calls:
  3479 ;;		_LightWithSensController
  3480 ;;		_TransmittString
  3481 ;; This function is called by:
  3482 ;;		_main
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _Mode_5
  3488  0C97                     _Mode_5:	
  3489                           
  3490                           ;functions.c: 271: if(!PORTBbits.RB5)
  3491                           
  3492                           ;incstack = 0
  3493 ;; hardware stack exceeded
  3494                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3495  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0C99  1A86               	btfsc	6,5	;volatile
  3498  0C9A  2CA4               	goto	l2296
  3499                           
  3500                           ;functions.c: 272: {
  3501                           ;functions.c: 273: TransmittString("N2BLINK");
  3502  0C9B  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3503  0C9C  00B5               	movwf	TransmittString@dataString
  3504  0C9D  3080               	movlw	128
  3505  0C9E  00B6               	movwf	TransmittString@dataString+1
  3506  0C9F  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3507  0CA4                     l2296:	
  3508                           
  3509                           ;functions.c: 274: }
  3510                           ;functions.c: 275: LightWithSensController();
  3511  0CA4  120A  158A  2646   	fcall	_LightWithSensController
  3512  0CA7  0008               	return
  3513  0CA8                     __end_of_Mode_5:	
  3514                           
  3515                           	psect	text18
  3516  0C86                     __ptext18:	
  3517 ;; *************** function _Mode_4 *****************
  3518 ;; Defined at:
  3519 ;;		line 257 in file "functions.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3533 ;;      Params:         0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    8
  3540 ;; This function calls:
  3541 ;;		_LightWithSensController
  3542 ;;		_TransmittString
  3543 ;; This function is called by:
  3544 ;;		_main
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function _Mode_4
  3550  0C86                     _Mode_4:	
  3551                           
  3552                           ;functions.c: 259: if(!PORTBbits.RB5)
  3553                           
  3554                           ;incstack = 0
  3555 ;; hardware stack exceeded
  3556                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3557  0C86  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0C87  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0C88  1A86               	btfsc	6,5	;volatile
  3560  0C89  2C93               	goto	l2290
  3561                           
  3562                           ;functions.c: 260: {
  3563                           ;functions.c: 261: TransmittString("N1BLINK");
  3564  0C8A  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3565  0C8B  00B5               	movwf	TransmittString@dataString
  3566  0C8C  3080               	movlw	128
  3567  0C8D  00B6               	movwf	TransmittString@dataString+1
  3568  0C8E  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3569  0C93                     l2290:	
  3570                           
  3571                           ;functions.c: 262: }
  3572                           ;functions.c: 263: LightWithSensController();
  3573  0C93  120A  158A  2646   	fcall	_LightWithSensController
  3574  0C96  0008               	return
  3575  0C97                     __end_of_Mode_4:	
  3576                           
  3577                           	psect	text19
  3578  03D7                     __ptext19:	
  3579 ;; *************** function _TransmittString *****************
  3580 ;; Defined at:
  3581 ;;		line 163 in file "functions.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  dataString      2   21[BANK0 ] PTR const unsigned char 
  3584 ;;		 -> STR_17(8), STR_16(8), TransmittedDataHandler@slask_746(8), TransmittedDataHandler@slask_743(8), 
  3585 ;;		 -> STR_12(4), STR_11(4), STR_9(14), STR_8(14), 
  3586 ;;		 -> TransmittedDataHandler@slask_734(8), TransmittedDataHandler@slask(8), 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  i               2   26[BANK0 ] int 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       2       0       0       0
  3599 ;;      Locals:         0       2       0       0       0
  3600 ;;      Temps:          0       3       0       0       0
  3601 ;;      Totals:         0       7       0       0       0
  3602 ;;Total ram usage:        7 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    7
  3605 ;; This function calls:
  3606 ;;		_FindChannel
  3607 ;;		_RegisterRead
  3608 ;;		_RegisterSet
  3609 ;;		_SetRFMode
  3610 ;;		_WriteFIFO
  3611 ;;		_timerFunction
  3612 ;; This function is called by:
  3613 ;;		_TransmittedDataHandler
  3614 ;;		_Mode_4
  3615 ;;		_Mode_5
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _TransmittString
  3621  03D7                     _TransmittString:	
  3622                           
  3623                           ;functions.c: 165: timerFunction(4, 5);
  3624                           
  3625                           ;incstack = 0
  3626 ;; hardware stack exceeded
  3627                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3628  03D7  3004               	movlw	4
  3629  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3630  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3631  03DA  00A0               	movwf	timerFunction@intTimerNumber
  3632  03DB  3000               	movlw	0
  3633  03DC  00A1               	movwf	timerFunction@intTimerNumber+1
  3634  03DD  3005               	movlw	5
  3635  03DE  00A2               	movwf	timerFunction@intSetSeconds
  3636  03DF  3000               	movlw	0
  3637  03E0  00A3               	movwf	timerFunction@intSetSeconds+1
  3638  03E1  120A  158A  24A8  120A  118A  	fcall	_timerFunction
  3639                           
  3640                           ;functions.c: 167: int i = 0;
  3641  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3642  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3643  03E8  01BA               	clrf	TransmittString@i
  3644  03E9  01BB               	clrf	TransmittString@i+1
  3645                           
  3646                           ;functions.c: 170: SetRFMode(0x20);
  3647  03EA  3020               	movlw	32
  3648  03EB  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  3649                           
  3650                           ;functions.c: 171: _delay((unsigned long)((10)*(4000000/4000.0)));
  3651  03F0  300D               	movlw	13
  3652  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3653  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3654  03F3  00B8               	movwf	??_TransmittString+1
  3655  03F4  30FB               	movlw	251
  3656  03F5  00B7               	movwf	??_TransmittString
  3657  03F6                     u2157:	
  3658  03F6  0BB7               	decfsz	??_TransmittString,f
  3659  03F7  2BF6               	goto	u2157
  3660  03F8  0BB8               	decfsz	??_TransmittString+1,f
  3661  03F9  2BF6               	goto	u2157
  3662                           
  3663                           ;functions.c: 172: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3664  03FA  300E               	movlw	14
  3665  03FB  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  3666  0400  3802               	iorlw	2
  3667  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0403  00B7               	movwf	??_TransmittString
  3670  0404  0837               	movf	??_TransmittString,w
  3671  0405  00A7               	movwf	RegisterSet@value
  3672  0406  300E               	movlw	14
  3673  0407  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  3674                           
  3675                           ;functions.c: 173: SetRFMode(0x40);
  3676  040C  3040               	movlw	64
  3677  040D  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  3678  0412                     l1954:	
  3679                           ;functions.c: 174: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3680                           
  3681  0412  300E               	movlw	14
  3682  0413  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  3683  0418  3902               	andlw	2
  3684  0419  1D03               	btfss	3,2
  3685  041A  2C25               	goto	l1956
  3686                           
  3687                           ;functions.c: 175: {
  3688                           ;functions.c: 176: if(bTimerComplete[4])
  3689  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3690  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3691  041D  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3692  041E  1903               	btfsc	3,2
  3693  041F  2C12               	goto	l1954
  3694                           
  3695                           ;functions.c: 177: {
  3696                           ;functions.c: 178: FindChannel();
  3697  0420  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3698  0425                     l1956:	
  3699                           ;functions.c: 179: break;
  3700                           
  3701                           
  3702                           ;functions.c: 180: }
  3703                           ;functions.c: 182: }
  3704                           ;functions.c: 183: SetRFMode(0x80);
  3705  0425  3080               	movlw	128
  3706  0426  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  3707                           
  3708                           ;functions.c: 184: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3709  042B  30A5               	movlw	165
  3710  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3711  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3712  042E  00B7               	movwf	??_TransmittString
  3713  042F                     u2167:	
  3714  042F  0BB7               	decfsz	??_TransmittString,f
  3715  0430  2C2F               	goto	u2167
  3716  0431  2C32               	nop2
  3717                           
  3718                           ;functions.c: 187: WriteFIFO('S');
  3719  0432  3053               	movlw	83
  3720  0433  120A  158A  2441  120A  118A  	fcall	_WriteFIFO
  3721                           
  3722                           ;functions.c: 188: WriteFIFO('Y');
  3723  0438  3059               	movlw	89
  3724  0439  120A  158A  2441  120A  118A  	fcall	_WriteFIFO
  3725                           
  3726                           ;functions.c: 189: WriteFIFO('N');
  3727  043E  304E               	movlw	78
  3728  043F  120A  158A  2441  120A  118A  	fcall	_WriteFIFO
  3729                           
  3730                           ;functions.c: 190: WriteFIFO('C');
  3731  0444  3043               	movlw	67
  3732  0445  120A  158A  2441  120A  118A  	fcall	_WriteFIFO
  3733  044A                     l1972:	
  3734                           ;functions.c: 193: while(dataString[i] != 0)
  3735                           
  3736  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3737  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3738  044C  083A               	movf	TransmittString@i,w
  3739  044D  0735               	addwf	TransmittString@dataString,w
  3740  044E  00B8               	movwf	??_TransmittString+1
  3741  044F  0836               	movf	TransmittString@dataString+1,w
  3742  0450  00B7               	movwf	??_TransmittString
  3743  0451  1803               	skipnc
  3744  0452  0AB7               	incf	??_TransmittString,f
  3745  0453  1BBA               	btfsc	TransmittString@i,7
  3746  0454  03B7               	decf	??_TransmittString,f
  3747  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0457  0837               	movf	??_TransmittString,w
  3750  0458  00B9               	movwf	??_TransmittString+2
  3751  0459  0839               	movf	??_TransmittString+2,w
  3752  045A  00FF               	movwf	127
  3753  045B  0838               	movf	??_TransmittString+1,w
  3754  045C  0084               	movwf	4
  3755  045D  120A  118A  2600  120A  118A  	fcall	stringtab
  3756  0462  3A00               	xorlw	0
  3757  0463  1903               	btfsc	3,2
  3758  0464  2C90               	goto	l282
  3759                           
  3760                           ;functions.c: 194: {
  3761                           ;functions.c: 195: WriteFIFO(dataString[i]);
  3762  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3763  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3764  0467  083A               	movf	TransmittString@i,w
  3765  0468  0735               	addwf	TransmittString@dataString,w
  3766  0469  00B8               	movwf	??_TransmittString+1
  3767  046A  0836               	movf	TransmittString@dataString+1,w
  3768  046B  00B7               	movwf	??_TransmittString
  3769  046C  1803               	skipnc
  3770  046D  0AB7               	incf	??_TransmittString,f
  3771  046E  1BBA               	btfsc	TransmittString@i,7
  3772  046F  03B7               	decf	??_TransmittString,f
  3773  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0472  0837               	movf	??_TransmittString,w
  3776  0473  00B9               	movwf	??_TransmittString+2
  3777  0474  0839               	movf	??_TransmittString+2,w
  3778  0475  00FF               	movwf	127
  3779  0476  0838               	movf	??_TransmittString+1,w
  3780  0477  0084               	movwf	4
  3781  0478  120A  118A  2600  120A  118A  	fcall	stringtab
  3782  047D  120A  158A  2441  120A  118A  	fcall	_WriteFIFO
  3783                           
  3784                           ;functions.c: 196: i++;
  3785  0482  3001               	movlw	1
  3786  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0485  07BA               	addwf	TransmittString@i,f
  3789  0486  1803               	skipnc
  3790  0487  0ABB               	incf	TransmittString@i+1,f
  3791  0488  3000               	movlw	0
  3792  0489  07BB               	addwf	TransmittString@i+1,f
  3793  048A  2C4A               	goto	l1972
  3794  048B                     l1974:	
  3795                           ;functions.c: 197: }
  3796                           ;functions.c: 200: while(!PORTBbits.RB4)
  3797                           
  3798                           
  3799                           ;functions.c: 201: {
  3800                           ;functions.c: 202: if(bTimerComplete[4])
  3801  048B  1683               	bsf	3,5	;RP0=1, select bank1
  3802  048C  1303               	bcf	3,6	;RP1=0, select bank1
  3803  048D  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3804  048E  1D03               	btfss	3,2
  3805  048F  2C93               	goto	l1978
  3806  0490                     l282:	
  3807                           ;functions.c: 203: break;
  3808                           
  3809  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0491  1E06               	btfss	6,4	;volatile
  3811  0492  2C8B               	goto	l1974
  3812  0493                     l1978:	
  3813                           
  3814                           ;functions.c: 204: }
  3815                           ;functions.c: 205: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3816  0493  3002               	movlw	2
  3817  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0496  00B7               	movwf	??_TransmittString
  3820  0497                     u2177:	
  3821  0497  0BB7               	decfsz	??_TransmittString,f
  3822  0498  2C97               	goto	u2177
  3823  0499  0000               	nop
  3824                           
  3825                           ;functions.c: 206: SetRFMode(0x00);
  3826  049A  3000               	movlw	0
  3827  049B  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  3828                           
  3829                           ;functions.c: 207: _delay((unsigned long)((1)*(4000000/4000.0)));
  3830  04A0  30C7               	movlw	199
  3831  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3832  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3833  04A3  00B7               	movwf	??_TransmittString
  3834  04A4                     u2187:	
  3835  04A4  2CA5               	nop2
  3836  04A5  0BB7               	decfsz	??_TransmittString,f
  3837  04A6  2CA4               	goto	u2187
  3838  04A7  2CA8               	nop2
  3839  04A8  0008               	return
  3840  04A9                     __end_of_TransmittString:	
  3841                           
  3842                           	psect	text20
  3843  0C41                     __ptext20:	
  3844 ;; *************** function _WriteFIFO *****************
  3845 ;; Defined at:
  3846 ;;		line 722 in file "functions.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  Data            1    wreg     unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  Data            1    3[BANK0 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, pclath, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       0       0       0       0
  3861 ;;      Locals:         0       1       0       0       0
  3862 ;;      Temps:          0       0       0       0       0
  3863 ;;      Totals:         0       1       0       0       0
  3864 ;;Total ram usage:        1 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    3
  3867 ;; This function calls:
  3868 ;;		_WriteSPI
  3869 ;; This function is called by:
  3870 ;;		_TransmittString
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _WriteFIFO
  3876  0C41                     _WriteFIFO:	
  3877                           
  3878                           ;incstack = 0
  3879                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3880                           ;WriteFIFO@Data stored from wreg
  3881  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0C43  00A3               	movwf	WriteFIFO@Data
  3884                           
  3885                           ;functions.c: 724: PORTAbits.RA5 = 0;
  3886  0C44  1285               	bcf	5,5	;volatile
  3887                           
  3888                           ;functions.c: 725: WriteSPI(Data);
  3889  0C45  0823               	movf	WriteFIFO@Data,w
  3890  0C46  120A  158A  245A   	fcall	_WriteSPI
  3891                           
  3892                           ;functions.c: 726: PORTAbits.RA5 = 1;
  3893  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0C4B  1685               	bsf	5,5	;volatile
  3896  0C4C  0008               	return
  3897  0C4D                     __end_of_WriteFIFO:	
  3898                           
  3899                           	psect	text21
  3900  01ED                     __ptext21:	
  3901 ;; *************** function _FindChannel *****************
  3902 ;; Defined at:
  3903 ;;		line 505 in file "functions.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  i               2   19[BANK0 ] int 
  3908 ;;  cnt             2   17[BANK0 ] int 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      unsigned char 
  3911 ;; Registers used:
  3912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3918 ;;      Params:         0       0       0       0       0
  3919 ;;      Locals:         0       4       0       0       0
  3920 ;;      Temps:          0       3       0       0       0
  3921 ;;      Totals:         0       7       0       0       0
  3922 ;;Total ram usage:        7 bytes
  3923 ;; Hardware stack levels used:    1
  3924 ;; Hardware stack levels required when called:    6
  3925 ;; This function calls:
  3926 ;;		_RegisterRead
  3927 ;;		_RegisterSet
  3928 ;;		_SetRFMode
  3929 ;; This function is called by:
  3930 ;;		_TransiverToReceive
  3931 ;;		_TransmittString
  3932 ;;		_TransiverInit
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _FindChannel
  3938  01ED                     _FindChannel:	
  3939                           
  3940                           ;functions.c: 507: int cnt = 0;
  3941                           
  3942                           ;incstack = 0
  3943 ;; using string table level
  3944                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3945  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3946  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3947  01EF  01B1               	clrf	FindChannel@cnt
  3948  01F0  01B2               	clrf	FindChannel@cnt+1
  3949                           
  3950                           ;functions.c: 508: bChannelFound = 0;
  3951  01F1  01EC               	clrf	_bChannelFound
  3952                           
  3953                           ;functions.c: 509: channelFound = 0;
  3954  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  3955  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  3956  01F4  01AF               	clrf	_channelFound^(0+128)
  3957  01F5  01B0               	clrf	(_channelFound+1)^(0+128)
  3958                           
  3959                           ;functions.c: 511: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3960  01F6  3006               	movlw	6
  3961  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3962  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3963  01F9  00B0               	movwf	??_FindChannel+2
  3964  01FA  3013               	movlw	19
  3965  01FB  00AF               	movwf	??_FindChannel+1
  3966  01FC  30AD               	movlw	173
  3967  01FD  00AE               	movwf	??_FindChannel
  3968  01FE                     u2197:	
  3969  01FE  0BAE               	decfsz	??_FindChannel,f
  3970  01FF  29FE               	goto	u2197
  3971  0200  0BAF               	decfsz	??_FindChannel+1,f
  3972  0201  29FE               	goto	u2197
  3973  0202  0BB0               	decfsz	??_FindChannel+2,f
  3974  0203  29FE               	goto	u2197
  3975                           
  3976                           ;functions.c: 512: for (int i = 0; i < 13; i++)
  3977  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3979  0206  01B3               	clrf	FindChannel@i
  3980  0207  01B4               	clrf	FindChannel@i+1
  3981  0208  0834               	movf	FindChannel@i+1,w
  3982  0209  3A80               	xorlw	128
  3983  020A  00FF               	movwf	127
  3984  020B  3080               	movlw	128
  3985  020C  027F               	subwf	127,w
  3986  020D  1D03               	skipz
  3987  020E  2A11               	goto	u1085
  3988  020F  300D               	movlw	13
  3989  0210  0233               	subwf	FindChannel@i,w
  3990  0211                     u1085:	
  3991  0211  1803               	btfsc	3,0
  3992  0212  2AEB               	goto	l1822
  3993  0213                     l1798:	
  3994                           
  3995                           ;functions.c: 513: {
  3996                           ;functions.c: 514: RegisterSet(0x06,ChannelR[i]);
  3997  0213  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0214  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0215  0833               	movf	FindChannel@i,w
  4000  0216  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4001  0217  0084               	movwf	4
  4002  0218  120A  118A  260A  120A  118A  	fcall	stringdir
  4003  021D  00AE               	movwf	??_FindChannel
  4004  021E  082E               	movf	??_FindChannel,w
  4005  021F  00A7               	movwf	RegisterSet@value
  4006  0220  3006               	movlw	6
  4007  0221  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4008                           
  4009                           ;functions.c: 515: RegisterSet(0x07,ChannelP[i]);
  4010  0226  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0227  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0228  0833               	movf	FindChannel@i,w
  4013  0229  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4014  022A  0084               	movwf	4
  4015  022B  120A  118A  260A  120A  118A  	fcall	stringdir
  4016  0230  00AE               	movwf	??_FindChannel
  4017  0231  082E               	movf	??_FindChannel,w
  4018  0232  00A7               	movwf	RegisterSet@value
  4019  0233  3007               	movlw	7
  4020  0234  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4021                           
  4022                           ;functions.c: 516: RegisterSet(0x08,ChannelS[i]);
  4023  0239  1283               	bcf	3,5	;RP0=0, select bank0
  4024  023A  1303               	bcf	3,6	;RP1=0, select bank0
  4025  023B  0833               	movf	FindChannel@i,w
  4026  023C  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4027  023D  0084               	movwf	4
  4028  023E  120A  118A  260A  120A  118A  	fcall	stringdir
  4029  0243  00AE               	movwf	??_FindChannel
  4030  0244  082E               	movf	??_FindChannel,w
  4031  0245  00A7               	movwf	RegisterSet@value
  4032  0246  3008               	movlw	8
  4033  0247  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4034                           
  4035                           ;functions.c: 517: RegisterSet(0x09,ChannelR[i]);
  4036  024C  1283               	bcf	3,5	;RP0=0, select bank0
  4037  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4038  024E  0833               	movf	FindChannel@i,w
  4039  024F  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4040  0250  0084               	movwf	4
  4041  0251  120A  118A  260A  120A  118A  	fcall	stringdir
  4042  0256  00AE               	movwf	??_FindChannel
  4043  0257  082E               	movf	??_FindChannel,w
  4044  0258  00A7               	movwf	RegisterSet@value
  4045  0259  3009               	movlw	9
  4046  025A  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4047                           
  4048                           ;functions.c: 518: RegisterSet(0x0A,ChannelP[i]);
  4049  025F  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0260  1303               	bcf	3,6	;RP1=0, select bank0
  4051  0261  0833               	movf	FindChannel@i,w
  4052  0262  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4053  0263  0084               	movwf	4
  4054  0264  120A  118A  260A  120A  118A  	fcall	stringdir
  4055  0269  00AE               	movwf	??_FindChannel
  4056  026A  082E               	movf	??_FindChannel,w
  4057  026B  00A7               	movwf	RegisterSet@value
  4058  026C  300A               	movlw	10
  4059  026D  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4060                           
  4061                           ;functions.c: 519: RegisterSet(0x0B,ChannelS[i]);
  4062  0272  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0273  1303               	bcf	3,6	;RP1=0, select bank0
  4064  0274  0833               	movf	FindChannel@i,w
  4065  0275  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4066  0276  0084               	movwf	4
  4067  0277  120A  118A  260A  120A  118A  	fcall	stringdir
  4068  027C  00AE               	movwf	??_FindChannel
  4069  027D  082E               	movf	??_FindChannel,w
  4070  027E  00A7               	movwf	RegisterSet@value
  4071  027F  300B               	movlw	11
  4072  0280  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4073                           
  4074                           ;functions.c: 520: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4075  0285  300E               	movlw	14
  4076  0286  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  4077  028B  3802               	iorlw	2
  4078  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4079  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4080  028E  00AE               	movwf	??_FindChannel
  4081  028F  082E               	movf	??_FindChannel,w
  4082  0290  00A7               	movwf	RegisterSet@value
  4083  0291  300E               	movlw	14
  4084  0292  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4085                           
  4086                           ;functions.c: 521: SetRFMode(0x40);
  4087  0297  3040               	movlw	64
  4088  0298  120A  118A  278D  120A  118A  	fcall	_SetRFMode
  4089                           
  4090                           ;functions.c: 522: cnt = 0;
  4091  029D  1283               	bcf	3,5	;RP0=0, select bank0
  4092  029E  1303               	bcf	3,6	;RP1=0, select bank0
  4093  029F  01B1               	clrf	FindChannel@cnt
  4094  02A0  01B2               	clrf	FindChannel@cnt+1
  4095  02A1                     l1816:	
  4096                           ;functions.c: 523: while(cnt < 5)
  4097                           
  4098  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4099  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4100  02A3  0832               	movf	FindChannel@cnt+1,w
  4101  02A4  3A80               	xorlw	128
  4102  02A5  00FF               	movwf	127
  4103  02A6  3080               	movlw	128
  4104  02A7  027F               	subwf	127,w
  4105  02A8  1D03               	skipz
  4106  02A9  2AAC               	goto	u1105
  4107  02AA  3005               	movlw	5
  4108  02AB  0231               	subwf	FindChannel@cnt,w
  4109  02AC                     u1105:	
  4110  02AC  1803               	btfsc	3,0
  4111  02AD  2AD8               	goto	l1818
  4112                           
  4113                           ;functions.c: 524: {
  4114                           ;functions.c: 526: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4115  02AE  300E               	movlw	14
  4116  02AF  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  4117  02B4  3902               	andlw	2
  4118  02B5  1903               	btfsc	3,2
  4119  02B6  2AC7               	goto	l1814
  4120                           
  4121                           ;functions.c: 527: {
  4122                           ;functions.c: 528: bChannelFound = 1;
  4123  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4124  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4125  02B9  01EC               	clrf	_bChannelFound
  4126  02BA  0AEC               	incf	_bChannelFound,f
  4127                           
  4128                           ;functions.c: 529: channelFound = i;
  4129  02BB  0834               	movf	FindChannel@i+1,w
  4130  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  4131  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  4132  02BE  00B0               	movwf	(_channelFound+1)^(0+128)
  4133  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4134  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  4135  02C1  0833               	movf	FindChannel@i,w
  4136  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  4137  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  4138  02C4  00AF               	movwf	_channelFound^(0+128)
  4139                           
  4140                           ;functions.c: 530: return 1;
  4141  02C5  3001               	movlw	1
  4142  02C6  0008               	return
  4143  02C7                     l1814:	
  4144                           
  4145                           ;functions.c: 531: }
  4146                           ;functions.c: 532: cnt++;
  4147  02C7  3001               	movlw	1
  4148  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  4149  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  4150  02CA  07B1               	addwf	FindChannel@cnt,f
  4151  02CB  1803               	skipnc
  4152  02CC  0AB2               	incf	FindChannel@cnt+1,f
  4153  02CD  3000               	movlw	0
  4154  02CE  07B2               	addwf	FindChannel@cnt+1,f
  4155                           
  4156                           ;functions.c: 533: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4157  02CF  30C7               	movlw	199
  4158  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  4159  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  4160  02D2  00AE               	movwf	??_FindChannel
  4161  02D3                     u2207:	
  4162  02D3  2AD4               	nop2
  4163  02D4  0BAE               	decfsz	??_FindChannel,f
  4164  02D5  2AD3               	goto	u2207
  4165  02D6  2AD7               	nop2
  4166  02D7  2AA1               	goto	l1816
  4167  02D8                     l1818:	
  4168  02D8  3001               	movlw	1
  4169  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4170  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4171  02DB  07B3               	addwf	FindChannel@i,f
  4172  02DC  1803               	skipnc
  4173  02DD  0AB4               	incf	FindChannel@i+1,f
  4174  02DE  3000               	movlw	0
  4175  02DF  07B4               	addwf	FindChannel@i+1,f
  4176  02E0  0834               	movf	FindChannel@i+1,w
  4177  02E1  3A80               	xorlw	128
  4178  02E2  00FF               	movwf	127
  4179  02E3  3080               	movlw	128
  4180  02E4  027F               	subwf	127,w
  4181  02E5  1D03               	skipz
  4182  02E6  2AE9               	goto	u1115
  4183  02E7  300D               	movlw	13
  4184  02E8  0233               	subwf	FindChannel@i,w
  4185  02E9                     u1115:	
  4186  02E9  1C03               	skipc
  4187  02EA  2A13               	goto	l1798
  4188  02EB                     l1822:	
  4189                           
  4190                           ;functions.c: 534: }
  4191                           ;functions.c: 537: }
  4192                           ;functions.c: 538: return 0;
  4193  02EB  3000               	movlw	0
  4194  02EC  0008               	return
  4195  02ED                     __end_of_FindChannel:	
  4196                           
  4197                           	psect	text22
  4198  078D                     __ptext22:	
  4199 ;; *************** function _SetRFMode *****************
  4200 ;; Defined at:
  4201 ;;		line 560 in file "functions.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  mode            1    wreg     unsigned char 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  mode            1   12[BANK0 ] unsigned char 
  4206 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         0       2       0       0       0
  4218 ;;      Temps:          0       1       0       0       0
  4219 ;;      Totals:         0       3       0       0       0
  4220 ;;Total ram usage:        3 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    5
  4223 ;; This function calls:
  4224 ;;		_RegisterRead
  4225 ;;		_RegisterSet
  4226 ;; This function is called by:
  4227 ;;		_TransiverToReceive
  4228 ;;		_TransiverReadFIFO
  4229 ;;		_TransmittString
  4230 ;;		_TransiverInit
  4231 ;;		_FindChannel
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _SetRFMode
  4237  078D                     _SetRFMode:	
  4238                           
  4239                           ;incstack = 0
  4240                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4241                           ;SetRFMode@mode stored from wreg
  4242  078D  1283               	bcf	3,5	;RP0=0, select bank0
  4243  078E  1303               	bcf	3,6	;RP1=0, select bank0
  4244  078F  00AC               	movwf	SetRFMode@mode
  4245                           
  4246                           ;functions.c: 562: PORTAbits.RA4 = 0;
  4247  0790  1205               	bcf	5,4	;volatile
  4248                           
  4249                           ;functions.c: 563: BYTE mcparam0_read;
  4250                           ;functions.c: 564: mcparam0_read = RegisterRead(0);
  4251  0791  3000               	movlw	0
  4252  0792  120A  158A  2503  120A  118A  	fcall	_RegisterRead
  4253  0797  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0798  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0799  00AB               	movwf	??_SetRFMode
  4256  079A  082B               	movf	??_SetRFMode,w
  4257  079B  00AD               	movwf	SetRFMode@mcparam0_read
  4258                           
  4259                           ;functions.c: 565: switch (mode) {
  4260  079C  2FE5               	goto	l1778
  4261  079D                     l1766:	
  4262                           ;functions.c: 566: case 0x80:
  4263                           
  4264                           
  4265                           ;functions.c: 567: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4266  079D  082D               	movf	SetRFMode@mcparam0_read,w
  4267  079E  391F               	andlw	31
  4268  079F  3880               	iorlw	128
  4269  07A0  00AB               	movwf	??_SetRFMode
  4270  07A1  082B               	movf	??_SetRFMode,w
  4271  07A2  00A7               	movwf	RegisterSet@value
  4272  07A3  3000               	movlw	0
  4273  07A4  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4274                           
  4275                           ;functions.c: 569: break;
  4276  07A9  2FF8               	goto	l368
  4277  07AA                     l1768:	
  4278                           ;functions.c: 570: case 0x60:
  4279                           
  4280                           
  4281                           ;functions.c: 571: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4282  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4283  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4284  07AC  082D               	movf	SetRFMode@mcparam0_read,w
  4285  07AD  391F               	andlw	31
  4286  07AE  3860               	iorlw	96
  4287  07AF  00AB               	movwf	??_SetRFMode
  4288  07B0  082B               	movf	??_SetRFMode,w
  4289  07B1  00A7               	movwf	RegisterSet@value
  4290  07B2  3000               	movlw	0
  4291  07B3  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4292                           
  4293                           ;functions.c: 573: break;
  4294  07B8  2FF8               	goto	l368
  4295  07B9                     l1770:	
  4296                           ;functions.c: 574: case 0x40:
  4297                           
  4298                           
  4299                           ;functions.c: 575: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4300  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4301  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  4302  07BB  082D               	movf	SetRFMode@mcparam0_read,w
  4303  07BC  391F               	andlw	31
  4304  07BD  3840               	iorlw	64
  4305  07BE  00AB               	movwf	??_SetRFMode
  4306  07BF  082B               	movf	??_SetRFMode,w
  4307  07C0  00A7               	movwf	RegisterSet@value
  4308  07C1  3000               	movlw	0
  4309  07C2  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4310                           
  4311                           ;functions.c: 577: break;
  4312  07C7  2FF8               	goto	l368
  4313  07C8                     l1772:	
  4314                           ;functions.c: 578: case 0x20:
  4315                           
  4316                           
  4317                           ;functions.c: 579: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4318  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4319  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4320  07CA  082D               	movf	SetRFMode@mcparam0_read,w
  4321  07CB  391F               	andlw	31
  4322  07CC  3820               	iorlw	32
  4323  07CD  00AB               	movwf	??_SetRFMode
  4324  07CE  082B               	movf	??_SetRFMode,w
  4325  07CF  00A7               	movwf	RegisterSet@value
  4326  07D0  3000               	movlw	0
  4327  07D1  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4328                           
  4329                           ;functions.c: 581: break;
  4330  07D6  2FF8               	goto	l368
  4331  07D7                     l1774:	
  4332                           ;functions.c: 582: case 0x00:
  4333                           
  4334                           
  4335                           ;functions.c: 583: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4336  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  4337  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  4338  07D9  082D               	movf	SetRFMode@mcparam0_read,w
  4339  07DA  391F               	andlw	31
  4340  07DB  00AB               	movwf	??_SetRFMode
  4341  07DC  082B               	movf	??_SetRFMode,w
  4342  07DD  00A7               	movwf	RegisterSet@value
  4343  07DE  3000               	movlw	0
  4344  07DF  120A  158A  24E9  120A  118A  	fcall	_RegisterSet
  4345                           
  4346                           ;functions.c: 586: }
  4347                           
  4348                           ;functions.c: 585: break;
  4349  07E4  2FF8               	goto	l368
  4350  07E5                     l1778:	
  4351  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  4352  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  4353  07E7  082C               	movf	SetRFMode@mode,w
  4354                           
  4355                           ; Switch size 1, requested type "space"
  4356                           ; Number of cases is 5, Range of values is 0 to 128
  4357                           ; switch strategies available:
  4358                           ; Name         Instructions Cycles
  4359                           ; simple_byte           16     9 (average)
  4360                           ; jumptable            260     6 (fixed)
  4361                           ;	Chosen strategy is simple_byte
  4362  07E8  3A00               	xorlw	0	; case 0
  4363  07E9  1903               	skipnz
  4364  07EA  2FD7               	goto	l1774
  4365  07EB  3A20               	xorlw	32	; case 32
  4366  07EC  1903               	skipnz
  4367  07ED  2FC8               	goto	l1772
  4368  07EE  3A60               	xorlw	96	; case 64
  4369  07EF  1903               	skipnz
  4370  07F0  2FB9               	goto	l1770
  4371  07F1  3A20               	xorlw	32	; case 96
  4372  07F2  1903               	skipnz
  4373  07F3  2FAA               	goto	l1768
  4374  07F4  3AE0               	xorlw	224	; case 128
  4375  07F5  1903               	skipnz
  4376  07F6  2F9D               	goto	l1766
  4377  07F7  2FF8               	goto	l368
  4378  07F8                     l368:	
  4379                           
  4380                           ;functions.c: 587: PORTAbits.RA4 = 1;
  4381  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  4382  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  4383  07FA  1605               	bsf	5,4	;volatile
  4384  07FB  0008               	return
  4385  07FC                     __end_of_SetRFMode:	
  4386                           
  4387                           	psect	text23
  4388  0CE9                     __ptext23:	
  4389 ;; *************** function _RegisterSet *****************
  4390 ;; Defined at:
  4391 ;;		line 669 in file "functions.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  adress          1    wreg     unsigned char 
  4394 ;;  value           1    7[BANK0 ] unsigned char 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  adress          1   10[BANK0 ] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4406 ;;      Params:         0       1       0       0       0
  4407 ;;      Locals:         0       1       0       0       0
  4408 ;;      Temps:          0       2       0       0       0
  4409 ;;      Totals:         0       4       0       0       0
  4410 ;;Total ram usage:        4 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    3
  4413 ;; This function calls:
  4414 ;;		_WriteSPI
  4415 ;; This function is called by:
  4416 ;;		_TransiverToReceive
  4417 ;;		_TransmittString
  4418 ;;		_TransiverInit
  4419 ;;		_FindChannel
  4420 ;;		_SetRFMode
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _RegisterSet
  4426  0CE9                     _RegisterSet:	
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4430                           ;RegisterSet@adress stored from wreg
  4431  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  4432  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  4433  0CEB  00AA               	movwf	RegisterSet@adress
  4434                           
  4435                           ;functions.c: 671: PORTAbits.RA4 = 0;
  4436  0CEC  1205               	bcf	5,4	;volatile
  4437                           
  4438                           ;functions.c: 672: adress = (adress<<1);
  4439  0CED  082A               	movf	RegisterSet@adress,w
  4440  0CEE  00A8               	movwf	??_RegisterSet
  4441  0CEF  0728               	addwf	??_RegisterSet,w
  4442  0CF0  00A9               	movwf	??_RegisterSet+1
  4443  0CF1  0829               	movf	??_RegisterSet+1,w
  4444  0CF2  00AA               	movwf	RegisterSet@adress
  4445                           
  4446                           ;functions.c: 673: WriteSPI(adress);
  4447  0CF3  082A               	movf	RegisterSet@adress,w
  4448  0CF4  120A  158A  245A  120A  158A  	fcall	_WriteSPI
  4449                           
  4450                           ;functions.c: 674: WriteSPI(value);
  4451  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0CFB  0827               	movf	RegisterSet@value,w
  4454  0CFC  120A  158A  245A   	fcall	_WriteSPI
  4455                           
  4456                           ;functions.c: 675: PORTAbits.RA4 = 1;
  4457  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  4459  0D01  1605               	bsf	5,4	;volatile
  4460  0D02  0008               	return
  4461  0D03                     __end_of_RegisterSet:	
  4462                           
  4463                           	psect	text24
  4464  0D03                     __ptext24:	
  4465 ;; *************** function _RegisterRead *****************
  4466 ;; Defined at:
  4467 ;;		line 639 in file "functions.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  adress          1    wreg     unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  adress          1    6[BANK0 ] unsigned char 
  4472 ;;  value           1    5[BANK0 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0, pclath, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         0       0       0       0       0
  4483 ;;      Locals:         0       2       0       0       0
  4484 ;;      Temps:          0       2       0       0       0
  4485 ;;      Totals:         0       4       0       0       0
  4486 ;;Total ram usage:        4 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    4
  4489 ;; This function calls:
  4490 ;;		_ReadSPI
  4491 ;;		_WriteSPI
  4492 ;; This function is called by:
  4493 ;;		_TransiverToReceive
  4494 ;;		_TransmittString
  4495 ;;		_TransiverInit
  4496 ;;		_FindChannel
  4497 ;;		_SetRFMode
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _RegisterRead
  4503  0D03                     _RegisterRead:	
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4507                           ;RegisterRead@adress stored from wreg
  4508  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0D05  00A6               	movwf	RegisterRead@adress
  4511                           
  4512                           ;functions.c: 641: BYTE value;
  4513                           ;functions.c: 642: PORTAbits.RA4 = 0;
  4514  0D06  1205               	bcf	5,4	;volatile
  4515                           
  4516                           ;functions.c: 643: adress = ((adress<<1)|0x40);
  4517  0D07  0826               	movf	RegisterRead@adress,w
  4518  0D08  00A3               	movwf	??_RegisterRead
  4519  0D09  0723               	addwf	??_RegisterRead,w
  4520  0D0A  3840               	iorlw	64
  4521  0D0B  00A4               	movwf	??_RegisterRead+1
  4522  0D0C  0824               	movf	??_RegisterRead+1,w
  4523  0D0D  00A6               	movwf	RegisterRead@adress
  4524                           
  4525                           ;functions.c: 644: WriteSPI(adress);
  4526  0D0E  0826               	movf	RegisterRead@adress,w
  4527  0D0F  120A  158A  245A  120A  158A  	fcall	_WriteSPI
  4528                           
  4529                           ;functions.c: 645: value = ReadSPI();
  4530  0D14  120A  158A  241F   	fcall	_ReadSPI
  4531  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4532  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0D19  00A3               	movwf	??_RegisterRead
  4534  0D1A  0823               	movf	??_RegisterRead,w
  4535  0D1B  00A5               	movwf	RegisterRead@value
  4536                           
  4537                           ;functions.c: 646: PORTAbits.RA4 = 1;
  4538  0D1C  1605               	bsf	5,4	;volatile
  4539                           
  4540                           ;functions.c: 647: return value;
  4541  0D1D  0825               	movf	RegisterRead@value,w
  4542  0D1E  0008               	return
  4543  0D1F                     __end_of_RegisterRead:	
  4544                           
  4545                           	psect	text25
  4546  0C1F                     __ptext25:	
  4547 ;; *************** function _ReadSPI *****************
  4548 ;; Defined at:
  4549 ;;		line 452 in file "functions.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      unsigned char 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0, pclath, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4563 ;;      Params:         0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    3
  4570 ;; This function calls:
  4571 ;;		_WriteSPI
  4572 ;; This function is called by:
  4573 ;;		_RegisterRead
  4574 ;;		_ReadFIFO
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _ReadSPI
  4580  0C1F                     _ReadSPI:	
  4581                           
  4582                           ;functions.c: 454: WriteSPI(0x00);
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4586  0C1F  3000               	movlw	0
  4587  0C20  120A  158A  245A   	fcall	_WriteSPI
  4588                           
  4589                           ;functions.c: 455: return SSPBUF;
  4590  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0C25  0813               	movf	19,w	;volatile
  4593  0C26  0008               	return
  4594  0C27                     __end_of_ReadSPI:	
  4595                           
  4596                           	psect	text26
  4597  0C5A                     __ptext26:	
  4598 ;; *************** function _WriteSPI *****************
  4599 ;; Defined at:
  4600 ;;		line 440 in file "functions.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  databyte        1    wreg     unsigned char 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  databyte        1    2[BANK0 ] unsigned char 
  4605 ;;  buffer          1    1[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         0       0       0       0       0
  4616 ;;      Locals:         0       2       0       0       0
  4617 ;;      Temps:          0       1       0       0       0
  4618 ;;      Totals:         0       3       0       0       0
  4619 ;;Total ram usage:        3 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    2
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_ReadSPI
  4626 ;;		_RegisterRead
  4627 ;;		_RegisterSet
  4628 ;;		_WriteFIFO
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _WriteSPI
  4634  0C5A                     _WriteSPI:	
  4635                           
  4636                           ;incstack = 0
  4637                           ; Regs used in _WriteSPI: [wreg]
  4638                           ;WriteSPI@databyte stored from wreg
  4639  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0C5C  00A2               	movwf	WriteSPI@databyte
  4642                           
  4643                           ;functions.c: 442: unsigned char buffer;
  4644                           ;functions.c: 443: buffer = SSPBUF;
  4645  0C5D  0813               	movf	19,w	;volatile
  4646  0C5E  00A0               	movwf	??_WriteSPI
  4647  0C5F  0820               	movf	??_WriteSPI,w
  4648  0C60  00A1               	movwf	WriteSPI@buffer
  4649                           
  4650                           ;functions.c: 444: PIR1bits.SSPIF=0;
  4651  0C61  118C               	bcf	12,3	;volatile
  4652                           
  4653                           ;functions.c: 445: SSPBUF = databyte;
  4654  0C62  0822               	movf	WriteSPI@databyte,w
  4655  0C63  0093               	movwf	19	;volatile
  4656  0C64                     l344:	
  4657                           ;functions.c: 446: while(PIR1bits.SSPIF == 0);
  4658                           
  4659  0C64  1D8C               	btfss	12,3	;volatile
  4660  0C65  2C64               	goto	l344
  4661                           
  4662                           ;functions.c: 447: PIR1bits.SSPIF = 0;
  4663  0C66  118C               	bcf	12,3	;volatile
  4664  0C67  0008               	return
  4665  0C68                     __end_of_WriteSPI:	
  4666                           
  4667                           	psect	text27
  4668  0C4D                     __ptext27:	
  4669 ;; *************** function _Mode_2 *****************
  4670 ;; Defined at:
  4671 ;;		line 238 in file "functions.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0
  4688 ;;      Totals:         0       0       0       0       0
  4689 ;;Total ram usage:        0 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		_LightWithSensController
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _Mode_2
  4701  0C4D                     _Mode_2:	
  4702                           
  4703                           ;functions.c: 240: LightWithSensController();
  4704                           
  4705                           ;incstack = 0
  4706                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4707  0C4D  120A  158A  2646  120A  158A  	fcall	_LightWithSensController
  4708                           
  4709                           ;functions.c: 241: if(PORTCbits.RC2)
  4710  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  4711  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  4712  0C54  1D07               	btfss	7,2	;volatile
  4713  0C55  2C58               	goto	l298
  4714                           
  4715                           ;functions.c: 242: PORTCbits.RC1 = 1;
  4716  0C56  1487               	bsf	7,1	;volatile
  4717  0C57  0008               	return
  4718  0C58                     l298:	
  4719                           
  4720                           ;functions.c: 243: else
  4721                           ;functions.c: 244: PORTCbits.RC1 = 0;
  4722  0C58  1087               	bcf	7,1	;volatile
  4723  0C59  0008               	return
  4724  0C5A                     __end_of_Mode_2:	
  4725                           
  4726                           	psect	text28
  4727  0CCF                     __ptext28:	
  4728 ;; *************** function _Mode_1 *****************
  4729 ;; Defined at:
  4730 ;;		line 224 in file "functions.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, pclath, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0
  4747 ;;      Totals:         0       0       0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    5
  4751 ;; This function calls:
  4752 ;;		_DarknessCheck
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _Mode_1
  4760  0CCF                     _Mode_1:	
  4761                           
  4762                           ;functions.c: 227: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4763                           
  4764                           ;incstack = 0
  4765                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4766  0CCF  301E               	movlw	30
  4767  0CD0  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0CD1  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0CD2  066A               	xorwf	_intSecondCounter,w
  4770  0CD3  046B               	iorwf	_intSecondCounter+1,w
  4771  0CD4  1903               	btfsc	3,2
  4772  0CD5  1907               	btfsc	7,2	;volatile
  4773  0CD6  2CDC               	goto	l2274
  4774                           
  4775                           ;functions.c: 228: DarknessCheck();
  4776  0CD7  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4777  0CDC                     l2274:	
  4778                           
  4779                           ;functions.c: 229: if((intBlinkCycle == 1)&&(bDark == 1))
  4780  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  4781  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  4782  0CDE  0368               	decf	_intBlinkCycle,w
  4783  0CDF  0469               	iorwf	_intBlinkCycle+1,w
  4784  0CE0  1D03               	btfss	3,2
  4785  0CE1  2CE7               	goto	l293
  4786  0CE2  036D               	decf	_bDark,w
  4787  0CE3  1D03               	btfss	3,2
  4788  0CE4  2CE7               	goto	l293
  4789                           
  4790                           ;functions.c: 230: PORTCbits.RC2 = 1;
  4791  0CE5  1507               	bsf	7,2	;volatile
  4792  0CE6  0008               	return
  4793  0CE7                     l293:	
  4794                           
  4795                           ;functions.c: 231: else
  4796                           ;functions.c: 232: PORTCbits.RC2 = 0;
  4797  0CE7  1107               	bcf	7,2	;volatile
  4798  0CE8  0008               	return
  4799  0CE9                     __end_of_Mode_1:	
  4800                           
  4801                           	psect	text29
  4802  07FC                     __ptext29:	
  4803 ;; *************** function _Mode_0 *****************
  4804 ;; Defined at:
  4805 ;;		line 216 in file "functions.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    6
  4826 ;; This function calls:
  4827 ;;		_LightWithSensController
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           
  4834                           ;psect for function _Mode_0
  4835  07FC                     _Mode_0:	
  4836                           
  4837                           ;functions.c: 218: LightWithSensController();
  4838                           
  4839                           ;incstack = 0
  4840                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4841  07FC  120A  158A  2646   	fcall	_LightWithSensController
  4842  07FF  0008               	return
  4843  0800                     __end_of_Mode_0:	
  4844                           
  4845                           	psect	text30
  4846  0E46                     __ptext30:	
  4847 ;; *************** function _LightWithSensController *****************
  4848 ;; Defined at:
  4849 ;;		line 282 in file "functions.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4863 ;;      Params:         0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0
  4866 ;;      Totals:         0       0       0       0       0
  4867 ;;Total ram usage:        0 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    5
  4870 ;; This function calls:
  4871 ;;		_DarknessCheck
  4872 ;;		_timerFunction
  4873 ;; This function is called by:
  4874 ;;		_Mode_0
  4875 ;;		_Mode_2
  4876 ;;		_Mode_4
  4877 ;;		_Mode_5
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _LightWithSensController
  4883  0E46                     _LightWithSensController:	
  4884                           
  4885                           ;functions.c: 286: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4889  0E46  301E               	movlw	30
  4890  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4891  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4892  0E49  066A               	xorwf	_intSecondCounter,w
  4893  0E4A  046B               	iorwf	_intSecondCounter+1,w
  4894  0E4B  1903               	btfsc	3,2
  4895  0E4C  1907               	btfsc	7,2	;volatile
  4896  0E4D  2E53               	goto	l2156
  4897                           
  4898                           ;functions.c: 287: DarknessCheck();
  4899  0E4E  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4900  0E53                     l2156:	
  4901                           
  4902                           ;functions.c: 291: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  4903  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0E55  036D               	decf	_bDark,w
  4906  0E56  1903               	btfsc	3,2
  4907  0E57  1C85               	btfss	5,1	;volatile
  4908  0E58  2E68               	goto	l2166
  4909  0E59  1907               	btfsc	7,2	;volatile
  4910  0E5A  2E68               	goto	l2166
  4911                           
  4912                           ;functions.c: 292: {
  4913                           ;functions.c: 294: PORTCbits.RC2 = 1;
  4914  0E5B  1507               	bsf	7,2	;volatile
  4915                           
  4916                           ;functions.c: 296: timerFunction(0,120);
  4917  0E5C  3000               	movlw	0
  4918  0E5D  00A0               	movwf	timerFunction@intTimerNumber
  4919  0E5E  00A1               	movwf	timerFunction@intTimerNumber+1
  4920  0E5F  3078               	movlw	120
  4921  0E60  00A2               	movwf	timerFunction@intSetSeconds
  4922  0E61  3000               	movlw	0
  4923  0E62  00A3               	movwf	timerFunction@intSetSeconds+1
  4924  0E63  120A  158A  24A8  120A  158A  	fcall	_timerFunction
  4925  0E68                     l2166:	
  4926                           
  4927                           ;functions.c: 297: }
  4928                           ;functions.c: 300: if(bTimerComplete[0])
  4929  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  4930  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  4931  0E6A  082A               	movf	_bTimerComplete^(0+128),w
  4932  0E6B  1903               	btfsc	3,2
  4933  0E6C  0008               	return
  4934                           
  4935                           ;functions.c: 301: {
  4936                           ;functions.c: 302: DarknessCheck();
  4937  0E6D  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4938                           
  4939                           ;functions.c: 303: if((bDark)&&(PORTAbits.RA1))
  4940  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  4941  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  4942  0E74  086D               	movf	_bDark,w
  4943  0E75  1D03               	btfss	3,2
  4944  0E76  1C85               	btfss	5,1	;volatile
  4945  0E77  2E83               	goto	l317
  4946                           
  4947                           ;functions.c: 304: {
  4948                           ;functions.c: 305: timerFunction(0,120);
  4949  0E78  3000               	movlw	0
  4950  0E79  00A0               	movwf	timerFunction@intTimerNumber
  4951  0E7A  00A1               	movwf	timerFunction@intTimerNumber+1
  4952  0E7B  3078               	movlw	120
  4953  0E7C  00A2               	movwf	timerFunction@intSetSeconds
  4954  0E7D  3000               	movlw	0
  4955  0E7E  00A3               	movwf	timerFunction@intSetSeconds+1
  4956  0E7F  120A  158A  24A8   	fcall	_timerFunction
  4957                           
  4958                           ;functions.c: 306: }
  4959  0E82  0008               	return
  4960  0E83                     l317:	
  4961                           
  4962                           ;functions.c: 307: else
  4963                           ;functions.c: 308: PORTCbits.RC2 = 0;
  4964  0E83  1107               	bcf	7,2	;volatile
  4965  0E84  0008               	return
  4966  0E85                     __end_of_LightWithSensController:	
  4967                           
  4968                           	psect	text31
  4969  0CA8                     __ptext31:	
  4970 ;; *************** function _timerFunction *****************
  4971 ;; Defined at:
  4972 ;;		line 333 in file "functions.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  intTimerNumb    2    0[BANK0 ] int 
  4975 ;;  intSetSecond    2    2[BANK0 ] int 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4987 ;;      Params:         0       4       0       0       0
  4988 ;;      Locals:         0       0       0       0       0
  4989 ;;      Temps:          0       1       0       0       0
  4990 ;;      Totals:         0       5       0       0       0
  4991 ;;Total ram usage:        5 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    2
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_TransiverToReceive
  4998 ;;		_TransiverReadFIFO
  4999 ;;		_TransmittString
  5000 ;;		_LightWithSensController
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _timerFunction
  5006  0CA8                     _timerFunction:	
  5007                           
  5008                           ;functions.c: 335: intClockTimer[intTimerNumber] = intSetSeconds;
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5012  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  5013  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  5014  0CAA  0820               	movf	timerFunction@intTimerNumber,w
  5015  0CAB  00A4               	movwf	??_timerFunction
  5016  0CAC  0724               	addwf	??_timerFunction,w
  5017  0CAD  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5018  0CAE  0084               	movwf	4
  5019  0CAF  0822               	movf	timerFunction@intSetSeconds,w
  5020  0CB0  1383               	bcf	3,7	;select IRP bank1
  5021  0CB1  0080               	movwf	0
  5022  0CB2  0A84               	incf	4,f
  5023  0CB3  0823               	movf	timerFunction@intSetSeconds+1,w
  5024  0CB4  0080               	movwf	0
  5025                           
  5026                           ;functions.c: 336: bTimerComplete[intTimerNumber] = 0;
  5027  0CB5  0820               	movf	timerFunction@intTimerNumber,w
  5028  0CB6  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5029  0CB7  0084               	movwf	4
  5030  0CB8  0180               	clrf	0
  5031  0CB9  0008               	return
  5032  0CBA                     __end_of_timerFunction:	
  5033                           ;functions.c: 337: return 1;
  5034                           ;	Return value of _timerFunction is never used
  5035                           
  5036                           
  5037                           	psect	text32
  5038  0D8E                     __ptext32:	
  5039 ;; *************** function _DarknessCheck *****************
  5040 ;; Defined at:
  5041 ;;		line 844 in file "functions.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5055 ;;      Params:         0       0       0       0       0
  5056 ;;      Locals:         0       1       0       0       0
  5057 ;;      Temps:          0       1       0       0       0
  5058 ;;      Totals:         0       2       0       0       0
  5059 ;;Total ram usage:        2 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    4
  5062 ;; This function calls:
  5063 ;;		_AnalogValue
  5064 ;;		_eeprom_read
  5065 ;; This function is called by:
  5066 ;;		_TransmittedDataHandler
  5067 ;;		_Mode_1
  5068 ;;		_LightWithSensController
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           
  5073                           ;psect for function _DarknessCheck
  5074  0D8E                     _DarknessCheck:	
  5075                           
  5076                           ;functions.c: 846: unsigned char darknessValue;
  5077                           ;functions.c: 847: PORTCbits.RC0 = 0;
  5078                           
  5079                           ;incstack = 0
  5080                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5081  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5082  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5083  0D90  1007               	bcf	7,0	;volatile
  5084                           
  5085                           ;functions.c: 849: if(bValueFromPot == TRUE)
  5086  0D91  036F               	decf	_bValueFromPot,w
  5087  0D92  1D03               	btfss	3,2
  5088  0D93  2D9B               	goto	l1990
  5089                           
  5090                           ;functions.c: 850: darknessValue= AnalogValue(3);
  5091  0D94  3003               	movlw	3
  5092  0D95  120A  158A  2565  120A  158A  	fcall	_AnalogValue
  5093  0D9A  2DA1               	goto	L2
  5094  0D9B                     l1990:	
  5095                           
  5096                           ;functions.c: 851: else
  5097                           ;functions.c: 852: darknessValue=eeprom_read(addressDarknessValue);
  5098  0D9B  087C               	movf	_addressDarknessValue,w
  5099  0D9C  120A  118A  25DB  120A  158A  	fcall	_eeprom_read
  5100  0DA1                     L2:	
  5101  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0DA3  00A8               	movwf	??_DarknessCheck
  5104  0DA4  0828               	movf	??_DarknessCheck,w
  5105  0DA5  00A9               	movwf	DarknessCheck@darknessValue
  5106                           
  5107                           ;functions.c: 854: if(AnalogValue(0)>darknessValue)
  5108  0DA6  3000               	movlw	0
  5109  0DA7  120A  158A  2565  120A  158A  	fcall	_AnalogValue
  5110  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5111  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5112  0DAE  0229               	subwf	DarknessCheck@darknessValue,w
  5113  0DAF  1803               	skipnc
  5114  0DB0  2DB4               	goto	l1994
  5115                           
  5116                           ;functions.c: 855: bDark = 1;
  5117  0DB1  01ED               	clrf	_bDark
  5118  0DB2  0AED               	incf	_bDark,f
  5119  0DB3  2DB5               	goto	l1996
  5120  0DB4                     l1994:	
  5121                           
  5122                           ;functions.c: 856: else
  5123                           ;functions.c: 857: bDark = 0;
  5124  0DB4  01ED               	clrf	_bDark
  5125  0DB5                     l1996:	
  5126                           
  5127                           ;functions.c: 858: PORTCbits.RC0 = 0;
  5128  0DB5  1007               	bcf	7,0	;volatile
  5129  0DB6  0008               	return
  5130  0DB7                     __end_of_DarknessCheck:	
  5131                           
  5132                           	psect	text33
  5133  05DB                     __ptext33:	
  5134 ;; *************** function _eeprom_read *****************
  5135 ;; Defined at:
  5136 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  addr            1    wreg     unsigned char 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  addr            1    1[BANK0 ] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      unsigned char 
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       0       0       0       0
  5151 ;;      Locals:         0       1       0       0       0
  5152 ;;      Temps:          0       1       0       0       0
  5153 ;;      Totals:         0       2       0       0       0
  5154 ;;Total ram usage:        2 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    2
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_TransmittedDataHandler
  5161 ;;		_DarknessCheck
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _eeprom_read
  5167  05DB                     _eeprom_read:	
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5171                           ;eeprom_read@addr stored from wreg
  5172  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  5173  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  5174  05DD  00A1               	movwf	eeprom_read@addr
  5175  05DE  2DE1               	goto	l434
  5176  05DF                     u1131:	
  5177  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  5178  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  5179  05E1                     l434:	
  5180  05E1  0064               	clrwdt	;# 
  5181  05E2  1683               	bsf	3,5	;RP0=1, select bank3
  5182  05E3  1703               	bsf	3,6	;RP1=1, select bank3
  5183  05E4  188C               	btfsc	12,1	;volsfr
  5184  05E5  2DDF               	goto	u1131
  5185  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5186  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5187  05E8  0821               	movf	eeprom_read@addr,w
  5188  05E9  1283               	bcf	3,5	;RP0=0, select bank2
  5189  05EA  1703               	bsf	3,6	;RP1=1, select bank2
  5190  05EB  008D               	movwf	13	;volatile
  5191  05EC  303F               	movlw	63
  5192  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  5193  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  5194  05EF  00A0               	movwf	??_eeprom_read
  5195  05F0  0820               	movf	??_eeprom_read,w
  5196  05F1  1683               	bsf	3,5	;RP0=1, select bank3
  5197  05F2  1703               	bsf	3,6	;RP1=1, select bank3
  5198  05F3  058C               	andwf	12,f	;volsfr
  5199  05F4  140C               	bsf	12,0	;volsfr
  5200  05F5  1003               	clrc
  5201  05F6  180C               	btfsc	12,0	;volsfr
  5202  05F7  1403               	setc
  5203  05F8  3000               	movlw	0
  5204  05F9  1803               	skipnc
  5205  05FA  3001               	movlw	1
  5206  05FB  1283               	bcf	3,5	;RP0=0, select bank2
  5207  05FC  1703               	bsf	3,6	;RP1=1, select bank2
  5208  05FD  080C               	movf	12,w	;volatile
  5209  05FE  0008               	return
  5210  05FF                     __end_of_eeprom_read:	
  5211                           
  5212                           	psect	text34
  5213  0D65                     __ptext34:	
  5214 ;; *************** function _AnalogValue *****************
  5215 ;; Defined at:
  5216 ;;		line 817 in file "functions.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  channel         1    wreg     unsigned char 
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;  channel         1    7[BANK0 ] unsigned char 
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      unsigned char 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0, pclath, cstack
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5230 ;;      Params:         0       0       0       0       0
  5231 ;;      Locals:         0       1       0       0       0
  5232 ;;      Temps:          0       1       0       0       0
  5233 ;;      Totals:         0       2       0       0       0
  5234 ;;Total ram usage:        2 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; Hardware stack levels required when called:    3
  5237 ;; This function calls:
  5238 ;;		_DelayDs
  5239 ;; This function is called by:
  5240 ;;		_TransmittedDataHandler
  5241 ;;		_DarknessCheck
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _AnalogValue
  5247  0D65                     _AnalogValue:	
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5251                           ;AnalogValue@channel stored from wreg
  5252  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0D67  00A7               	movwf	AnalogValue@channel
  5255                           
  5256                           ;functions.c: 819: ADCON0bits.CHS = channel;
  5257  0D68  0827               	movf	AnalogValue@channel,w
  5258  0D69  00A6               	movwf	??_AnalogValue
  5259  0D6A  0DA6               	rlf	??_AnalogValue,f
  5260  0D6B  0DA6               	rlf	??_AnalogValue,f
  5261  0D6C  081F               	movf	31,w	;volatile
  5262  0D6D  0626               	xorwf	??_AnalogValue,w
  5263  0D6E  39C3               	andlw	-61
  5264  0D6F  0626               	xorwf	??_AnalogValue,w
  5265  0D70  009F               	movwf	31	;volatile
  5266                           
  5267                           ;functions.c: 820: ADCON0bits.ADON = 1;
  5268  0D71  141F               	bsf	31,0	;volatile
  5269                           
  5270                           ;functions.c: 821: DelayDs(1);
  5271  0D72  3001               	movlw	1
  5272  0D73  00A0               	movwf	DelayDs@cnt
  5273  0D74  3000               	movlw	0
  5274  0D75  00A1               	movwf	DelayDs@cnt+1
  5275  0D76  120A  158A  251F  120A  158A  	fcall	_DelayDs
  5276                           
  5277                           ;functions.c: 822: ADCON0bits.GO = 1;
  5278  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  5279  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  5280  0D7D  149F               	bsf	31,1	;volatile
  5281                           
  5282                           ;functions.c: 823: DelayDs(1);
  5283  0D7E  3001               	movlw	1
  5284  0D7F  00A0               	movwf	DelayDs@cnt
  5285  0D80  3000               	movlw	0
  5286  0D81  00A1               	movwf	DelayDs@cnt+1
  5287  0D82  120A  158A  251F  120A  158A  	fcall	_DelayDs
  5288  0D87                     l408:	
  5289                           ;functions.c: 824: while(ADCON0bits.GO);
  5290                           
  5291  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  5292  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  5293  0D89  189F               	btfsc	31,1	;volatile
  5294  0D8A  2D87               	goto	l408
  5295                           
  5296                           ;functions.c: 825: ADCON0bits.ADON = 0;
  5297  0D8B  101F               	bcf	31,0	;volatile
  5298                           
  5299                           ;functions.c: 826: return ADRESH;
  5300  0D8C  081E               	movf	30,w	;volatile
  5301  0D8D  0008               	return
  5302  0D8E                     __end_of_AnalogValue:	
  5303                           
  5304                           	psect	text35
  5305  0D1F                     __ptext35:	
  5306 ;; *************** function _DelayDs *****************
  5307 ;; Defined at:
  5308 ;;		line 431 in file "functions.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  cnt             2    0[BANK0 ] int 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  i               2    4[BANK0 ] int 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5322 ;;      Params:         0       2       0       0       0
  5323 ;;      Locals:         0       2       0       0       0
  5324 ;;      Temps:          0       2       0       0       0
  5325 ;;      Totals:         0       6       0       0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    2
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_TransmittedDataHandler
  5333 ;;		_Blink
  5334 ;;		_AnalogValue
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           
  5339                           ;psect for function _DelayDs
  5340  0D1F                     _DelayDs:	
  5341                           
  5342                           ;functions.c: 432: int i;
  5343                           ;functions.c: 433: for(i=0;i<cnt;i++){
  5344                           
  5345                           ;incstack = 0
  5346                           ; Regs used in _DelayDs: [wreg+status,2]
  5347  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  5348  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  5349  0D21  01A4               	clrf	DelayDs@i
  5350  0D22  01A5               	clrf	DelayDs@i+1
  5351  0D23                     l338:	
  5352  0D23  0825               	movf	DelayDs@i+1,w
  5353  0D24  3A80               	xorlw	128
  5354  0D25  00A2               	movwf	??_DelayDs
  5355  0D26  0821               	movf	DelayDs@cnt+1,w
  5356  0D27  3A80               	xorlw	128
  5357  0D28  0222               	subwf	??_DelayDs,w
  5358  0D29  1D03               	skipz
  5359  0D2A  2D2D               	goto	u1075
  5360  0D2B  0820               	movf	DelayDs@cnt,w
  5361  0D2C  0224               	subwf	DelayDs@i,w
  5362  0D2D                     u1075:	
  5363  0D2D  1803               	btfsc	3,0
  5364  0D2E  0008               	return
  5365                           
  5366                           ;functions.c: 434: _delay((unsigned long)((100)*(4000000/4000.0)));
  5367  0D2F  3082               	movlw	130
  5368  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  5369  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  5370  0D32  00A3               	movwf	??_DelayDs+1
  5371  0D33  30DD               	movlw	221
  5372  0D34  00A2               	movwf	??_DelayDs
  5373  0D35                     u2217:	
  5374  0D35  0BA2               	decfsz	??_DelayDs,f
  5375  0D36  2D35               	goto	u2217
  5376  0D37  0BA3               	decfsz	??_DelayDs+1,f
  5377  0D38  2D35               	goto	u2217
  5378  0D39  3001               	movlw	1
  5379  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0D3C  07A4               	addwf	DelayDs@i,f
  5382  0D3D  1803               	skipnc
  5383  0D3E  0AA5               	incf	DelayDs@i+1,f
  5384  0D3F  3000               	movlw	0
  5385  0D40  07A5               	addwf	DelayDs@i+1,f
  5386  0D41  2D23               	goto	l338
  5387  0D42                     __end_of_DelayDs:	
  5388                           
  5389                           	psect	text36
  5390  04A9                     __ptext36:	
  5391 ;; *************** function _tc_int *****************
  5392 ;; Defined at:
  5393 ;;		line 746 in file "functions.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;		None
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;		None
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5407 ;;      Params:         0       0       0       0       0
  5408 ;;      Locals:         0       0       0       0       0
  5409 ;;      Temps:          7       0       0       0       0
  5410 ;;      Totals:         7       0       0       0       0
  5411 ;;Total ram usage:        7 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    1
  5414 ;; This function calls:
  5415 ;;		_TimerCounter
  5416 ;;		i1_OperationMode
  5417 ;; This function is called by:
  5418 ;;		Interrupt level 1
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _tc_int
  5424  04A9                     _tc_int:	
  5425                           
  5426                           ;functions.c: 750: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode() < 2))
      +                          {
  5427  04A9  1A86               	btfsc	6,5	;volatile
  5428  04AA  2CC3               	goto	i1l2418
  5429  04AB  0868               	movf	_intBlinkCycle,w
  5430  04AC  0469               	iorwf	_intBlinkCycle+1,w
  5431  04AD  1D03               	btfss	3,2
  5432  04AE  2CC3               	goto	i1l2418
  5433  04AF  120A  158A  242F  120A  118A  	fcall	i1_OperationMode
  5434  04B4  00F5               	movwf	??_tc_int
  5435  04B5  3002               	movlw	2
  5436  04B6  0275               	subwf	??_tc_int,w
  5437  04B7  1803               	skipnc
  5438  04B8  2CC3               	goto	i1l2418
  5439                           
  5440                           ;functions.c: 751: intBlinkCycle = 1;
  5441  04B9  3001               	movlw	1
  5442  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5443  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5444  04BC  00E8               	movwf	_intBlinkCycle
  5445  04BD  3000               	movlw	0
  5446  04BE  00E9               	movwf	_intBlinkCycle+1
  5447                           
  5448                           ;functions.c: 752: intBlinkCounter = 0;
  5449  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  5450  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  5451  04C1  01B1               	clrf	_intBlinkCounter^(0+128)
  5452  04C2  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5453  04C3                     i1l2418:	
  5454                           
  5455                           ;functions.c: 754: }
  5456                           ;functions.c: 755: if(TMR1IF ==1){
  5457  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5458  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5459  04C5  1C0C               	btfss	12,0	;volatile
  5460  04C6  2D68               	goto	L3
  5461                           
  5462                           ;functions.c: 756: TMR1ON = 0;
  5463  04C7  1010               	bcf	16,0	;volatile
  5464                           
  5465                           ;functions.c: 757: TMR1H = 0x0B;
  5466  04C8  300B               	movlw	11
  5467  04C9  008F               	movwf	15	;volatile
  5468                           
  5469                           ;functions.c: 758: TMR1L = 0xDB;
  5470  04CA  30DB               	movlw	219
  5471  04CB  008E               	movwf	14	;volatile
  5472                           
  5473                           ;functions.c: 760: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2)){
  5474  04CC  0368               	decf	_intBlinkCycle,w
  5475  04CD  0469               	iorwf	_intBlinkCycle+1,w
  5476  04CE  1D03               	btfss	3,2
  5477  04CF  2CF6               	goto	i1l2436
  5478  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  5479  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  5480  04D2  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5481  04D3  00F6               	movwf	??_tc_int+1
  5482  04D4  0857               	movf	_intNumberOfBlinks^(0+128),w
  5483  04D5  00F5               	movwf	??_tc_int
  5484  04D6  1003               	clrc
  5485  04D7  0DF5               	rlf	??_tc_int,f
  5486  04D8  0DF6               	rlf	??_tc_int+1,f
  5487  04D9  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5488  04DA  3A80               	xorlw	128
  5489  04DB  00F7               	movwf	??_tc_int+2
  5490  04DC  0876               	movf	??_tc_int+1,w
  5491  04DD  3A80               	xorlw	128
  5492  04DE  0277               	subwf	??_tc_int+2,w
  5493  04DF  1D03               	skipz
  5494  04E0  2CE3               	goto	u203_25
  5495  04E1  0875               	movf	??_tc_int,w
  5496  04E2  0231               	subwf	_intBlinkCounter^(0+128),w
  5497  04E3                     u203_25:	
  5498  04E3  1803               	skipnc
  5499  04E4  2CF6               	goto	i1l2436
  5500                           
  5501                           ;functions.c: 761: intBlinkCounter++;
  5502  04E5  3001               	movlw	1
  5503  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  5504  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  5505  04E8  07B1               	addwf	_intBlinkCounter^(0+128),f
  5506  04E9  1803               	skipnc
  5507  04EA  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5508  04EB  3000               	movlw	0
  5509  04EC  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5510                           
  5511                           ;functions.c: 763: if(PORTCbits.RC1 == 0)
  5512  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  5513  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  5514  04EF  1887               	btfsc	7,1	;volatile
  5515  04F0  2CF3               	goto	i1l397
  5516                           
  5517                           ;functions.c: 764: PORTCbits.RC1 = 1;
  5518  04F1  1487               	bsf	7,1	;volatile
  5519  04F2  2D16               	goto	i1l2444
  5520  04F3                     i1l397:	
  5521                           
  5522                           ;functions.c: 765: else if(PORTCbits.RC1 == 1)
  5523  04F3  1C87               	btfss	7,1	;volatile
  5524  04F4  2D16               	goto	i1l2444
  5525  04F5  2D15               	goto	i1l2442
  5526  04F6                     i1l2436:	
  5527                           ;functions.c: 767: }
  5528                           
  5529                           ;functions.c: 766: PORTCbits.RC1 = 0;
  5530                           
  5531                           
  5532                           ;functions.c: 769: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBlinks*2)
      +                          ){
  5533  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  5534  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  5535  04F8  0368               	decf	_intBlinkCycle,w
  5536  04F9  0469               	iorwf	_intBlinkCycle+1,w
  5537  04FA  1D03               	btfss	3,2
  5538  04FB  2D16               	goto	i1l2444
  5539  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  5540  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  5541  04FE  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5542  04FF  00F6               	movwf	??_tc_int+1
  5543  0500  0857               	movf	_intNumberOfBlinks^(0+128),w
  5544  0501  00F5               	movwf	??_tc_int
  5545  0502  1003               	clrc
  5546  0503  0DF5               	rlf	??_tc_int,f
  5547  0504  0DF6               	rlf	??_tc_int+1,f
  5548  0505  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5549  0506  3A80               	xorlw	128
  5550  0507  00F7               	movwf	??_tc_int+2
  5551  0508  0876               	movf	??_tc_int+1,w
  5552  0509  3A80               	xorlw	128
  5553  050A  0277               	subwf	??_tc_int+2,w
  5554  050B  1D03               	skipz
  5555  050C  2D0F               	goto	u207_25
  5556  050D  0875               	movf	??_tc_int,w
  5557  050E  0231               	subwf	_intBlinkCounter^(0+128),w
  5558  050F                     u207_25:	
  5559  050F  1C03               	skipc
  5560  0510  2D16               	goto	i1l2444
  5561                           
  5562                           ;functions.c: 770: intBlinkCycle = 0;
  5563  0511  1283               	bcf	3,5	;RP0=0, select bank0
  5564  0512  1303               	bcf	3,6	;RP1=0, select bank0
  5565  0513  01E8               	clrf	_intBlinkCycle
  5566  0514  01E9               	clrf	_intBlinkCycle+1
  5567  0515                     i1l2442:	
  5568                           
  5569                           ;functions.c: 771: PORTCbits.RC1 = 0;
  5570  0515  1087               	bcf	7,1	;volatile
  5571  0516                     i1l2444:	
  5572                           
  5573                           ;functions.c: 772: }
  5574                           ;functions.c: 775: intHalfSecondCounter++;
  5575  0516  3001               	movlw	1
  5576  0517  1683               	bsf	3,5	;RP0=1, select bank1
  5577  0518  1303               	bcf	3,6	;RP1=0, select bank1
  5578  0519  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5579  051A  1803               	skipnc
  5580  051B  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5581  051C  3000               	movlw	0
  5582  051D  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5583                           
  5584                           ;functions.c: 776: if(intHalfSecondCounter>=2)
  5585  051E  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5586  051F  3A80               	xorlw	128
  5587  0520  00FF               	movwf	127
  5588  0521  3080               	movlw	128
  5589  0522  027F               	subwf	127,w
  5590  0523  1D03               	skipz
  5591  0524  2D27               	goto	u208_25
  5592  0525  3002               	movlw	2
  5593  0526  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5594  0527                     u208_25:	
  5595  0527  1C03               	skipc
  5596  0528  2D3A               	goto	i1l2454
  5597                           
  5598                           ;functions.c: 777: {
  5599                           ;functions.c: 778: intHalfSecondCounter = 0;
  5600  0529  1683               	bsf	3,5	;RP0=1, select bank1
  5601  052A  1303               	bcf	3,6	;RP1=0, select bank1
  5602  052B  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5603  052C  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5604                           
  5605                           ;functions.c: 779: intSecondCounter++;
  5606  052D  3001               	movlw	1
  5607  052E  1283               	bcf	3,5	;RP0=0, select bank0
  5608  052F  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0530  07EA               	addwf	_intSecondCounter,f
  5610  0531  1803               	skipnc
  5611  0532  0AEB               	incf	_intSecondCounter+1,f
  5612  0533  3000               	movlw	0
  5613  0534  07EB               	addwf	_intSecondCounter+1,f
  5614                           
  5615                           ;functions.c: 780: TimerCounter();
  5616  0535  120A  158A  2685  120A  118A  	fcall	_TimerCounter
  5617  053A                     i1l2454:	
  5618                           
  5619                           ;functions.c: 781: }
  5620                           ;functions.c: 782: if(intSecondCounter >=60)
  5621  053A  1283               	bcf	3,5	;RP0=0, select bank0
  5622  053B  1303               	bcf	3,6	;RP1=0, select bank0
  5623  053C  086B               	movf	_intSecondCounter+1,w
  5624  053D  3A80               	xorlw	128
  5625  053E  00FF               	movwf	127
  5626  053F  3080               	movlw	128
  5627  0540  027F               	subwf	127,w
  5628  0541  1D03               	skipz
  5629  0542  2D45               	goto	u209_25
  5630  0543  303C               	movlw	60
  5631  0544  026A               	subwf	_intSecondCounter,w
  5632  0545                     u209_25:	
  5633  0545  1C03               	skipc
  5634  0546  2D53               	goto	i1l2460
  5635                           
  5636                           ;functions.c: 783: {
  5637                           ;functions.c: 784: intSecondCounter = 0;
  5638  0547  1283               	bcf	3,5	;RP0=0, select bank0
  5639  0548  1303               	bcf	3,6	;RP1=0, select bank0
  5640  0549  01EA               	clrf	_intSecondCounter
  5641  054A  01EB               	clrf	_intSecondCounter+1
  5642                           
  5643                           ;functions.c: 785: intMinuteCounter++;
  5644  054B  3001               	movlw	1
  5645  054C  1683               	bsf	3,5	;RP0=1, select bank1
  5646  054D  1303               	bcf	3,6	;RP1=0, select bank1
  5647  054E  07B7               	addwf	_intMinuteCounter^(0+128),f
  5648  054F  1803               	skipnc
  5649  0550  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5650  0551  3000               	movlw	0
  5651  0552  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5652  0553                     i1l2460:	
  5653                           
  5654                           ;functions.c: 786: }
  5655                           ;functions.c: 787: if(intMinuteCounter >= 60)
  5656  0553  1683               	bsf	3,5	;RP0=1, select bank1
  5657  0554  1303               	bcf	3,6	;RP1=0, select bank1
  5658  0555  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5659  0556  3A80               	xorlw	128
  5660  0557  00FF               	movwf	127
  5661  0558  3080               	movlw	128
  5662  0559  027F               	subwf	127,w
  5663  055A  1D03               	skipz
  5664  055B  2D5E               	goto	u210_25
  5665  055C  303C               	movlw	60
  5666  055D  0237               	subwf	_intMinuteCounter^(0+128),w
  5667  055E                     u210_25:	
  5668  055E  1C03               	skipc
  5669  055F  2D64               	goto	i1l2464
  5670                           
  5671                           ;functions.c: 788: {
  5672                           ;functions.c: 789: intMinuteCounter = 0;
  5673  0560  1683               	bsf	3,5	;RP0=1, select bank1
  5674  0561  1303               	bcf	3,6	;RP1=0, select bank1
  5675  0562  01B7               	clrf	_intMinuteCounter^(0+128)
  5676  0563  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5677  0564                     i1l2464:	
  5678                           
  5679                           ;functions.c: 790: }
  5680                           ;functions.c: 793: TMR1ON = 1;
  5681  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5682  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5683  0566  1410               	bsf	16,0	;volatile
  5684                           
  5685                           ;functions.c: 794: }
  5686                           ;functions.c: 795: TMR1IF = 0;
  5687  0567  100C               	bcf	12,0	;volatile
  5688  0568                     L3:	
  5689                           
  5690                           ;functions.c: 796: RBIF = 0;
  5691  0568  100B               	bcf	11,0	;volatile
  5692                           
  5693                           ;functions.c: 797: GIE = 1;
  5694  0569  178B               	bsf	11,7	;volatile
  5695                           
  5696                           ;functions.c: 798: return;
  5697  056A  087B               	movf	??_tc_int+6,w
  5698  056B  00FF               	movwf	127
  5699  056C  087A               	movf	??_tc_int+5,w
  5700  056D  008A               	movwf	10
  5701  056E  0879               	movf	??_tc_int+4,w
  5702  056F  0084               	movwf	4
  5703  0570  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5704  0571  0083               	movwf	3
  5705  0572  0EFE               	swapf	126,f
  5706  0573  0E7E               	swapf	126,w
  5707  0574  0009               	retfie
  5708  0575                     __end_of_tc_int:	
  5709                           
  5710                           	psect	intentry
  5711  0004                     __pintentry:	
  5712                           ;incstack = 0
  5713 ;; hardware stack exceeded
  5714                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5715                           
  5716  0004                     interrupt_function:	
  5717  007E                     saved_w	set	btemp
  5718  0004  00FE               	movwf	btemp
  5719  0005  0E03               	swapf	3,w
  5720  0006  00F8               	movwf	??_tc_int+3
  5721  0007  0804               	movf	4,w
  5722  0008  00F9               	movwf	??_tc_int+4
  5723  0009  080A               	movf	10,w
  5724  000A  00FA               	movwf	??_tc_int+5
  5725  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5726  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5727  000D  087F               	movf	btemp+1,w
  5728  000E  00FB               	movwf	??_tc_int+6
  5729  000F  120A  118A  2CA9   	ljmp	_tc_int
  5730                           
  5731                           	psect	text37
  5732  0C2F                     __ptext37:	
  5733 ;; *************** function i1_OperationMode *****************
  5734 ;; Defined at:
  5735 ;;		line 878 in file "functions.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  OperationMod    1    1[COMMON] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      unsigned char 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5749 ;;      Params:         0       0       0       0       0
  5750 ;;      Locals:         1       0       0       0       0
  5751 ;;      Temps:          1       0       0       0       0
  5752 ;;      Totals:         2       0       0       0       0
  5753 ;;Total ram usage:        2 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_tc_int
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function i1_OperationMode
  5764  0C2F                     i1_OperationMode:	
  5765                           
  5766                           ;functions.c: 880: unsigned char bracketStatus;
  5767                           ;functions.c: 881: bracketStatus = ((~PORTB) & 0b00000111) ;
  5768                           
  5769                           ;incstack = 0
  5770 ;; hardware stack exceeded
  5771                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5772  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  5773  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  5774  0C31  0906               	comf	6,w	;volatile
  5775  0C32  3907               	andlw	7
  5776  0C33  00F0               	movwf	??i1_OperationMode
  5777  0C34  0870               	movf	??i1_OperationMode,w
  5778  0C35  00F1               	movwf	i1OperationMode@bracketStatus
  5779                           
  5780                           ;functions.c: 883: return bracketStatus;
  5781  0C36  0871               	movf	i1OperationMode@bracketStatus,w
  5782  0C37  0008               	return
  5783  0C38                     __end_ofi1_OperationMode:	
  5784                           
  5785                           	psect	text38
  5786  0E85                     __ptext38:	
  5787 ;; *************** function _TimerCounter *****************
  5788 ;; Defined at:
  5789 ;;		line 355 in file "functions.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;		None
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  i               2    3[COMMON] int 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  1    wreg      void 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5803 ;;      Params:         0       0       0       0       0
  5804 ;;      Locals:         2       0       0       0       0
  5805 ;;      Temps:          3       0       0       0       0
  5806 ;;      Totals:         5       0       0       0       0
  5807 ;;Total ram usage:        5 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_tc_int
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           
  5817                           ;psect for function _TimerCounter
  5818  0E85                     _TimerCounter:	
  5819                           
  5820                           ;functions.c: 357: for (int i = 0; i < 5; i++)
  5821                           
  5822                           ;incstack = 0
  5823 ;; hardware stack exceeded
  5824                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5825  0E85  01F3               	clrf	TimerCounter@i
  5826  0E86  01F4               	clrf	TimerCounter@i+1
  5827  0E87                     L4:	
  5828  0E87  0874               	movf	TimerCounter@i+1,w
  5829  0E88  3A80               	xorlw	128
  5830  0E89  00FF               	movwf	127
  5831  0E8A  3080               	movlw	128
  5832  0E8B  027F               	subwf	127,w
  5833  0E8C  1D03               	skipz
  5834  0E8D  2E90               	goto	u187_25
  5835  0E8E  3005               	movlw	5
  5836  0E8F  0273               	subwf	TimerCounter@i,w
  5837  0E90                     u187_25:	
  5838  0E90  1803               	btfsc	3,0
  5839  0E91  0008               	return
  5840                           
  5841                           ;functions.c: 358: {
  5842                           ;functions.c: 359: if(intClockTimer[i]>0)
  5843  0E92  0873               	movf	TimerCounter@i,w
  5844  0E93  00F0               	movwf	??_TimerCounter
  5845  0E94  0770               	addwf	??_TimerCounter,w
  5846  0E95  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5847  0E96  0084               	movwf	4
  5848  0E97  1383               	bcf	3,7	;select IRP bank1
  5849  0E98  0800               	movf	0,w
  5850  0E99  00F1               	movwf	??_TimerCounter+1
  5851  0E9A  0A84               	incf	4,f
  5852  0E9B  0800               	movf	0,w
  5853  0E9C  00F2               	movwf	??_TimerCounter+2
  5854  0E9D  0872               	movf	??_TimerCounter+2,w
  5855  0E9E  3A80               	xorlw	128
  5856  0E9F  00FF               	movwf	127
  5857  0EA0  3080               	movlw	128
  5858  0EA1  027F               	subwf	127,w
  5859  0EA2  1D03               	skipz
  5860  0EA3  2EA6               	goto	u188_25
  5861  0EA4  3001               	movlw	1
  5862  0EA5  0271               	subwf	??_TimerCounter+1,w
  5863  0EA6                     u188_25:	
  5864  0EA6  1C03               	skipc
  5865  0EA7  2EBA               	goto	i1l2360
  5866                           
  5867                           ;functions.c: 360: intClockTimer[i]--;
  5868  0EA8  0873               	movf	TimerCounter@i,w
  5869  0EA9  00F0               	movwf	??_TimerCounter
  5870  0EAA  0770               	addwf	??_TimerCounter,w
  5871  0EAB  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5872  0EAC  0084               	movwf	4
  5873  0EAD  30FF               	movlw	255
  5874  0EAE  1383               	bcf	3,7	;select IRP bank1
  5875  0EAF  0780               	addwf	0,f
  5876  0EB0  0F84               	incfsz	4,f
  5877  0EB1  0800               	movf	0,w
  5878  0EB2  1803               	skipnc
  5879  0EB3  0A00               	incf	0,w
  5880  0EB4  00FF               	movwf	127
  5881  0EB5  30FF               	movlw	255
  5882  0EB6  077F               	addwf	127,w
  5883  0EB7  0080               	movwf	0
  5884  0EB8  0384               	decf	4,f
  5885  0EB9  2EC0               	goto	i1l2362
  5886  0EBA                     i1l2360:	
  5887                           
  5888                           ;functions.c: 361: else
  5889                           ;functions.c: 362: bTimerComplete[i] = 1;
  5890  0EBA  0873               	movf	TimerCounter@i,w
  5891  0EBB  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5892  0EBC  0084               	movwf	4
  5893  0EBD  1383               	bcf	3,7	;select IRP bank1
  5894  0EBE  0180               	clrf	0
  5895  0EBF  0A80               	incf	0,f
  5896  0EC0                     i1l2362:	
  5897  0EC0  3001               	movlw	1
  5898  0EC1  07F3               	addwf	TimerCounter@i,f
  5899  0EC2  1803               	skipnc
  5900  0EC3  0AF4               	incf	TimerCounter@i+1,f
  5901  0EC4  3000               	movlw	0
  5902  0EC5  07F4               	addwf	TimerCounter@i+1,f
  5903  0EC6  2E87               	goto	L4
  5904  0EC7                     __end_of_TimerCounter:	
  5905  007E                     btemp	set	126	;btemp
  5906  007E                     wtemp0	set	126


Data Sizes:
    Strings     116
    Constant    39
    Data        3
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      57
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[8]), STR_16(CODE[8]), TransmittedDataHandler@slask_746(BANK0[8]), TransmittedDataHandler@slask_743(BANK0[8]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_9(CODE[14]), STR_8(CODE[14]), 
		 -> TransmittedDataHandler@slask_734(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   66739
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   18686
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15521
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1805
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   10039
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     796
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10724
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     754
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1460
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     754
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     708
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     686
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      39       7       71.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Jan 03 14:54:30 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006E                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l332 0F6E                               l317 0E83  
                             l408 0D87                               l344 0C64                               l338 0D23  
                             l434 05E1                               l282 0490                               l266 0195  
                             l293 0CE7                               l368 07F8                               l456 0DE6  
                             l298 0C58                               l546 0D4E                               l950 0ECA  
                             l938 0CBD                               _GIE 005F             __end_of_DarknessCheck 0DB7  
                             fsr0 0004                               indf 0000               __end_of_FindChannel 02ED  
  __end_of_TransmittedDataHandler 01ED                   ??_timerFunction 0024                      __CFG_LVP$OFF 0000  
                            l2000 0726                              l2002 071F                              l2020 0749  
                            l2012 073F                              l2004 072B                              l2022 0777  
                            l2110 012E                              l2120 0159                              l2104 010C  
                            l2018 0745                              l2028 0788                              l2140 01BA  
                            l2134 0198                              l2126 0175                              l2118 014F  
                            l2310 0FDB                              l2128 017F                              l2072 0073  
                            l2312 0FEE                              l2090 00C4                              l2082 009E  
                            l2402 070F                              l2156 0E53                              l2340 05BE  
                            l2166 0E68                              l2184 0E19                              l2264 03D2  
                            l2344 05C7                              l2336 05AA                              l2274 0CDC  
                            l2290 0C93                              l2098 00EA                              l1814 02C7  
                            l1822 02EB                              l2390 06EB                              l2382 06D1  
                            l1816 02A1                              l2296 0CA4                              l1770 07B9  
                            l1818 02D8                              l1922 0F0F                              l1930 0F46  
                            l2394 06F8                              l2386 06DE                              l2378 06C4  
                            l1772 07C8                              l1852 0D46                              l1908 0CC6  
                            l1774 07D7                              l1766 079D                              l1934 0F4F  
                            l2398 0705                              l1768 07AA                              l1872 0C84  
                            l1880 0DBE                              l1928 0F2D                              l1778 07E5  
                            l1954 0412                              l1882 0DCD                              l1972 044A  
                            l1956 0425                              l1892 0EE9                              l1990 0D9B  
                            l1798 0213                              l1974 048B                              l1896 0EFF  
                            l1994 0DB4                              l1978 0493                              l1898 0F08  
                            l1996 0DB5       __size_of_TransiverToReceive 005C                              STR_1 0664  
                            STR_2 066C                              STR_3 0691                              STR_4 0683  
                            STR_5 0674                              STR_6 068A                              STR_7 0653  
                            STR_8 0645                              STR_9 0637                              u1105 02AC  
                            u1131 05DF                              u1115 02E9                              u1075 0D2D  
                            u1155 0D4F                              u1085 0211                              u1165 0D56  
                            u2117 06B8                              u2207 02D3                              u2127 0FBF  
                            u2217 0D35                              u2137 0FF8                              u2147 05CD  
                            u2157 03F6                              u2167 042F                              u2177 0497  
                            u2187 04A4                              u1715 0E23                              u2197 01FE  
                            u1835 059A                              _RBIF 0058                              _WREN 0C62  
                  ??_eeprom_write 0021                              _atoi 071C                              _main 06AB  
                            _init 0F51                              btemp 007E                              start 0012  
                   __CFG_IESO$OFF 0000                   __end_of_DelayDs 0D42                  TransmittString@i 003A  
__size_of_LightWithSensController 003F                   __end_of_ReadSPI 0C27                             ?_atoi 0026  
                           ?_main 0070                             ?_init 0070                             _EEADR 010D  
                           STR_10 067C                             STR_11 06A7                             STR_12 06A3  
                           STR_13 065C                             STR_14 069E                             STR_15 0698  
                           STR_16 0664                             STR_17 066C                     __CFG_WDTE$OFF 0000  
                           _CARRY 0018                             _ANSEL 0188             __end_of_OperationMode 0C41  
                           _T1CON 0010                             i1l397 04F3                             _TMR1H 000F  
                           _TMR1L 000E                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _SSPIE 0463                             _Blink 0E13  
                           _bDark 006D                    __CFG_FCMEN$OFF 0000                   __end_of_isdigit 0C86  
                     _AnalogValue 0D65                             atoi@a 002B                             atoi@s 002D  
                  __CFG_BOREN$OFF 0000                             pclath 000A                   ??_TransiverInit 0035  
                           status 0003                     _intBlinkCycle 0068                             wtemp0 007E  
                  WriteSPI@buffer 0021                  __end_of_ChannelP 061D                  __end_of_ChannelR 062A  
                __end_of_ChannelS 0637                   __end_of_strncmp 0F0B                    __CFG_MCLRE$OFF 0000  
                   _intClockTimer 00A0                 _intNumberOfBlinks 00D7                   __initialization 0015  
                    __end_of_atoi 078D                      __end_of_main 071C                      __end_of_init 0FA4  
                __end_of_ReadFIFO 0C76                     ReadFIFO@value 0024                       _FindChannel 01ED  
                   ??_RegisterSet 0028                            ??_atoi 0028                            ??_main 0065  
                          ??_init 0020                            ?_Blink 0026                            _ADRESH 001E  
                          _EEDATA 010C                            _EECON1 018C                            _EECON2 018D  
                          _ANSELH 0189                  __end_of_WriteSPI 0C68                            i1l2360 0EBA  
                          i1l2362 0EC0                            i1l2442 0515                            i1l2418 04C3  
                          i1l2460 0553                            i1l2444 0516                            i1l2436 04F6  
                          i1l2454 053A                            i1l2464 0564                            u210_25 055E  
                          u203_25 04E3                            u207_25 050F                            u208_25 0527  
                          u209_25 0545                         ??_DelayDs 0022                            Blink@i 0029  
                          Blink@n 0026                            u187_25 0E90                            u188_25 0EA6  
                          _TMR1IF 0060                            _TMR1ON 0080      i1OperationMode@bracketStatus 0071  
                          _SSPBUF 0013                         ??_ReadSPI 0023                            _Mode_0 07FC  
                          _Mode_1 0CCF                            _Mode_2 0C4D                            _Mode_4 0C86  
                          _Mode_5 0C97                __size_of_SetRFMode 006F              __size_of_eeprom_read 0024  
                          ___wmul 0D42                            _tc_int 04A9              __end_of_eeprom_write 0E13  
                          _strchr 0CBA                            _strlen 0DB7                            _strstr 0F0B  
                       ??_isdigit 0020                            saved_w 007E               __end_of_RegisterSet 0D03  
                   ?_RegisterRead 0070                RegisterRead@adress 0026       TransmittedDataHandler@slask 003D  
     TransmittedDataHandler@value 005D                         ??_strncmp 002B                __size_of_WriteFIFO 000C  
         __end_of__initialization 0044                   eeprom_read@addr 0021           _LightWithSensController 0E46  
                   _bChannelFound 006C                     __end_of_Blink 0E46                    __pcstackCOMMON 0070  
                    __pidataBANK0 05FF                      __pidataBANK1 0C1D                      _channelFound 00AF  
                  _OPTION_REGbits 0081                           ??_Blink 0028                 __end_of_SetRFMode 07FC  
               eeprom_write@value 0020                    ??_RegisterRead 0023                        __pbssBANK0 0068  
                      __pbssBANK1 00A0                        __pbssBANK3 0190          __size_ofi1_OperationMode 0009  
                       ?_ReadFIFO 0070        timerFunction@intSetSeconds 0022                AnalogValue@channel 0027  
                         ?_Mode_0 0070                           ?_Mode_1 0070                           ?_Mode_2 0070  
                         ?_Mode_4 0070                           ?_Mode_5 0070          __size_of_TransmittString 00D2  
                      __pmaintext 06AB                           ?___wmul 0020                        __pintentry 0004  
                         ?_tc_int 0070                         ?_WriteSPI 0070                 __end_of_WriteFIFO 0C4D  
                         ?_strchr 0020                           ?_strlen 0020                       _RegisterSet 0CE9  
                         ?_strstr 002E                     ?_TimerCounter 0070        __end_of_TransiverToReceive 1000  
           __end_of_timerFunction 0CBA                      ?_AnalogValue 0070                        __stringtab 0600  
                      ??_ReadFIFO 0023                           _DelayDs 0D1F         ??_LightWithSensController 002A  
                         _ReadSPI 0C1F            __size_of_DarknessCheck 0029                   __size_of_Mode_0 0004  
                 __size_of_Mode_1 001A                   __size_of_Mode_2 000D                   __size_of_Mode_4 0011  
                 __size_of_Mode_5 0011        OperationMode@bracketStatus 0021             __size_of_eeprom_write 0030  
                 __size_of___wmul 0023                      ?_FindChannel 0070                         _ANSELbits 0188  
                      ??_WriteSPI 0020                   __size_of_tc_int 00CC                           __ptext1 0F51  
                         __ptext2 0FA4                           __ptext3 0575                           __ptext4 0048  
                         __ptext5 0F0B                           __ptext6 0EC7                           __ptext7 0DB7  
                         __ptext8 0CBA                           __ptext9 0DE3                   __size_of_strchr 0015  
                 __size_of_strlen 002C                         _T1CONbits 0010                   __size_of_strstr 0046  
                         _isdigit 0C76                    ??_TimerCounter 0070                           clrloop0 0C28  
                         _strncmp 0EC7              end_of_initialization 0044                      _eeprom_write 0DE3  
           __end_of_TransiverInit 03D7            __size_of_OperationMode 0009                 ??i1_OperationMode 0070  
                WriteSPI@databyte 0022              __end_of_RegisterRead 0D1F                     WriteFIFO@Data 0023  
        ??_TransmittedDataHandler 003C                           strlen@s 0026                   _intBlinkCounter 00B1  
               ??_TransmittString 0037                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                     _DarknessCheck 0D8E                     ??_eeprom_read 0020  
                  __end_of_Mode_0 0800                    __end_of_Mode_1 0CE9                    __end_of_Mode_2 0C5A  
                  __end_of_Mode_4 0C97                    __end_of_Mode_5 0CA8                    __end_of___wmul 0D65  
                  __end_of_tc_int 0575                    ?_DarknessCheck 0070                     _OperationMode 0C38  
                  __end_of_strchr 0CCF                    __end_of_strlen 0DE3                    __end_of_strstr 0F51  
             start_initialization 0015             _intDarkCheckIntervall 00B3        DarknessCheck@darknessValue 0029  
                       _SetRFMode 078D              __size_of_AnalogValue 0029                 __size_of_ReadFIFO 000E  
        __CFG_FOSC$INTRC_NOCLKOUT 0000                          ??_Mode_0 002A                          ??_Mode_1 002A  
                        ??_Mode_2 002A                          ??_Mode_4 003C                          ??_Mode_5 003C  
            __end_of_TimerCounter 0EC7                          ??___wmul 0024               __end_of_eeprom_read 05FF  
                   TimerCounter@i 0073                       __pdataBANK0 006F                       __pdataBANK1 00D7  
                        ??_tc_int 0075   __size_of_TransmittedDataHandler 01A5                      ?_RegisterSet 0027  
                        ??_strchr 0022                          ??_strlen 0022                          ??_strstr 002F  
                  ?_OperationMode 0070              __size_of_FindChannel 0100         TransmittString@dataString 0035  
               RegisterRead@value 0025                 __size_of_WriteSPI 000E                       __pbssCOMMON 007C  
                       ___latbits 0002                         _WriteFIFO 0C41                     __pcstackBANK0 0020  
                    _ReceivedData 0190            SetRFMode@mcparam0_read 002D                      _isdigit$1118 0020  
                      ?_SetRFMode 0070                  eeprom_write@addr 0022                          ?_DelayDs 0020  
               RegisterSet@adress 002A                          ?_ReadSPI 0070             __size_of_RegisterRead 001C  
              _TransiverToReceive 0FA4               ?_TransiverToReceive 0070                   ??_DarknessCheck 0028  
                       __pstrings 0600                          ?_isdigit 0070       timerFunction@intTimerNumber 0020  
                  __size_of_Blink 0033                        ?_WriteFIFO 0070                   i1_OperationMode 0C2F  
            ??_TransiverToReceive 0035                      _RegisterRead 0D03                          ?_strncmp 0028  
          _TransmittedDataHandler 0048                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                          DelayDs@i 0024                      FindChannel@i 0033  
                       clear_ram0 0C27                       _eeprom_read 05DB                          _PIE1bits 008C  
                 _TransmittString 03D7                          _PIR1bits 000C            __size_of_timerFunction 0012  
                 ??_OperationMode 0020                     SetRFMode@mode 002C                        _ADCON0bits 001F  
                     __stringbase 060F                        _ADCON1bits 009F                 ___wmul@multiplier 0020  
                        _WPUBbits 0095                          _ChannelP 0610                          _ChannelR 061D  
                        _ChannelS 062A          ?_LightWithSensController 0070                       ??_SetRFMode 002B  
                        _ReadFIFO 0C68             __size_of_TimerCounter 0042                  __size_of_DelayDs 0023  
                __size_of_ReadSPI 0008                    _bTimerComplete 00AA                  _intMinuteCounter 00B7  
               _TransiverReadFIFO 0575                          _WriteSPI 0C5A                __end_of__stringtab 0610  
                _intSecondCounter 006A                ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0C38  
          __size_of_TransiverInit 00EA              __size_of_RegisterSet 001A                  RegisterSet@value 0027  
                     ??_WriteFIFO 0023                  __size_of_isdigit 0010                      _TimerCounter 0E85  
                        __ptext10 071C                          __ptext11 0C76                          __ptext20 0C41  
                        __ptext12 0D42                          __ptext21 01ED                          __ptext13 0C38  
                        __ptext30 0E46                          __ptext22 078D                          __ptext14 0C68  
                        __ptext31 0CA8                          __ptext23 0CE9                          __ptext15 02ED  
                        __ptext32 0D8E                          __ptext24 0D03                          __ptext16 0E13  
                        __ptext33 05DB                          __ptext25 0C1F                          __ptext17 0C97  
                        __ptext34 0D65                          __ptext26 0C5A                          __ptext18 0C86  
                        __ptext35 0D1F                          __ptext27 0C4D                          __ptext19 03D7  
                        __ptext36 04A9                          __ptext28 0CCF                          __ptext37 0C2F  
                        __ptext29 07FC                          __ptext38 0E85               ??_TransiverReadFIFO 005F  
                   _timerFunction 0CA8           __end_of_TransmittString 04A9   TransmittedDataHandler@slask_734 0045  
 TransmittedDataHandler@slask_743 004D   TransmittedDataHandler@slask_746 0055                  __size_of_strncmp 0044  
                   __size_of_atoi 0071                     __size_of_main 0071                     __size_of_init 0053  
                      strncmp@len 0029                     _bValueFromPot 006F         __end_of_TransiverReadFIFO 05DB  
                        atoi@sign 002A                        DelayDs@cnt 0020                    FindChannel@cnt 0031  
 __end_of_LightWithSensController 0E85              _intHalfSecondCounter 00B5                        _INTCONbits 000B  
              TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063                          isdigit@c 0021  
                  ?_timerFunction 0020                     ??_AnalogValue 0026                 _TransmittedString 00B9  
                        intlevel1 0000                         strchr@chr 0020                         strchr@ptr 0022  
                   _TransiverInit 02ED                         strncmp@s1 002D                         strncmp@s2 0028  
                       stringcode 060A                        _OSCCONbits 008F                     ??_FindChannel 002E  
                ?i1_OperationMode 0070                          strlen@cp 0027                          stringdir 060A  
                        stringtab 0600           ?_TransmittedDataHandler 0070                          strstr@s1 0032  
                        strstr@s2 002E                  ?_TransmittString 0035                     ?_eeprom_write 0020  
                  ?_TransiverInit 0070                      ?_eeprom_read 0070               __end_of_AnalogValue 0D8E  
                      _SSPCONbits 0014              _addressDarknessValue 007C  
