

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Mar 16 18:11:29 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	dabs	1,0x7E,2
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387                           
   388                           	psect	idataBANK0
   389  07FD                     __pidataBANK0:	
   390                           
   391                           ;initializer for _intNumberOfBlinks
   392  07FD  3458               	retlw	88
   393  07FE  3402               	retlw	2
   394                           
   395                           ;initializer for _bValueFromPot
   396  07FF  3401               	retlw	1
   397                           
   398                           	psect	strings
   399  1000                     __pstrings:	
   400  1000                     stringtab:	
   401  1000                     __stringtab:	
   402  1000                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405  1000                     stringdir:	
   406  1000  3010               	movlw	high stringdir
   407  1001  008A               	movwf	10
   408  1002  0804               	movf	4,w
   409  1003  0A84               	incf	4,f
   410  1004  0782               	addwf	2,f
   411  1005                     __stringbase:	
   412  1005  3400               	retlw	0
   413  1006                     __end_of__stringtab:	
   414  1006                     _ChannelP:	
   415  1006  343F               	retlw	63
   416  1007  3447               	retlw	71
   417  1008  344F               	retlw	79
   418  1009  3457               	retlw	87
   419  100A  345F               	retlw	95
   420  100B  3477               	retlw	119
   421  100C  347E               	retlw	126
   422  100D  347F               	retlw	127
   423  100E  3486               	retlw	134
   424  100F  3487               	retlw	135
   425  1010  3437               	retlw	55
   426  1011  3467               	retlw	103
   427  1012  346F               	retlw	111
   428  1013                     __end_of_ChannelP:	
   429  1013                     _ChannelR:	
   430  1013  344F               	retlw	79
   431  1014  3459               	retlw	89
   432  1015  3463               	retlw	99
   433  1016  346D               	retlw	109
   434  1017  3477               	retlw	119
   435  1018  3495               	retlw	149
   436  1019  349F               	retlw	159
   437  101A  349F               	retlw	159
   438  101B  34A9               	retlw	169
   439  101C  34A9               	retlw	169
   440  101D  3445               	retlw	69
   441  101E  3481               	retlw	129
   442  101F  348B               	retlw	139
   443  1020                     __end_of_ChannelR:	
   444  1020                     _ChannelS:	
   445  1020  3418               	retlw	24
   446  1021  341B               	retlw	27
   447  1022  341E               	retlw	30
   448  1023  3421               	retlw	33
   449  1024  3424               	retlw	36
   450  1025  342D               	retlw	45
   451  1026  347B               	retlw	123
   452  1027  3430               	retlw	48
   453  1028  347E               	retlw	126
   454  1029  3433               	retlw	51
   455  102A  3415               	retlw	21
   456  102B  3427               	retlw	39
   457  102C  342A               	retlw	42
   458  102D                     __end_of_ChannelS:	
   459  001F                     _ADCON0bits	set	31
   460  001E                     _ADRESH	set	30
   461  000B                     _INTCONbits	set	11
   462  000C                     _PIR1bits	set	12
   463  0005                     _PORTA	set	5
   464  0006                     _PORTB	set	6
   465  0007                     _PORTC	set	7
   466  0008                     _PORTD	set	8
   467  0009                     _PORTE	set	9
   468  0013                     _SSPBUF	set	19
   469  0014                     _SSPCONbits	set	20
   470  0010                     _T1CON	set	16
   471  0010                     _T1CONbits	set	16
   472  000F                     _TMR1H	set	15
   473  000E                     _TMR1L	set	14
   474  0018                     _CARRY	set	24
   475  005F                     _GIE	set	95
   476  0029                     _RA1	set	41
   477  002C                     _RA4	set	44
   478  002D                     _RA5	set	45
   479  0030                     _RB0	set	48
   480  0031                     _RB1	set	49
   481  0033                     _RB3	set	51
   482  0034                     _RB4	set	52
   483  0035                     _RB5	set	53
   484  0058                     _RBIF	set	88
   485  0038                     _RC0	set	56
   486  0039                     _RC1	set	57
   487  003A                     _RC2	set	58
   488  0043                     _RD3	set	67
   489  0044                     _RD4	set	68
   490  0060                     _TMR1IF	set	96
   491  0080                     _TMR1ON	set	128
   492  009F                     _ADCON1bits	set	159
   493  0096                     _IOCBbits	set	150
   494  0081                     _OPTION_REGbits	set	129
   495  008F                     _OSCCONbits	set	143
   496  008C                     _PIE1bits	set	140
   497  0094                     _SSPSTATbits	set	148
   498  0085                     _TRISA	set	133
   499  0086                     _TRISB	set	134
   500  0087                     _TRISC	set	135
   501  0088                     _TRISD	set	136
   502  0089                     _TRISE	set	137
   503  0095                     _WPUBbits	set	149
   504  0463                     _SSPIE	set	1123
   505  010D                     _EEADR	set	269
   506  010C                     _EEDATA	set	268
   507  0188                     _ANSEL	set	392
   508  0189                     _ANSELH	set	393
   509  0189                     _ANSELHbits	set	393
   510  0188                     _ANSELbits	set	392
   511  018C                     _EECON1	set	396
   512  018D                     _EECON2	set	397
   513  0C60                     _RD	set	3168
   514  0C61                     _WR	set	3169
   515  0C62                     _WREN	set	3170
   516  102D                     STR_1:	
   517  102D  344E               	retlw	78	;'N'
   518  102E  3431               	retlw	49	;'1'
   519  102F  3442               	retlw	66	;'B'
   520  1030  344C               	retlw	76	;'L'
   521  1031  3449               	retlw	73	;'I'
   522  1032  344E               	retlw	78	;'N'
   523  1033  344B               	retlw	75	;'K'
   524  1034  3400               	retlw	0
   525  1035                     STR_2:	
   526  1035  344E               	retlw	78	;'N'
   527  1036  3432               	retlw	50	;'2'
   528  1037  3442               	retlw	66	;'B'
   529  1038  344C               	retlw	76	;'L'
   530  1039  3449               	retlw	73	;'I'
   531  103A  344E               	retlw	78	;'N'
   532  103B  344B               	retlw	75	;'K'
   533  103C  3400               	retlw	0
   534                           
   535                           ; #config settings
   536  0000                     
   537                           	psect	cinit
   538  0015                     start_initialization:	
   539  0015                     __initialization:	
   540                           
   541                           ; Initialize objects allocated to BANK0
   542  0015  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   543  001A  00E1               	movwf	__pdataBANK0& (0+127)
   544  001B  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   545  0020  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   546  0021  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   547  0026  00E3               	movwf	(__pdataBANK0+2)& (0+127)
   548                           
   549                           ; Clear objects allocated to BANK3
   550  0027  1783               	bsf	3,7	;select IRP bank2
   551  0028  3090               	movlw	low __pbssBANK3
   552  0029  0084               	movwf	4
   553  002A  30B8               	movlw	low (__pbssBANK3+40)
   554  002B  160A  118A  2460  120A  118A  	fcall	clear_ram0
   555                           
   556                           ; Clear objects allocated to BANK1
   557  0030  1683               	bsf	3,5	;RP0=1, select bank1
   558  0031  1303               	bcf	3,6	;RP1=0, select bank1
   559  0032  01D6               	clrf	__pbssBANK1& (0+127)
   560  0033  01D7               	clrf	(__pbssBANK1+1)& (0+127)
   561                           
   562                           ; Clear objects allocated to BANK0
   563  0034  1383               	bcf	3,7	;select IRP bank0
   564  0035  3043               	movlw	low __pbssBANK0
   565  0036  0084               	movwf	4
   566  0037  3061               	movlw	low (__pbssBANK0+30)
   567  0038  160A  118A  2460   	fcall	clear_ram0
   568  003B                     end_of_initialization:	
   569                           ;End of C runtime variable initialization code
   570                           
   571  003B                     __end_of__initialization:	
   572  003B  0183               	clrf	3
   573  003C  120A  158A  2F16   	ljmp	_main	;jump to C main() function
   574                           
   575                           	psect	bssBANK0
   576  0043                     __pbssBANK0:	
   577  0043                     _intClockTimer:	
   578  0043                     	ds	10
   579  004D                     _bTimerComplete:	
   580  004D                     	ds	5
   581  0052                     _channelFound:	
   582  0052                     	ds	2
   583  0054                     _intBlinkCounter:	
   584  0054                     	ds	2
   585  0056                     _intBlinkCycle:	
   586  0056                     	ds	2
   587  0058                     _intDarkCheckIntervall:	
   588  0058                     	ds	2
   589  005A                     _intHalfSecondCounter:	
   590  005A                     	ds	2
   591  005C                     _intMinuteCounter:	
   592  005C                     	ds	2
   593  005E                     _intSecondCounter:	
   594  005E                     	ds	2
   595  0060                     _bChannelFound:	
   596  0060                     	ds	1
   597                           
   598                           	psect	dataBANK0
   599  0061                     __pdataBANK0:	
   600  0061                     _intNumberOfBlinks:	
   601  0061                     	ds	2
   602  0063                     _bValueFromPot:	
   603  0063                     	ds	1
   604                           
   605                           	psect	bssBANK1
   606  00D6                     __pbssBANK1:	
   607  00D6                     _bDark:	
   608  00D6                     	ds	1
   609  00D7                     _bTransiverModeReceive:	
   610  00D7                     	ds	1
   611                           
   612                           	psect	bssBANK3
   613  0190                     __pbssBANK3:	
   614  0190                     _ReceivedData:	
   615  0190                     	ds	40
   616                           
   617                           	psect	clrtext
   618  1460                     clear_ram0:	
   619                           ;	Called with FSR containing the base address, and
   620                           ;	W with the last address+1
   621                           
   622  1460  0064               	clrwdt	;clear the watchdog before getting into this loop
   623  1461                     clrloop0:	
   624  1461  0180               	clrf	0	;clear RAM location pointed to by FSR
   625  1462  0A84               	incf	4,f	;increment pointer
   626  1463  0604               	xorwf	4,w	;XOR with final address
   627  1464  1903               	btfsc	3,2	;have we reached the end yet?
   628  1465  3400               	retlw	0	;all done for this memory range, return
   629  1466  0604               	xorwf	4,w	;XOR again to restore value
   630  1467  2C61               	goto	clrloop0	;do the next byte
   631                           
   632                           	psect	cstackBANK3
   633  01B8                     __pcstackBANK3:	
   634  01B8                     TransiverReadFIFO@ReceivedString:	
   635                           
   636                           ; 30 bytes @ 0x0
   637  01B8                     	ds	30
   638  01D6                     TransiverReadFIFO@i:	
   639                           
   640                           ; 2 bytes @ 0x1E
   641  01D6                     	ds	2
   642  01D8                     TransiverReadFIFO@j:	
   643                           
   644                           ; 2 bytes @ 0x20
   645  01D8                     	ds	2
   646                           
   647                           	psect	cstackBANK1
   648  00A0                     __pcstackBANK1:	
   649  00A0                     ??_PICInit:	
   650  00A0                     ??_OperationMode:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  00A0                     ?_timerFunction:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  00A0                     ?_DelayDs:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  00A0                     ?_eeprom_write:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  00A0                     ??_eeprom_read:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  00A0                     ?_strchr:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  00A0                     ??_WriteSPI:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  00A0                     ?_strlen:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  00A0                     eeprom_write@value:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  00A0                     timerFunction@intTimerNumber:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  00A0                     DelayDs@cnt:	
   681                           ; 2 bytes @ 0x0
   682                           
   683  00A0                     strchr@chr:	
   684                           ; 2 bytes @ 0x0
   685                           
   686                           
   687                           ; 2 bytes @ 0x0
   688  00A0                     	ds	1
   689  00A1                     ??_eeprom_write:	
   690  00A1                     WriteSPI@buffer:	
   691                           ; 1 bytes @ 0x1
   692                           
   693  00A1                     OperationMode@bracketStatus:	
   694                           ; 1 bytes @ 0x1
   695                           
   696  00A1                     eeprom_read@addr:	
   697                           ; 1 bytes @ 0x1
   698                           
   699                           
   700                           ; 1 bytes @ 0x1
   701  00A1                     	ds	1
   702  00A2                     ??_DelayDs:	
   703  00A2                     ??_strlen:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  00A2                     ??_strchr:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  00A2                     ?_ReadMemoryAdress:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  00A2                     WriteSPI@databyte:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  00A2                     ReadMemoryAdress@var2:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  00A2                     eeprom_write@addr:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  00A2                     strchr@ptr:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  00A2                     timerFunction@intSetSeconds:	
   725                           ; 1 bytes @ 0x2
   726                           
   727                           
   728                           ; 2 bytes @ 0x2
   729  00A2                     	ds	1
   730  00A3                     ??_ClockInit:	
   731  00A3                     ??_read_ram_status:	
   732                           ; 1 bytes @ 0x3
   733                           
   734  00A3                     ??_ResetMemoryAdress:	
   735                           ; 1 bytes @ 0x3
   736                           
   737  00A3                     ??_RegisterRead:	
   738                           ; 1 bytes @ 0x3
   739                           
   740  00A3                     ??_ReadFIFO:	
   741                           ; 1 bytes @ 0x3
   742                           
   743  00A3                     ??_WriteFIFO:	
   744                           ; 1 bytes @ 0x3
   745                           
   746  00A3                     ??_ReadSPI:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  00A3                     WriteFIFO@Data:	
   750                           ; 1 bytes @ 0x3
   751                           
   752  00A3                     ReadMemoryAdress@var1:	
   753                           ; 1 bytes @ 0x3
   754                           
   755                           
   756                           ; 1 bytes @ 0x3
   757  00A3                     	ds	1
   758  00A4                     ??_timerFunction:	
   759  00A4                     ??_ReadMemoryAdress:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  00A4                     ReadFIFO@value:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  00A4                     read_ram_status@status:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  00A4                     ClockInit@cnt:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  00A4                     DelayDs@i:	
   772                           ; 1 bytes @ 0x4
   773                           
   774                           
   775                           ; 2 bytes @ 0x4
   776  00A4                     	ds	1
   777  00A5                     ??_write_ram_status:	
   778  00A5                     ??_ram_bulk_erase:	
   779                           ; 1 bytes @ 0x5
   780                           
   781  00A5                     ?_read_write_flash_ram:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  00A5                     RegisterRead@value:	
   785                           ; 1 bytes @ 0x5
   786                           
   787  00A5                     ReadMemoryAdress@var3:	
   788                           ; 1 bytes @ 0x5
   789                           
   790  00A5                     write_ram_status@status:	
   791                           ; 1 bytes @ 0x5
   792                           
   793  00A5                     read_write_flash_ram@bytes_to_readwrite:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 2 bytes @ 0x5
   798  00A5                     	ds	1
   799  00A6                     ??_AnalogValue:	
   800  00A6                     ?_Blink:	
   801                           ; 1 bytes @ 0x6
   802                           
   803  00A6                     RegisterRead@adress:	
   804                           ; 1 bytes @ 0x6
   805                           
   806  00A6                     strlen@s:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  00A6                     Blink@n:	
   810                           ; 1 bytes @ 0x6
   811                           
   812                           
   813                           ; 2 bytes @ 0x6
   814  00A6                     	ds	1
   815  00A7                     ?_RegisterSet:	
   816  00A7                     RegisterSet@value:	
   817                           ; 1 bytes @ 0x7
   818                           
   819  00A7                     AnalogValue@channel:	
   820                           ; 1 bytes @ 0x7
   821                           
   822  00A7                     read_write_flash_ram@flash_sector:	
   823                           ; 1 bytes @ 0x7
   824                           
   825  00A7                     strlen@cp:	
   826                           ; 1 bytes @ 0x7
   827                           
   828                           
   829                           ; 1 bytes @ 0x7
   830  00A7                     	ds	1
   831  00A8                     ??_RegisterSet:	
   832  00A8                     ??_DarknessCheck:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  00A8                     ??_Blink:	
   836                           ; 1 bytes @ 0x8
   837                           
   838  00A8                     ?_strncmp:	
   839                           ; 1 bytes @ 0x8
   840                           
   841  00A8                     read_write_flash_ram@flash_page:	
   842                           ; 2 bytes @ 0x8
   843                           
   844  00A8                     strncmp@s2:	
   845                           ; 1 bytes @ 0x8
   846                           
   847                           
   848                           ; 1 bytes @ 0x8
   849  00A8                     	ds	1
   850  00A9                     DarknessCheck@darknessValue:	
   851  00A9                     read_write_flash_ram@offset:	
   852                           ; 1 bytes @ 0x9
   853                           
   854  00A9                     Blink@i:	
   855                           ; 1 bytes @ 0x9
   856                           
   857  00A9                     strncmp@len:	
   858                           ; 2 bytes @ 0x9
   859                           
   860                           
   861                           ; 2 bytes @ 0x9
   862  00A9                     	ds	1
   863  00AA                     ??_Mode_0:	
   864  00AA                     ??_Mode_1:	
   865                           ; 1 bytes @ 0xA
   866                           
   867  00AA                     ??_Mode_2:	
   868                           ; 1 bytes @ 0xA
   869                           
   870  00AA                     ??_LightWithSensController:	
   871                           ; 1 bytes @ 0xA
   872                           
   873  00AA                     RegisterSet@adress:	
   874                           ; 1 bytes @ 0xA
   875                           
   876  00AA                     read_write_flash_ram@mem_ptr:	
   877                           ; 1 bytes @ 0xA
   878                           
   879                           
   880                           ; 1 bytes @ 0xA
   881  00AA                     	ds	1
   882  00AB                     ??_SetRFMode:	
   883  00AB                     ??_read_write_flash_ram:	
   884                           ; 1 bytes @ 0xB
   885                           
   886  00AB                     ??_strncmp:	
   887                           ; 1 bytes @ 0xB
   888                           
   889                           
   890                           ; 1 bytes @ 0xB
   891  00AB                     	ds	1
   892  00AC                     SetRFMode@mode:	
   893                           
   894                           ; 1 bytes @ 0xC
   895  00AC                     	ds	1
   896  00AD                     SetRFMode@mcparam0_read:	
   897  00AD                     read_write_flash_ram@one_read_zero_write:	
   898                           ; 1 bytes @ 0xD
   899                           
   900  00AD                     strncmp@s1:	
   901                           ; 1 bytes @ 0xD
   902                           
   903                           
   904                           ; 1 bytes @ 0xD
   905  00AD                     	ds	1
   906  00AE                     ??_FindChannel:	
   907  00AE                     ?_strstr:	
   908                           ; 1 bytes @ 0xE
   909                           
   910  00AE                     strstr@s2:	
   911                           ; 1 bytes @ 0xE
   912                           
   913  00AE                     read_write_flash_ram@i:	
   914                           ; 1 bytes @ 0xE
   915                           
   916                           
   917                           ; 2 bytes @ 0xE
   918  00AE                     	ds	1
   919  00AF                     ??_strstr:	
   920                           
   921                           ; 1 bytes @ 0xF
   922  00AF                     	ds	2
   923  00B1                     FindChannel@cnt:	
   924                           
   925                           ; 2 bytes @ 0x11
   926  00B1                     	ds	1
   927  00B2                     strstr@s1:	
   928                           
   929                           ; 1 bytes @ 0x12
   930  00B2                     	ds	1
   931  00B3                     FindChannel@i:	
   932                           
   933                           ; 2 bytes @ 0x13
   934  00B3                     	ds	2
   935  00B5                     ??_TransiverInit:	
   936  00B5                     ??_TransiverToReceive:	
   937                           ; 1 bytes @ 0x15
   938                           
   939  00B5                     ?_TransmittPacket:	
   940                           ; 1 bytes @ 0x15
   941                           
   942  00B5                     TransmittPacket@value:	
   943                           ; 1 bytes @ 0x15
   944                           
   945                           
   946                           ; 1 bytes @ 0x15
   947  00B5                     	ds	1
   948  00B6                     ??_TransmittPacket:	
   949                           
   950                           ; 1 bytes @ 0x16
   951  00B6                     	ds	2
   952  00B8                     TransmittPacket@i:	
   953                           
   954                           ; 2 bytes @ 0x18
   955  00B8                     	ds	2
   956  00BA                     TransmittPacket@topic:	
   957                           
   958                           ; 1 bytes @ 0x1A
   959  00BA                     	ds	1
   960  00BB                     ??_Mode_4:	
   961  00BB                     ??_Mode_5:	
   962                           ; 1 bytes @ 0x1B
   963                           
   964  00BB                     ??_SendMemoryData:	
   965                           ; 1 bytes @ 0x1B
   966                           
   967                           
   968                           ; 1 bytes @ 0x1B
   969  00BB                     	ds	8
   970  00C3                     SendMemoryData@value:	
   971                           
   972                           ; 1 bytes @ 0x23
   973  00C3                     	ds	1
   974  00C4                     SendMemoryData@finalAddress:	
   975                           
   976                           ; 4 bytes @ 0x24
   977  00C4                     	ds	4
   978  00C8                     SendMemoryData@addr3:	
   979                           
   980                           ; 1 bytes @ 0x28
   981  00C8                     	ds	1
   982  00C9                     SendMemoryData@addr2:	
   983                           
   984                           ; 1 bytes @ 0x29
   985  00C9                     	ds	1
   986  00CA                     SendMemoryData@addr1:	
   987                           
   988                           ; 1 bytes @ 0x2A
   989  00CA                     	ds	1
   990  00CB                     SendMemoryData@address:	
   991                           
   992                           ; 4 bytes @ 0x2B
   993  00CB                     	ds	4
   994  00CF                     ??_ReceivedPacketHandler:	
   995                           
   996                           ; 1 bytes @ 0x2F
   997  00CF                     	ds	1
   998  00D0                     ReceivedPacketHandler@Data:	
   999                           
  1000                           ; 1 bytes @ 0x30
  1001  00D0                     	ds	1
  1002  00D1                     ??_TransiverReadFIFO:	
  1003                           
  1004                           ; 1 bytes @ 0x31
  1005  00D1                     	ds	2
  1006  00D3                     ??_main:	
  1007                           
  1008                           ; 1 bytes @ 0x33
  1009  00D3                     	ds	3
  1010                           
  1011                           	psect	cstackCOMMON
  1012  0070                     __pcstackCOMMON:	
  1013  0070                     ?_PICInit:	
  1014  0070                     ?_TransiverInit:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?_ClockInit:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_write_ram_status:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?_read_ram_status:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_ram_bulk_erase:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ?_ResetMemoryAdress:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_OperationMode:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_Mode_0:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_Mode_1:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ?_Mode_2:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ?_Mode_4:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     ?_Mode_5:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_TransiverToReceive:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ?_TransiverReadFIFO:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_SetRFMode:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ?_RegisterRead:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_FindChannel:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ?_ReadFIFO:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_ReceivedPacketHandler:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_AnalogValue:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_eeprom_read:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_DarknessCheck:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_SendMemoryData:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_WriteFIFO:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_LightWithSensController:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_saveDataToFlash:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_TimerCounter:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ??_TimerCounter:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_WriteSPI:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_ReadSPI:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_tc_int:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_IncreaseMemoryAdress:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?___bmul:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?i1_DelayDs:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ?i1_WriteSPI:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ??i1_WriteSPI:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?i1_ReadSPI:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?i1_AnalogValue:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?i1_OperationMode:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ??i1_OperationMode:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?i1_read_ram_status:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?i1_eeprom_read:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ??i1_eeprom_read:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?i1_eeprom_write:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_main:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ___bmul@multiplicand:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  0070                     i1eeprom_write@value:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     i1DelayDs@cnt:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x0
  1160  0070                     	ds	1
  1161  0071                     ??___bmul:	
  1162  0071                     ??i1_eeprom_write:	
  1163                           ; 1 bytes @ 0x1
  1164                           
  1165  0071                     i1WriteSPI@buffer:	
  1166                           ; 1 bytes @ 0x1
  1167                           
  1168  0071                     i1OperationMode@bracketStatus:	
  1169                           ; 1 bytes @ 0x1
  1170                           
  1171  0071                     i1eeprom_read@addr:	
  1172                           ; 1 bytes @ 0x1
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0x1
  1176  0071                     	ds	1
  1177  0072                     ??i1_DelayDs:	
  1178  0072                     ?i1_ReadMemoryAdress:	
  1179                           ; 1 bytes @ 0x2
  1180                           
  1181  0072                     ___bmul@product:	
  1182                           ; 1 bytes @ 0x2
  1183                           
  1184  0072                     i1WriteSPI@databyte:	
  1185                           ; 1 bytes @ 0x2
  1186                           
  1187  0072                     i1ReadMemoryAdress@var2:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190  0072                     i1eeprom_write@addr:	
  1191                           ; 1 bytes @ 0x2
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x2
  1195  0072                     	ds	1
  1196  0073                     ??_IncreaseMemoryAdress:	
  1197  0073                     ??i1_ReadSPI:	
  1198                           ; 1 bytes @ 0x3
  1199                           
  1200  0073                     ??i1_read_ram_status:	
  1201                           ; 1 bytes @ 0x3
  1202                           
  1203  0073                     ___bmul@multiplier:	
  1204                           ; 1 bytes @ 0x3
  1205                           
  1206  0073                     i1ReadMemoryAdress@var1:	
  1207                           ; 1 bytes @ 0x3
  1208                           
  1209  0073                     TimerCounter@i:	
  1210                           ; 1 bytes @ 0x3
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x3
  1214  0073                     	ds	1
  1215  0074                     ?_ReadClock:	
  1216  0074                     ??i1_ReadMemoryAdress:	
  1217                           ; 1 bytes @ 0x4
  1218                           
  1219  0074                     IncreaseMemoryAdress@var1:	
  1220                           ; 1 bytes @ 0x4
  1221                           
  1222  0074                     ReadClock@minutes:	
  1223                           ; 1 bytes @ 0x4
  1224                           
  1225  0074                     i1read_ram_status@status:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0074                     i1DelayDs@i:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0x4
  1233  0074                     	ds	1
  1234  0075                     ?i1_read_write_flash_ram:	
  1235  0075                     IncreaseMemoryAdress@var2:	
  1236                           ; 1 bytes @ 0x5
  1237                           
  1238  0075                     ReadClock@hour:	
  1239                           ; 1 bytes @ 0x5
  1240                           
  1241  0075                     i1ReadMemoryAdress@var3:	
  1242                           ; 1 bytes @ 0x5
  1243                           
  1244  0075                     i1read_write_flash_ram@bytes_to_readwrite:	
  1245                           ; 1 bytes @ 0x5
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x5
  1249  0075                     	ds	1
  1250  0076                     ??i1_AnalogValue:	
  1251  0076                     IncreaseMemoryAdress@var3:	
  1252                           ; 1 bytes @ 0x6
  1253                           
  1254  0076                     ReadClock@date:	
  1255                           ; 1 bytes @ 0x6
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x6
  1259  0076                     	ds	1
  1260  0077                     ReadClock@month:	
  1261  0077                     i1AnalogValue@channel:	
  1262                           ; 1 bytes @ 0x7
  1263                           
  1264  0077                     i1read_write_flash_ram@flash_sector:	
  1265                           ; 1 bytes @ 0x7
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x7
  1269  0077                     	ds	1
  1270  0078                     ReadClock@year:	
  1271  0078                     i1read_write_flash_ram@flash_page:	
  1272                           ; 1 bytes @ 0x8
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x8
  1276  0078                     	ds	1
  1277  0079                     ??_ReadClock:	
  1278  0079                     i1read_write_flash_ram@offset:	
  1279                           ; 1 bytes @ 0x9
  1280                           
  1281                           
  1282                           ; 1 bytes @ 0x9
  1283  0079                     	ds	1
  1284  007A                     i1read_write_flash_ram@mem_ptr:	
  1285                           
  1286                           ; 1 bytes @ 0xA
  1287  007A                     	ds	1
  1288  007B                     ??i1_read_write_flash_ram:	
  1289                           
  1290                           ; 1 bytes @ 0xB
  1291  007B                     	ds	2
  1292                           
  1293                           	psect	cstackBANK0
  1294  0020                     __pcstackBANK0:	
  1295  0020                     ReadClock@sec10:	
  1296  0020                     i1read_write_flash_ram@one_read_zero_write:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x0
  1301  0020                     	ds	1
  1302  0021                     ReadClock@min10:	
  1303  0021                     i1read_write_flash_ram@i:	
  1304                           ; 1 bytes @ 0x1
  1305                           
  1306                           
  1307                           ; 2 bytes @ 0x1
  1308  0021                     	ds	1
  1309  0022                     ReadClock@hour10:	
  1310                           
  1311                           ; 1 bytes @ 0x2
  1312  0022                     	ds	1
  1313  0023                     ReadClock@date10:	
  1314                           
  1315                           ; 1 bytes @ 0x3
  1316  0023                     	ds	1
  1317  0024                     ReadClock@month10:	
  1318                           
  1319                           ; 1 bytes @ 0x4
  1320  0024                     	ds	1
  1321  0025                     ReadClock@year10:	
  1322                           
  1323                           ; 1 bytes @ 0x5
  1324  0025                     	ds	1
  1325  0026                     ReadClock@seconds:	
  1326                           
  1327                           ; 1 bytes @ 0x6
  1328  0026                     	ds	1
  1329  0027                     ReadClock@sec1:	
  1330                           
  1331                           ; 1 bytes @ 0x7
  1332  0027                     	ds	1
  1333  0028                     ReadClock@min1:	
  1334                           
  1335                           ; 1 bytes @ 0x8
  1336  0028                     	ds	1
  1337  0029                     ReadClock@hour1:	
  1338                           
  1339                           ; 1 bytes @ 0x9
  1340  0029                     	ds	1
  1341  002A                     ReadClock@month1:	
  1342                           
  1343                           ; 1 bytes @ 0xA
  1344  002A                     	ds	1
  1345  002B                     ReadClock@year1:	
  1346                           
  1347                           ; 1 bytes @ 0xB
  1348  002B                     	ds	1
  1349  002C                     ReadClock@date1:	
  1350                           
  1351                           ; 1 bytes @ 0xC
  1352  002C                     	ds	1
  1353  002D                     ??_saveDataToFlash:	
  1354                           
  1355                           ; 1 bytes @ 0xD
  1356  002D                     	ds	5
  1357  0032                     saveDataToFlash@seconds:	
  1358                           
  1359                           ; 1 bytes @ 0x12
  1360  0032                     	ds	1
  1361  0033                     saveDataToFlash@minutes:	
  1362                           
  1363                           ; 1 bytes @ 0x13
  1364  0033                     	ds	1
  1365  0034                     saveDataToFlash@hours:	
  1366                           
  1367                           ; 1 bytes @ 0x14
  1368  0034                     	ds	1
  1369  0035                     saveDataToFlash@date:	
  1370                           
  1371                           ; 1 bytes @ 0x15
  1372  0035                     	ds	1
  1373  0036                     saveDataToFlash@month:	
  1374                           
  1375                           ; 1 bytes @ 0x16
  1376  0036                     	ds	1
  1377  0037                     saveDataToFlash@year:	
  1378                           
  1379                           ; 1 bytes @ 0x17
  1380  0037                     	ds	1
  1381  0038                     saveDataToFlash@value:	
  1382                           
  1383                           ; 1 bytes @ 0x18
  1384  0038                     	ds	1
  1385  0039                     saveDataToFlash@addr1:	
  1386                           
  1387                           ; 1 bytes @ 0x19
  1388  0039                     	ds	1
  1389  003A                     saveDataToFlash@addr2:	
  1390                           
  1391                           ; 1 bytes @ 0x1A
  1392  003A                     	ds	1
  1393  003B                     saveDataToFlash@addr3:	
  1394                           
  1395                           ; 1 bytes @ 0x1B
  1396  003B                     	ds	1
  1397  003C                     ??_tc_int:	
  1398                           
  1399                           ; 1 bytes @ 0x1C
  1400  003C                     	ds	7
  1401                           
  1402                           	psect	maintext
  1403  0F16                     __pmaintext:	
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 21 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2   76[None  ] int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : B00/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       0       3       0       0
  1426 ;;      Totals:         0       0       3       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels required when called:   15
  1429 ;; This function calls:
  1430 ;;		_ClockInit
  1431 ;;		_Mode_0
  1432 ;;		_Mode_1
  1433 ;;		_Mode_2
  1434 ;;		_Mode_4
  1435 ;;		_Mode_5
  1436 ;;		_OperationMode
  1437 ;;		_PICInit
  1438 ;;		_ResetMemoryAdress
  1439 ;;		_TransiverInit
  1440 ;;		_TransiverReadFIFO
  1441 ;;		_TransiverToReceive
  1442 ;;		_ram_bulk_erase
  1443 ;;		_read_ram_status
  1444 ;;		_write_ram_status
  1445 ;; This function is called by:
  1446 ;;		Startup code after reset
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _main
  1452  0F16                     _main:	
  1453                           
  1454                           ;main.c: 24: PICInit();
  1455                           
  1456                           ;incstack = 0
  1457 ;; hardware stack exceeded
  1458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459  0F16  120A  158A  21D8  120A  158A  	fcall	_PICInit
  1460                           
  1461                           ;main.c: 25: TransiverInit();
  1462  0F1B  120A  158A  262C  120A  158A  	fcall	_TransiverInit
  1463                           
  1464                           ;main.c: 26: ClockInit();
  1465  0F20  120A  158A  2413  120A  158A  	fcall	_ClockInit
  1466                           
  1467                           ;main.c: 30: RB1 = 0;
  1468  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0F27  1086               	bcf	6,1	;volatile
  1471                           
  1472                           ;main.c: 31: _delay((unsigned long)((300)*(4000000/4000.0)));
  1473  0F28  3002               	movlw	2
  1474  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0F2B  00D5               	movwf	(??_main^(0+128)+2)
  1477  0F2C  3086               	movlw	134
  1478  0F2D  00D4               	movwf	(??_main^(0+128)+1)
  1479  0F2E  3099               	movlw	153
  1480  0F2F  00D3               	movwf	??_main^(0+128)
  1481  0F30                     u3697:	
  1482  0F30  0BD3               	decfsz	??_main^(0+128),f
  1483  0F31  2F30               	goto	u3697
  1484  0F32  0BD4               	decfsz	(??_main^(0+128)+1),f
  1485  0F33  2F30               	goto	u3697
  1486  0F34  0BD5               	decfsz	(??_main^(0+128)+2),f
  1487  0F35  2F30               	goto	u3697
  1488                           
  1489                           ;main.c: 32: RB1 = 1;
  1490  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0F38  1486               	bsf	6,1	;volatile
  1493                           
  1494                           ;main.c: 33: _delay((unsigned long)((300)*(4000000/4000.0)));
  1495  0F39  3002               	movlw	2
  1496  0F3A  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0F3B  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0F3C  00D5               	movwf	(??_main^(0+128)+2)
  1499  0F3D  3086               	movlw	134
  1500  0F3E  00D4               	movwf	(??_main^(0+128)+1)
  1501  0F3F  3099               	movlw	153
  1502  0F40  00D3               	movwf	??_main^(0+128)
  1503  0F41                     u3707:	
  1504  0F41  0BD3               	decfsz	??_main^(0+128),f
  1505  0F42  2F41               	goto	u3707
  1506  0F43  0BD4               	decfsz	(??_main^(0+128)+1),f
  1507  0F44  2F41               	goto	u3707
  1508  0F45  0BD5               	decfsz	(??_main^(0+128)+2),f
  1509  0F46  2F41               	goto	u3707
  1510  0F47                     l4412:	
  1511                           ;main.c: 35: while(1)
  1512                           
  1513                           
  1514                           ;main.c: 36: {
  1515                           ;main.c: 37: if(!RB0)
  1516  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0F49  1806               	btfsc	6,0	;volatile
  1519  0F4A  2FA6               	goto	l4434
  1520                           
  1521                           ;main.c: 38: {
  1522                           ;main.c: 39: RB1 = 0;
  1523  0F4B  1086               	bcf	6,1	;volatile
  1524                           
  1525                           ;main.c: 40: _delay((unsigned long)((300)*(4000000/4000.0)));
  1526  0F4C  3002               	movlw	2
  1527  0F4D  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0F4E  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0F4F  00D5               	movwf	(??_main^(0+128)+2)
  1530  0F50  3086               	movlw	134
  1531  0F51  00D4               	movwf	(??_main^(0+128)+1)
  1532  0F52  3099               	movlw	153
  1533  0F53  00D3               	movwf	??_main^(0+128)
  1534  0F54                     u3717:	
  1535  0F54  0BD3               	decfsz	??_main^(0+128),f
  1536  0F55  2F54               	goto	u3717
  1537  0F56  0BD4               	decfsz	(??_main^(0+128)+1),f
  1538  0F57  2F54               	goto	u3717
  1539  0F58  0BD5               	decfsz	(??_main^(0+128)+2),f
  1540  0F59  2F54               	goto	u3717
  1541                           
  1542                           ;main.c: 41: RB1 = 1;
  1543  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0F5C  1486               	bsf	6,1	;volatile
  1546                           
  1547                           ;main.c: 42: _delay((unsigned long)((300)*(4000000/4000.0)));
  1548  0F5D  3002               	movlw	2
  1549  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0F60  00D5               	movwf	(??_main^(0+128)+2)
  1552  0F61  3086               	movlw	134
  1553  0F62  00D4               	movwf	(??_main^(0+128)+1)
  1554  0F63  3099               	movlw	153
  1555  0F64  00D3               	movwf	??_main^(0+128)
  1556  0F65                     u3727:	
  1557  0F65  0BD3               	decfsz	??_main^(0+128),f
  1558  0F66  2F65               	goto	u3727
  1559  0F67  0BD4               	decfsz	(??_main^(0+128)+1),f
  1560  0F68  2F65               	goto	u3727
  1561  0F69  0BD5               	decfsz	(??_main^(0+128)+2),f
  1562  0F6A  2F65               	goto	u3727
  1563                           
  1564                           ;main.c: 43: write_ram_status(read_ram_status() & 0b11100011);
  1565  0F6B  160A  118A  252F  120A  158A  	fcall	_read_ram_status
  1566  0F70  39E3               	andlw	227
  1567  0F71  160A  118A  2732  120A  158A  	fcall	_write_ram_status
  1568                           
  1569                           ;main.c: 44: ram_bulk_erase();
  1570  0F76  160A  118A  25D7  120A  158A  	fcall	_ram_bulk_erase
  1571                           
  1572                           ;main.c: 45: ResetMemoryAdress();
  1573  0F7B  160A  118A  2547  120A  158A  	fcall	_ResetMemoryAdress
  1574                           
  1575                           ;main.c: 46: RB1 = 0;
  1576  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0F82  1086               	bcf	6,1	;volatile
  1579                           
  1580                           ;main.c: 47: _delay((unsigned long)((300)*(4000000/4000.0)));
  1581  0F83  3002               	movlw	2
  1582  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0F86  00D5               	movwf	(??_main^(0+128)+2)
  1585  0F87  3086               	movlw	134
  1586  0F88  00D4               	movwf	(??_main^(0+128)+1)
  1587  0F89  3099               	movlw	153
  1588  0F8A  00D3               	movwf	??_main^(0+128)
  1589  0F8B                     u3737:	
  1590  0F8B  0BD3               	decfsz	??_main^(0+128),f
  1591  0F8C  2F8B               	goto	u3737
  1592  0F8D  0BD4               	decfsz	(??_main^(0+128)+1),f
  1593  0F8E  2F8B               	goto	u3737
  1594  0F8F  0BD5               	decfsz	(??_main^(0+128)+2),f
  1595  0F90  2F8B               	goto	u3737
  1596                           
  1597                           ;main.c: 48: RB1 = 1;
  1598  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0F93  1486               	bsf	6,1	;volatile
  1601                           
  1602                           ;main.c: 49: _delay((unsigned long)((300)*(4000000/4000.0)));
  1603  0F94  3002               	movlw	2
  1604  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  1606  0F97  00D5               	movwf	(??_main^(0+128)+2)
  1607  0F98  3086               	movlw	134
  1608  0F99  00D4               	movwf	(??_main^(0+128)+1)
  1609  0F9A  3099               	movlw	153
  1610  0F9B  00D3               	movwf	??_main^(0+128)
  1611  0F9C                     u3747:	
  1612  0F9C  0BD3               	decfsz	??_main^(0+128),f
  1613  0F9D  2F9C               	goto	u3747
  1614  0F9E  0BD4               	decfsz	(??_main^(0+128)+1),f
  1615  0F9F  2F9C               	goto	u3747
  1616  0FA0  0BD5               	decfsz	(??_main^(0+128)+2),f
  1617  0FA1  2F9C               	goto	u3747
  1618  0FA2                     l79:	
  1619                           ;main.c: 50: while(!RB0);
  1620                           
  1621  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0FA4  1C06               	btfss	6,0	;volatile
  1624  0FA5  2FA2               	goto	l79
  1625  0FA6                     l4434:	
  1626                           
  1627                           ;main.c: 53: }
  1628                           ;main.c: 55: if(OperationMode() == 0)
  1629  0FA6  160A  118A  2471  120A  158A  	fcall	_OperationMode
  1630  0FAB  3A00               	xorlw	0
  1631  0FAC  1D03               	skipz
  1632  0FAD  2FB3               	goto	l4438
  1633                           
  1634                           ;main.c: 56: {
  1635                           ;main.c: 57: Mode_0();
  1636  0FAE  160A  118A  244C  120A  158A  	fcall	_Mode_0
  1637  0FB3                     l4438:	
  1638                           
  1639                           ;main.c: 58: }
  1640                           ;main.c: 59: if(OperationMode() == 1)
  1641  0FB3  160A  118A  2471  120A  158A  	fcall	_OperationMode
  1642  0FB8  3A01               	xorlw	1
  1643  0FB9  1D03               	skipz
  1644  0FBA  2FC0               	goto	l4442
  1645                           
  1646                           ;main.c: 60: {
  1647                           ;main.c: 61: Mode_1();
  1648  0FBB  160A  118A  25B8  120A  158A  	fcall	_Mode_1
  1649  0FC0                     l4442:	
  1650                           
  1651                           ;main.c: 62: }
  1652                           ;main.c: 64: if(OperationMode() == 2)
  1653  0FC0  160A  118A  2471  120A  158A  	fcall	_OperationMode
  1654  0FC5  3A02               	xorlw	2
  1655  0FC6  1D03               	skipz
  1656  0FC7  2FCD               	goto	l4446
  1657                           
  1658                           ;main.c: 65: {
  1659                           ;main.c: 66: Mode_2();
  1660  0FC8  160A  118A  247C  120A  158A  	fcall	_Mode_2
  1661  0FCD                     l4446:	
  1662                           
  1663                           ;main.c: 67: }
  1664                           ;main.c: 69: if(OperationMode() == 4)
  1665  0FCD  160A  118A  2471  120A  158A  	fcall	_OperationMode
  1666  0FD2  3A04               	xorlw	4
  1667  0FD3  1D03               	skipz
  1668  0FD4  2FDA               	goto	l4450
  1669                           
  1670                           ;main.c: 70: {
  1671                           ;main.c: 71: Mode_4();
  1672  0FD5  160A  118A  24CA  120A  158A  	fcall	_Mode_4
  1673  0FDA                     l4450:	
  1674                           
  1675                           ;main.c: 72: }
  1676                           ;main.c: 74: if(OperationMode() == 5)
  1677  0FDA  160A  118A  2471  120A  158A  	fcall	_OperationMode
  1678  0FDF  3A05               	xorlw	5
  1679  0FE0  1D03               	skipz
  1680  0FE1  2FE7               	goto	l4454
  1681                           
  1682                           ;main.c: 75: {
  1683                           ;main.c: 76: Mode_5();
  1684  0FE2  120A  158A  2000  120A  158A  	fcall	_Mode_5
  1685  0FE7                     l4454:	
  1686                           
  1687                           ;main.c: 77: }
  1688                           ;main.c: 81: if(!bTransiverModeReceive)
  1689  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0FE9  0857               	movf	_bTransiverModeReceive^(0+128),w
  1692  0FEA  1D03               	btfss	3,2
  1693  0FEB  2FF1               	goto	l4458
  1694                           
  1695                           ;main.c: 82: TransiverToReceive();
  1696  0FEC  120A  158A  217B  120A  158A  	fcall	_TransiverToReceive
  1697  0FF1                     l4458:	
  1698                           
  1699                           ;main.c: 83: if(RB4 && bTransiverModeReceive)
  1700  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0FF3  1E06               	btfss	6,4	;volatile
  1703  0FF4  2F47               	goto	l4412
  1704  0FF5  1683               	bsf	3,5	;RP0=1, select bank1
  1705  0FF6  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0FF7  0857               	movf	_bTransiverModeReceive^(0+128),w
  1707  0FF8  1903               	btfsc	3,2
  1708  0FF9  2F47               	goto	l4412
  1709                           
  1710                           ;main.c: 84: TransiverReadFIFO();
  1711  0FFA  120A  158A  223C  120A  158A  	fcall	_TransiverReadFIFO
  1712  0FFF  2F47               	goto	l4412
  1713  1000                     __end_of_main:	
  1714                           
  1715                           	psect	text1
  1716  097B                     __ptext1:	
  1717 ;; *************** function _TransiverToReceive *****************
  1718 ;; Defined at:
  1719 ;;		line 16 in file "functions.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          0       0       2       0       0
  1736 ;;      Totals:         0       0       2       0       0
  1737 ;;Total ram usage:        2 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:   11
  1740 ;; This function calls:
  1741 ;;		_FindChannel
  1742 ;;		_RegisterRead
  1743 ;;		_RegisterSet
  1744 ;;		_SetRFMode
  1745 ;;		_timerFunction
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function _TransiverToReceive
  1753  097B                     _TransiverToReceive:	
  1754                           
  1755                           ;functions.c: 18: timerFunction(2, 5);
  1756                           
  1757                           ;incstack = 0
  1758 ;; hardware stack exceeded
  1759                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760  097B  3002               	movlw	2
  1761  097C  1683               	bsf	3,5	;RP0=1, select bank1
  1762  097D  1303               	bcf	3,6	;RP1=0, select bank1
  1763  097E  00A0               	movwf	timerFunction@intTimerNumber^(0+128)
  1764  097F  3000               	movlw	0
  1765  0980  00A1               	movwf	(timerFunction@intTimerNumber^(0+128)+1)
  1766  0981  3005               	movlw	5
  1767  0982  00A2               	movwf	timerFunction@intSetSeconds^(0+128)
  1768  0983  3000               	movlw	0
  1769  0984  00A3               	movwf	(timerFunction@intSetSeconds^(0+128)+1)
  1770  0985  160A  118A  24B8  120A  158A  	fcall	_timerFunction
  1771                           
  1772                           ;functions.c: 22: SetRFMode(0x20);
  1773  098A  3020               	movlw	32
  1774  098B  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  1775                           
  1776                           ;functions.c: 23: _delay((unsigned long)((10)*(4000000/4000.0)));
  1777  0990  300D               	movlw	13
  1778  0991  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0992  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0993  00B6               	movwf	(??_TransiverToReceive^(0+128)+1)
  1781  0994  30FB               	movlw	251
  1782  0995  00B5               	movwf	??_TransiverToReceive^(0+128)
  1783  0996                     u3757:	
  1784  0996  0BB5               	decfsz	??_TransiverToReceive^(0+128),f
  1785  0997  2996               	goto	u3757
  1786  0998  0BB6               	decfsz	(??_TransiverToReceive^(0+128)+1),f
  1787  0999  2996               	goto	u3757
  1788  099A  299B               	nop2
  1789                           
  1790                           ;functions.c: 24: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1791  099B  300E               	movlw	14
  1792  099C  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  1793  09A1  3802               	iorlw	2
  1794  09A2  1683               	bsf	3,5	;RP0=1, select bank1
  1795  09A3  1303               	bcf	3,6	;RP1=0, select bank1
  1796  09A4  00B5               	movwf	??_TransiverToReceive^(0+128)
  1797  09A5  0835               	movf	??_TransiverToReceive^(0+128),w
  1798  09A6  00A7               	movwf	RegisterSet@value^(0+128)
  1799  09A7  300E               	movlw	14
  1800  09A8  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  1801                           
  1802                           ;functions.c: 25: SetRFMode(0x40);
  1803  09AD  3040               	movlw	64
  1804  09AE  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  1805  09B3                     l4358:	
  1806                           ;functions.c: 26: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1807                           
  1808  09B3  300E               	movlw	14
  1809  09B4  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  1810  09B9  3902               	andlw	2
  1811  09BA  1D03               	btfss	3,2
  1812  09BB  29C6               	goto	l4360
  1813                           
  1814                           ;functions.c: 27: {
  1815                           ;functions.c: 28: if(bTimerComplete[2])
  1816  09BC  1283               	bcf	3,5	;RP0=0, select bank0
  1817  09BD  1303               	bcf	3,6	;RP1=0, select bank0
  1818  09BE  084F               	movf	_bTimerComplete+2,w
  1819  09BF  1903               	btfsc	3,2
  1820  09C0  29B3               	goto	l4358
  1821                           
  1822                           ;functions.c: 29: {
  1823                           ;functions.c: 30: FindChannel();
  1824  09C1  120A  118A  26D4  120A  158A  	fcall	_FindChannel
  1825  09C6                     l4360:	
  1826                           ;functions.c: 31: break;
  1827                           
  1828                           
  1829                           ;functions.c: 32: }
  1830                           ;functions.c: 33: }
  1831                           ;functions.c: 35: SetRFMode(0x60);
  1832  09C6  3060               	movlw	96
  1833  09C7  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  1834                           
  1835                           ;functions.c: 36: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1836  09CC  30A6               	movlw	166
  1837  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  1838  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  1839  09CF  00B5               	movwf	??_TransiverToReceive^(0+128)
  1840  09D0                     u3767:	
  1841  09D0  0BB5               	decfsz	??_TransiverToReceive^(0+128),f
  1842  09D1  29D0               	goto	u3767
  1843  09D2  0000               	nop
  1844                           
  1845                           ;functions.c: 37: bTransiverModeReceive = 1;
  1846  09D3  1683               	bsf	3,5	;RP0=1, select bank1
  1847  09D4  1303               	bcf	3,6	;RP1=0, select bank1
  1848  09D5  01D7               	clrf	_bTransiverModeReceive^(0+128)
  1849  09D6  0AD7               	incf	_bTransiverModeReceive^(0+128),f
  1850  09D7  0008               	return
  1851  09D8                     __end_of_TransiverToReceive:	
  1852                           
  1853                           	psect	text2
  1854  0A3C                     __ptext2:	
  1855 ;; *************** function _TransiverReadFIFO *****************
  1856 ;; Defined at:
  1857 ;;		line 42 in file "functions.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  j               2   32[BANK3 ] int 
  1862 ;;  ReceivedStri   30    0[BANK3 ] unsigned char [30]
  1863 ;;  i               2   30[BANK3 ] int 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       0       0       0       0
  1874 ;;      Locals:         0       0       0      34       0
  1875 ;;      Temps:          0       0       2       0       0
  1876 ;;      Totals:         0       0       2      34       0
  1877 ;;Total ram usage:       36 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:   14
  1880 ;; This function calls:
  1881 ;;		_ReadFIFO
  1882 ;;		_ReceivedPacketHandler
  1883 ;;		_SetRFMode
  1884 ;;		_timerFunction
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _TransiverReadFIFO
  1892  0A3C                     _TransiverReadFIFO:	
  1893                           
  1894                           ;functions.c: 44: unsigned char ReceivedString[30];
  1895                           ;functions.c: 45: timerFunction(3, 5);
  1896                           
  1897                           ;incstack = 0
  1898 ;; hardware stack exceeded
  1899                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1900  0A3C  3003               	movlw	3
  1901  0A3D  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0A3E  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0A3F  00A0               	movwf	timerFunction@intTimerNumber^(0+128)
  1904  0A40  3000               	movlw	0
  1905  0A41  00A1               	movwf	(timerFunction@intTimerNumber^(0+128)+1)
  1906  0A42  3005               	movlw	5
  1907  0A43  00A2               	movwf	timerFunction@intSetSeconds^(0+128)
  1908  0A44  3000               	movlw	0
  1909  0A45  00A3               	movwf	(timerFunction@intSetSeconds^(0+128)+1)
  1910  0A46  160A  118A  24B8  120A  158A  	fcall	_timerFunction
  1911                           
  1912                           ;functions.c: 47: SetRFMode(0x20);
  1913  0A4B  3020               	movlw	32
  1914  0A4C  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  1915                           
  1916                           ;functions.c: 48: bTransiverModeReceive = 0;
  1917  0A51  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0A52  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0A53  01D7               	clrf	_bTransiverModeReceive^(0+128)
  1920                           
  1921                           ;functions.c: 49: int i = 0;
  1922  0A54  1683               	bsf	3,5	;RP0=1, select bank3
  1923  0A55  1703               	bsf	3,6	;RP1=1, select bank3
  1924  0A56  01D6               	clrf	TransiverReadFIFO@i^(0+384)
  1925  0A57  01D7               	clrf	(TransiverReadFIFO@i+1)^(0+384)
  1926                           
  1927                           ;functions.c: 50: for (int j = 0; j < 30; ++j)
  1928  0A58  01D8               	clrf	TransiverReadFIFO@j^(0+384)
  1929  0A59  01D9               	clrf	(TransiverReadFIFO@j+1)^(0+384)
  1930  0A5A                     L1:	
  1931  0A5A  0859               	movf	(TransiverReadFIFO@j+1)^(0+384),w
  1932  0A5B  3A80               	xorlw	128
  1933  0A5C  00FF               	movwf	127
  1934  0A5D  3080               	movlw	128
  1935  0A5E  027F               	subwf	127,w
  1936  0A5F  1D03               	skipz
  1937  0A60  2A63               	goto	u3545
  1938  0A61  301E               	movlw	30
  1939  0A62  0258               	subwf	TransiverReadFIFO@j^(0+384),w
  1940  0A63                     u3545:	
  1941  0A63  1803               	btfsc	3,0
  1942  0A64  2A8D               	goto	l4388
  1943                           
  1944                           ;functions.c: 51: {
  1945                           ;functions.c: 52: ReceivedString[j] = 0;
  1946  0A65  1683               	bsf	3,5	;RP0=1, select bank3
  1947  0A66  1703               	bsf	3,6	;RP1=1, select bank3
  1948  0A67  0858               	movf	TransiverReadFIFO@j^(0+384),w
  1949  0A68  3EB8               	addlw	(low (TransiverReadFIFO@ReceivedString| (0+256)))& (0+255)
  1950  0A69  0084               	movwf	4
  1951  0A6A  1783               	bsf	3,7	;select IRP bank3
  1952  0A6B  0180               	clrf	0
  1953  0A6C  3001               	movlw	1
  1954  0A6D  07D8               	addwf	TransiverReadFIFO@j^(0+384),f
  1955  0A6E  1803               	skipnc
  1956  0A6F  0AD9               	incf	(TransiverReadFIFO@j+1)^(0+384),f
  1957  0A70  3000               	movlw	0
  1958  0A71  07D9               	addwf	(TransiverReadFIFO@j+1)^(0+384),f
  1959  0A72  2A5A               	goto	L1
  1960  0A73                     l4384:	
  1961                           ;functions.c: 53: }
  1962                           ;functions.c: 54: while((RB3)&&(!bTimerComplete[3]))
  1963                           
  1964                           
  1965                           ;functions.c: 55: {
  1966                           ;functions.c: 56: ReceivedString[i] = ReadFIFO();
  1967  0A73  160A  118A  24DC  120A  158A  	fcall	_ReadFIFO
  1968  0A78  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0A79  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0A7A  00D1               	movwf	??_TransiverReadFIFO^(0+128)
  1971  0A7B  1683               	bsf	3,5	;RP0=1, select bank3
  1972  0A7C  1703               	bsf	3,6	;RP1=1, select bank3
  1973  0A7D  0856               	movf	TransiverReadFIFO@i^(0+384),w
  1974  0A7E  3EB8               	addlw	(low (TransiverReadFIFO@ReceivedString| (0+256)))& (0+255)
  1975  0A7F  0084               	movwf	4
  1976  0A80  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0A81  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0A82  0851               	movf	??_TransiverReadFIFO^(0+128),w
  1979  0A83  1783               	bsf	3,7	;select IRP bank3
  1980  0A84  0080               	movwf	0
  1981                           
  1982                           ;functions.c: 57: i++;
  1983  0A85  3001               	movlw	1
  1984  0A86  1683               	bsf	3,5	;RP0=1, select bank3
  1985  0A87  1703               	bsf	3,6	;RP1=1, select bank3
  1986  0A88  07D6               	addwf	TransiverReadFIFO@i^(0+384),f
  1987  0A89  1803               	skipnc
  1988  0A8A  0AD7               	incf	(TransiverReadFIFO@i+1)^(0+384),f
  1989  0A8B  3000               	movlw	0
  1990  0A8C  07D7               	addwf	(TransiverReadFIFO@i+1)^(0+384),f
  1991  0A8D                     l4388:	
  1992  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0A8F  1D86               	btfss	6,3	;volatile
  1995  0A90  2A94               	goto	l4392
  1996  0A91  0850               	movf	_bTimerComplete+3,w
  1997  0A92  1903               	btfsc	3,2
  1998  0A93  2A73               	goto	l4384
  1999  0A94                     l4392:	
  2000                           
  2001                           ;functions.c: 58: }
  2002                           ;functions.c: 60: _delay((unsigned long)((10)*(4000000/4000.0)));
  2003  0A94  300D               	movlw	13
  2004  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  2005  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  2006  0A97  00D2               	movwf	(??_TransiverReadFIFO^(0+128)+1)
  2007  0A98  30FB               	movlw	251
  2008  0A99  00D1               	movwf	??_TransiverReadFIFO^(0+128)
  2009  0A9A                     u3777:	
  2010  0A9A  0BD1               	decfsz	??_TransiverReadFIFO^(0+128),f
  2011  0A9B  2A9A               	goto	u3777
  2012  0A9C  0BD2               	decfsz	(??_TransiverReadFIFO^(0+128)+1),f
  2013  0A9D  2A9A               	goto	u3777
  2014  0A9E  2A9F               	nop2
  2015                           
  2016                           ;functions.c: 61: SetRFMode(0x00);
  2017  0A9F  3000               	movlw	0
  2018  0AA0  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  2019                           
  2020                           ;functions.c: 63: ReceivedPacketHandler(ReceivedString);
  2021  0AA5  30B8               	movlw	(low (TransiverReadFIFO@ReceivedString| (0+256)))& (0+255)
  2022  0AA6  120A  118A  228A   	fcall	_ReceivedPacketHandler
  2023  0AA9  0008               	return
  2024  0AAA                     __end_of_TransiverReadFIFO:	
  2025                           
  2026                           	psect	text3
  2027  028A                     __ptext3:	
  2028 ;; *************** function _ReceivedPacketHandler *****************
  2029 ;; Defined at:
  2030 ;;		line 73 in file "functions.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  Data            1    wreg     PTR unsigned char 
  2033 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  Data            1   48[BANK1 ] PTR unsigned char 
  2036 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       0       1       0       0
  2048 ;;      Temps:          0       0       1       0       0
  2049 ;;      Totals:         0       0       2       0       0
  2050 ;;Total ram usage:        2 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:   13
  2053 ;; This function calls:
  2054 ;;		_AnalogValue
  2055 ;;		_DarknessCheck
  2056 ;;		_DelayDs
  2057 ;;		_OperationMode
  2058 ;;		_ResetMemoryAdress
  2059 ;;		_SendMemoryData
  2060 ;;		_TransmittPacket
  2061 ;;		_eeprom_read
  2062 ;;		_eeprom_write
  2063 ;;		_ram_bulk_erase
  2064 ;;		_read_ram_status
  2065 ;;		_strstr
  2066 ;;		_write_ram_status
  2067 ;; This function is called by:
  2068 ;;		_TransiverReadFIFO
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _ReceivedPacketHandler
  2074  028A                     _ReceivedPacketHandler:	
  2075                           
  2076                           ;incstack = 0
  2077 ;; hardware stack exceeded
  2078                           ; Regs used in _ReceivedPacketHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2079                           ;ReceivedPacketHandler@Data stored from wreg
  2080  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2081  028B  1303               	bcf	3,6	;RP1=0, select bank1
  2082  028C  00D0               	movwf	ReceivedPacketHandler@Data^(0+128)
  2083                           
  2084                           ;functions.c: 77: if((strstr(Data, "N1BLINK")) && (OperationMode() == 6))
  2085  028D  3028               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2086  028E  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2087  028F  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2088  0290  00AE               	movwf	strstr@s2^(0+128)
  2089  0291  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2090  0292  120A  158A  209A  120A  118A  	fcall	_strstr
  2091  0297  3A00               	xorlw	0
  2092  0298  1903               	skipnz
  2093  0299  2AA2               	goto	l4030
  2094  029A  160A  118A  2471  120A  118A  	fcall	_OperationMode
  2095  029F  3A06               	xorlw	6
  2096  02A0  1903               	btfsc	3,2
  2097  02A1  2AB9               	goto	l4034
  2098  02A2                     l4030:	
  2099                           ;functions.c: 82: }
  2100                           
  2101                           ;functions.c: 81: DelayDs(100);
  2102                           
  2103                           ;functions.c: 80: intBlinkCounter = 0;
  2104                           
  2105                           ;functions.c: 78: {
  2106                           ;functions.c: 79: intBlinkCycle = 1;
  2107                           
  2108                           
  2109                           ;functions.c: 83: else if((strstr(Data, "N2BLINK")) && (OperationMode() == 7))
  2110  02A2  3030               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2111  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2112  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2113  02A5  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2114  02A6  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2115  02A7  00AE               	movwf	strstr@s2^(0+128)
  2116  02A8  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2117  02A9  120A  158A  209A  120A  118A  	fcall	_strstr
  2118  02AE  3A00               	xorlw	0
  2119  02AF  1903               	skipnz
  2120  02B0  2ACC               	goto	l4040
  2121  02B1  160A  118A  2471  120A  118A  	fcall	_OperationMode
  2122  02B6  3A07               	xorlw	7
  2123  02B7  1D03               	skipz
  2124  02B8  2ACC               	goto	l4040
  2125  02B9                     l4034:	
  2126                           
  2127                           ;functions.c: 84: {
  2128                           ;functions.c: 85: intBlinkCycle = 1;
  2129  02B9  3001               	movlw	1
  2130  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2131  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2132  02BC  00D6               	movwf	_intBlinkCycle
  2133  02BD  3000               	movlw	0
  2134  02BE  00D7               	movwf	_intBlinkCycle+1
  2135                           
  2136                           ;functions.c: 86: intBlinkCounter = 0;
  2137  02BF  01D4               	clrf	_intBlinkCounter
  2138  02C0  01D5               	clrf	_intBlinkCounter+1
  2139                           
  2140                           ;functions.c: 87: DelayDs(100);
  2141  02C1  3064               	movlw	100
  2142  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2143  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2144  02C4  00A0               	movwf	DelayDs@cnt^(0+128)
  2145  02C5  3000               	movlw	0
  2146  02C6  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2147  02C7  160A  118A  261D  120A  118A  	fcall	_DelayDs
  2148  02CC                     l4040:	
  2149                           
  2150                           ;functions.c: 88: }
  2151                           ;functions.c: 92: if(Data[0] != 44 || Data[3] != 55)
  2152  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2153  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2154  02CE  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2155  02CF  0084               	movwf	4
  2156  02D0  302C               	movlw	44
  2157  02D1  1783               	bsf	3,7	;select IRP bank2
  2158  02D2  0600               	xorwf	0,w
  2159  02D3  1D03               	btfss	3,2
  2160  02D4  0008               	return
  2161  02D5  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2162  02D6  3E03               	addlw	3
  2163  02D7  0084               	movwf	4
  2164  02D8  3037               	movlw	55
  2165  02D9  0600               	xorwf	0,w
  2166  02DA  1D03               	btfss	3,2
  2167  02DB  0008               	return
  2168  02DC  2C5B               	goto	l4134
  2169  02DD                     l309:	
  2170                           ;functions.c: 99: {
  2171                           ;functions.c: 100: case 1:
  2172                           
  2173                           ;functions.c: 98: switch (Data[2])
  2174                           
  2175                           ;functions.c: 96: {
  2176                           ;functions.c: 97: case 1:
  2177                           
  2178                           ;functions.c: 95: switch (Data[1])
  2179                           
  2180                           ;functions.c: 93: return;
  2181                           
  2182                           
  2183                           ;functions.c: 101: RC2 = 1;
  2184  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2185  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2186  02DF  1507               	bsf	7,2	;volatile
  2187                           
  2188                           ;functions.c: 102: DelayDs(10);
  2189  02E0  300A               	movlw	10
  2190  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2191  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2192  02E3  00A0               	movwf	DelayDs@cnt^(0+128)
  2193  02E4  3000               	movlw	0
  2194  02E5  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2195  02E6  160A  118A  261D  120A  118A  	fcall	_DelayDs
  2196                           
  2197                           ;functions.c: 103: RC2 = 0;
  2198  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2199  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2200  02ED  1107               	bcf	7,2	;volatile
  2201                           
  2202                           ;functions.c: 104: DelayDs(5);
  2203  02EE  3005               	movlw	5
  2204  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2205  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2206  02F1  00A0               	movwf	DelayDs@cnt^(0+128)
  2207  02F2  3000               	movlw	0
  2208  02F3  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2209  02F4  160A  118A  261D   	fcall	_DelayDs
  2210                           
  2211                           ;functions.c: 105: break;
  2212  02F7  0008               	return
  2213  02F8                     l311:	
  2214                           ;functions.c: 107: case 2:
  2215                           
  2216                           
  2217                           ;functions.c: 108: RC1 = 1;
  2218  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2219  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2220  02FA  1487               	bsf	7,1	;volatile
  2221                           
  2222                           ;functions.c: 109: DelayDs(10);
  2223  02FB  300A               	movlw	10
  2224  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2225  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2226  02FE  00A0               	movwf	DelayDs@cnt^(0+128)
  2227  02FF  3000               	movlw	0
  2228  0300  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2229  0301  160A  118A  261D  120A  118A  	fcall	_DelayDs
  2230                           
  2231                           ;functions.c: 110: RC1 = 0;
  2232  0306  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0307  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0308  1087               	bcf	7,1	;volatile
  2235                           
  2236                           ;functions.c: 111: DelayDs(5);
  2237  0309  3005               	movlw	5
  2238  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2239  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2240  030C  00A0               	movwf	DelayDs@cnt^(0+128)
  2241  030D  3000               	movlw	0
  2242  030E  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2243  030F  160A  118A  261D   	fcall	_DelayDs
  2244                           
  2245                           ;functions.c: 112: break;
  2246  0312  0008               	return
  2247  0313                     l312:	
  2248                           ;functions.c: 114: case 3:
  2249                           
  2250                           
  2251                           ;functions.c: 115: RB1 = 0;
  2252  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0315  1086               	bcf	6,1	;volatile
  2255                           
  2256                           ;functions.c: 116: DelayDs(10);
  2257  0316  300A               	movlw	10
  2258  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2259  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2260  0319  00A0               	movwf	DelayDs@cnt^(0+128)
  2261  031A  3000               	movlw	0
  2262  031B  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2263  031C  160A  118A  261D  120A  118A  	fcall	_DelayDs
  2264                           
  2265                           ;functions.c: 117: RB1 = 1;
  2266  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0323  1486               	bsf	6,1	;volatile
  2269                           
  2270                           ;functions.c: 118: DelayDs(5);
  2271  0324  3005               	movlw	5
  2272  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2273  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2274  0327  00A0               	movwf	DelayDs@cnt^(0+128)
  2275  0328  3000               	movlw	0
  2276  0329  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2277  032A  160A  118A  261D   	fcall	_DelayDs
  2278                           
  2279                           ;functions.c: 124: }
  2280                           
  2281                           ;functions.c: 122: break;
  2282                           
  2283                           ;functions.c: 121: default:
  2284                           
  2285                           ;functions.c: 119: break;
  2286  032D  0008               	return
  2287  032E                     l4058:	
  2288  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2289  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0330  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2291  0331  3E02               	addlw	2
  2292  0332  0084               	movwf	4
  2293  0333  1783               	bsf	3,7	;select IRP bank2
  2294  0334  0800               	movf	0,w
  2295                           
  2296                           ; Switch size 1, requested type "space"
  2297                           ; Number of cases is 3, Range of values is 1 to 3
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte           10     6 (average)
  2301                           ; direct_byte           20    11 (fixed)
  2302                           ; jumptable            263     9 (fixed)
  2303                           ;	Chosen strategy is simple_byte
  2304  0335  3A01               	xorlw	1	; case 1
  2305  0336  1903               	skipnz
  2306  0337  2ADD               	goto	l309
  2307  0338  3A03               	xorlw	3	; case 2
  2308  0339  1903               	skipnz
  2309  033A  2AF8               	goto	l311
  2310  033B  3A01               	xorlw	1	; case 3
  2311  033C  1903               	skipnz
  2312  033D  2B13               	goto	l312
  2313  033E  2C7D               	goto	l305
  2314                           
  2315                           ;functions.c: 125: break;
  2316  033F  0008               	return
  2317  0340                     l4060:	
  2318                           ;functions.c: 126: case 2:
  2319                           
  2320                           
  2321                           ;functions.c: 127: if(Data[2] == 1 && OperationMode() == 6)
  2322  0340  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2323  0341  3E02               	addlw	2
  2324  0342  0084               	movwf	4
  2325  0343  0300               	decf	0,w
  2326  0344  1D03               	btfss	3,2
  2327  0345  2B61               	goto	l4070
  2328  0346  160A  118A  2471  120A  118A  	fcall	_OperationMode
  2329  034B  3A06               	xorlw	6
  2330  034C  1D03               	skipz
  2331  034D  2B61               	goto	l4070
  2332                           
  2333                           ;functions.c: 128: {
  2334                           ;functions.c: 129: intBlinkCycle = 1;
  2335  034E  3001               	movlw	1
  2336  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0351  00D6               	movwf	_intBlinkCycle
  2339  0352  3000               	movlw	0
  2340  0353  00D7               	movwf	_intBlinkCycle+1
  2341                           
  2342                           ;functions.c: 130: intBlinkCounter = 0;
  2343  0354  01D4               	clrf	_intBlinkCounter
  2344  0355  01D5               	clrf	_intBlinkCounter+1
  2345                           
  2346                           ;functions.c: 131: DelayDs(100);
  2347  0356  3064               	movlw	100
  2348  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2349  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2350  0359  00A0               	movwf	DelayDs@cnt^(0+128)
  2351  035A  3000               	movlw	0
  2352  035B  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2353  035C  160A  118A  261D  120A  118A  	fcall	_DelayDs
  2354  0361                     l4070:	
  2355                           
  2356                           ;functions.c: 132: }
  2357                           ;functions.c: 133: if(Data[2] == 2 && OperationMode() == 7)
  2358  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2359  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2360  0363  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2361  0364  3E02               	addlw	2
  2362  0365  0084               	movwf	4
  2363  0366  3002               	movlw	2
  2364  0367  1783               	bsf	3,7	;select IRP bank2
  2365  0368  0600               	xorwf	0,w
  2366  0369  1D03               	btfss	3,2
  2367  036A  0008               	return
  2368  036B  160A  118A  2471  120A  118A  	fcall	_OperationMode
  2369  0370  3A07               	xorlw	7
  2370  0371  1D03               	skipz
  2371  0372  0008               	return
  2372                           
  2373                           ;functions.c: 134: {
  2374                           ;functions.c: 135: intBlinkCycle = 1;
  2375  0373  3001               	movlw	1
  2376  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0376  00D6               	movwf	_intBlinkCycle
  2379  0377  3000               	movlw	0
  2380  0378  00D7               	movwf	_intBlinkCycle+1
  2381                           
  2382                           ;functions.c: 136: intBlinkCounter = 0;
  2383  0379  01D4               	clrf	_intBlinkCounter
  2384  037A  01D5               	clrf	_intBlinkCounter+1
  2385                           
  2386                           ;functions.c: 137: DelayDs(100);
  2387  037B  3064               	movlw	100
  2388  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2389  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2390  037E  00A0               	movwf	DelayDs@cnt^(0+128)
  2391  037F  3000               	movlw	0
  2392  0380  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  2393  0381  160A  118A  261D   	fcall	_DelayDs
  2394                           
  2395                           ;functions.c: 138: }
  2396                           ;functions.c: 139: break;
  2397  0384  0008               	return
  2398  0385                     l4080:	
  2399                           ;functions.c: 141: case 3:
  2400                           
  2401                           
  2402                           ;functions.c: 142: if(Data[2] != 0)
  2403  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2405  0387  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2406  0388  3E02               	addlw	2
  2407  0389  0084               	movwf	4
  2408  038A  1783               	bsf	3,7	;select IRP bank2
  2409  038B  0800               	movf	0,w
  2410  038C  1D03               	btfss	3,2
  2411  038D  0008               	return
  2412                           
  2413                           ;functions.c: 144: TransmittPacket(3, AnalogValue(0));
  2414                           
  2415                           ;functions.c: 143: break;
  2416  038E  3000               	movlw	0
  2417  038F  160A  118A  27C7  120A  118A  	fcall	_AnalogValue
  2418  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0396  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2421  0397  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2422  0398  00B5               	movwf	TransmittPacket@value^(0+128)
  2423  0399  3003               	movlw	3
  2424  039A  120A  158A  24AE   	fcall	_TransmittPacket
  2425                           
  2426                           ;functions.c: 145: break;
  2427  039D  0008               	return
  2428  039E                     l4086:	
  2429                           ;functions.c: 147: case 4:
  2430                           
  2431                           
  2432                           ;functions.c: 148: if(Data[2] != 0)
  2433  039E  1683               	bsf	3,5	;RP0=1, select bank1
  2434  039F  1303               	bcf	3,6	;RP1=0, select bank1
  2435  03A0  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2436  03A1  3E02               	addlw	2
  2437  03A2  0084               	movwf	4
  2438  03A3  1783               	bsf	3,7	;select IRP bank2
  2439  03A4  0800               	movf	0,w
  2440  03A5  1D03               	btfss	3,2
  2441  03A6  0008               	return
  2442                           
  2443                           ;functions.c: 150: TransmittPacket(4, AnalogValue(3));
  2444                           
  2445                           ;functions.c: 149: break;
  2446  03A7  3003               	movlw	3
  2447  03A8  160A  118A  27C7  120A  118A  	fcall	_AnalogValue
  2448  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2449  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2450  03AF  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2451  03B0  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2452  03B1  00B5               	movwf	TransmittPacket@value^(0+128)
  2453  03B2  3004               	movlw	4
  2454  03B3  120A  158A  24AE   	fcall	_TransmittPacket
  2455                           
  2456                           ;functions.c: 151: break;
  2457  03B6  0008               	return
  2458  03B7                     l4092:	
  2459                           ;functions.c: 153: case 5:
  2460                           
  2461                           
  2462                           ;functions.c: 154: if(Data[2] != 0)
  2463  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2464  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2465  03B9  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2466  03BA  3E02               	addlw	2
  2467  03BB  0084               	movwf	4
  2468  03BC  1783               	bsf	3,7	;select IRP bank2
  2469  03BD  0800               	movf	0,w
  2470  03BE  1903               	btfsc	3,2
  2471  03BF  2BCC               	goto	l4096
  2472                           
  2473                           ;functions.c: 155: {
  2474                           ;functions.c: 156: eeprom_write(0, Data[2]);
  2475  03C0  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2476  03C1  3E02               	addlw	2
  2477  03C2  0084               	movwf	4
  2478  03C3  0800               	movf	0,w
  2479  03C4  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2480  03C5  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2481  03C6  00A0               	movwf	eeprom_write@value^(0+128)
  2482  03C7  3000               	movlw	0
  2483  03C8  160A  118A  2760   	fcall	_eeprom_write
  2484                           
  2485                           ;functions.c: 157: break;
  2486  03CB  0008               	return
  2487  03CC                     l4096:	
  2488                           
  2489                           ;functions.c: 158: }
  2490                           ;functions.c: 159: TransmittPacket(5, eeprom_read(0));
  2491  03CC  3000               	movlw	0
  2492  03CD  160A  118A  2641  120A  118A  	fcall	_eeprom_read
  2493  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2494  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2495  03D4  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2496  03D5  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2497  03D6  00B5               	movwf	TransmittPacket@value^(0+128)
  2498  03D7  3005               	movlw	5
  2499  03D8  120A  158A  24AE   	fcall	_TransmittPacket
  2500                           
  2501                           ;functions.c: 160: break;
  2502  03DB  0008               	return
  2503  03DC                     l4098:	
  2504                           ;functions.c: 162: case 6:
  2505                           
  2506                           
  2507                           ;functions.c: 163: if(Data[2] == 0)
  2508  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2509  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2510  03DE  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2511  03DF  3E02               	addlw	2
  2512  03E0  0084               	movwf	4
  2513  03E1  1783               	bsf	3,7	;select IRP bank2
  2514  03E2  0800               	movf	0,w
  2515  03E3  1D03               	btfss	3,2
  2516  03E4  2BFB               	goto	l4106
  2517                           
  2518                           ;functions.c: 164: {
  2519                           ;functions.c: 165: if(bValueFromPot == TRUE)
  2520  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2521  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2522  03E7  0363               	decf	_bValueFromPot,w
  2523  03E8  1D03               	btfss	3,2
  2524  03E9  2BF3               	goto	l4104
  2525                           
  2526                           ;functions.c: 166: TransmittPacket(6, 1);
  2527  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2528  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2529  03EC  01B5               	clrf	TransmittPacket@value^(0+128)
  2530  03ED  0AB5               	incf	TransmittPacket@value^(0+128),f
  2531  03EE  3006               	movlw	6
  2532  03EF  120A  158A  24AE   	fcall	_TransmittPacket
  2533  03F2  0008               	return
  2534  03F3                     l4104:	
  2535                           
  2536                           ;functions.c: 167: else
  2537                           ;functions.c: 168: TransmittPacket(6, 0);
  2538  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2539  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2540  03F5  01B5               	clrf	TransmittPacket@value^(0+128)
  2541  03F6  3006               	movlw	6
  2542  03F7  120A  158A  24AE   	fcall	_TransmittPacket
  2543                           
  2544                           ;functions.c: 169: }
  2545  03FA  0008               	return
  2546  03FB                     l4106:	
  2547                           
  2548                           ;functions.c: 170: else if(Data[2] == 1)
  2549  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2550  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2551  03FD  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2552  03FE  3E02               	addlw	2
  2553  03FF  0084               	movwf	4
  2554  0400  1783               	bsf	3,7	;select IRP bank2
  2555  0401  0300               	decf	0,w
  2556  0402  1D03               	btfss	3,2
  2557  0403  2C09               	goto	l4110
  2558                           
  2559                           ;functions.c: 171: bValueFromPot = TRUE;
  2560  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0406  01E3               	clrf	_bValueFromPot
  2563  0407  0AE3               	incf	_bValueFromPot,f
  2564  0408  0008               	return
  2565  0409                     l4110:	
  2566                           
  2567                           ;functions.c: 172: else if(Data[2] == 0)
  2568  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2569  040A  1303               	bcf	3,6	;RP1=0, select bank1
  2570  040B  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2571  040C  3E02               	addlw	2
  2572  040D  0084               	movwf	4
  2573  040E  0800               	movf	0,w
  2574  040F  1D03               	btfss	3,2
  2575  0410  0008               	return
  2576                           
  2577                           ;functions.c: 173: bValueFromPot = FALSE;
  2578  0411  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0412  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0413  01E3               	clrf	_bValueFromPot
  2581                           
  2582                           ;functions.c: 175: break;
  2583  0414  0008               	return
  2584  0415                     l4114:	
  2585                           ;functions.c: 177: case 7:
  2586                           
  2587                           
  2588                           ;functions.c: 178: if(Data[2] != 0)
  2589  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0417  0850               	movf	ReceivedPacketHandler@Data^(0+128),w
  2592  0418  3E02               	addlw	2
  2593  0419  0084               	movwf	4
  2594  041A  0800               	movf	0,w
  2595  041B  1D03               	btfss	3,2
  2596  041C  0008               	return
  2597                           
  2598                           ;functions.c: 180: DarknessCheck();
  2599                           
  2600                           ;functions.c: 179: break;
  2601  041D  120A  118A  27D6  120A  118A  	fcall	_DarknessCheck
  2602                           
  2603                           ;functions.c: 181: if(bDark)
  2604  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0424  0856               	movf	_bDark^(0+128),w
  2607  0425  1903               	btfsc	3,2
  2608  0426  2C2E               	goto	l4124
  2609                           
  2610                           ;functions.c: 182: TransmittPacket(7, 1);
  2611  0427  01B5               	clrf	TransmittPacket@value^(0+128)
  2612  0428  0AB5               	incf	TransmittPacket@value^(0+128),f
  2613  0429  3007               	movlw	7
  2614  042A  120A  158A  24AE   	fcall	_TransmittPacket
  2615  042D  0008               	return
  2616  042E                     l4124:	
  2617                           
  2618                           ;functions.c: 183: else
  2619                           ;functions.c: 184: TransmittPacket(7, 2);
  2620  042E  3002               	movlw	2
  2621  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0430  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0431  00CF               	movwf	??_ReceivedPacketHandler^(0+128)
  2624  0432  084F               	movf	??_ReceivedPacketHandler^(0+128),w
  2625  0433  00B5               	movwf	TransmittPacket@value^(0+128)
  2626  0434  3007               	movlw	7
  2627  0435  120A  158A  24AE   	fcall	_TransmittPacket
  2628                           
  2629                           ;functions.c: 185: break;
  2630  0438  0008               	return
  2631  0439                     l4126:	
  2632                           ;functions.c: 187: case 9:
  2633                           
  2634                           
  2635                           ;functions.c: 188: write_ram_status(read_ram_status() & 0b11100011);
  2636  0439  160A  118A  252F  120A  118A  	fcall	_read_ram_status
  2637  043E  39E3               	andlw	227
  2638  043F  160A  118A  2732  120A  118A  	fcall	_write_ram_status
  2639                           
  2640                           ;functions.c: 189: ram_bulk_erase();
  2641  0444  160A  118A  25D7  120A  118A  	fcall	_ram_bulk_erase
  2642                           
  2643                           ;functions.c: 190: ResetMemoryAdress();
  2644  0449  160A  118A  2547  120A  118A  	fcall	_ResetMemoryAdress
  2645                           
  2646                           ;functions.c: 191: TransmittPacket(9, 1);
  2647  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2648  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0450  01B5               	clrf	TransmittPacket@value^(0+128)
  2650  0451  0AB5               	incf	TransmittPacket@value^(0+128),f
  2651  0452  3009               	movlw	9
  2652  0453  120A  158A  24AE   	fcall	_TransmittPacket
  2653                           
  2654                           ;functions.c: 192: break;
  2655  0456  0008               	return
  2656  0457                     l4130:	
  2657                           ;functions.c: 194: case 8:
  2658                           
  2659                           
  2660                           ;functions.c: 195: SendMemoryData();
  2661  0457  120A  118A  25B7   	fcall	_SendMemoryData
  2662                           
  2663                           ;functions.c: 200: }
  2664                           
  2665                           ;functions.c: 199: break;
  2666                           
  2667                           ;functions.c: 198: default:
  2668                           
  2669                           ;functions.c: 196: break;
  2670  045A  0008               	return
  2671  045B                     l4134:	
  2672  045B  1683               	bsf	3,5	;RP0=1, select bank1
  2673  045C  1303               	bcf	3,6	;RP1=0, select bank1
  2674  045D  0A50               	incf	ReceivedPacketHandler@Data^(0+128),w
  2675  045E  0084               	movwf	4
  2676  045F  1783               	bsf	3,7	;select IRP bank2
  2677  0460  0800               	movf	0,w
  2678                           
  2679                           ; Switch size 1, requested type "space"
  2680                           ; Number of cases is 9, Range of values is 1 to 9
  2681                           ; switch strategies available:
  2682                           ; Name         Instructions Cycles
  2683                           ; simple_byte           28    15 (average)
  2684                           ; direct_byte           38    11 (fixed)
  2685                           ; jumptable            263     9 (fixed)
  2686                           ;	Chosen strategy is simple_byte
  2687  0461  3A01               	xorlw	1	; case 1
  2688  0462  1903               	skipnz
  2689  0463  2B2E               	goto	l4058
  2690  0464  3A03               	xorlw	3	; case 2
  2691  0465  1903               	skipnz
  2692  0466  2B40               	goto	l4060
  2693  0467  3A01               	xorlw	1	; case 3
  2694  0468  1903               	skipnz
  2695  0469  2B85               	goto	l4080
  2696  046A  3A07               	xorlw	7	; case 4
  2697  046B  1903               	skipnz
  2698  046C  2B9E               	goto	l4086
  2699  046D  3A01               	xorlw	1	; case 5
  2700  046E  1903               	skipnz
  2701  046F  2BB7               	goto	l4092
  2702  0470  3A03               	xorlw	3	; case 6
  2703  0471  1903               	skipnz
  2704  0472  2BDC               	goto	l4098
  2705  0473  3A01               	xorlw	1	; case 7
  2706  0474  1903               	skipnz
  2707  0475  2C15               	goto	l4114
  2708  0476  3A0F               	xorlw	15	; case 8
  2709  0477  1903               	skipnz
  2710  0478  2C57               	goto	l4130
  2711  0479  3A01               	xorlw	1	; case 9
  2712  047A  1903               	skipnz
  2713  047B  2C39               	goto	l4126
  2714  047C  2C7D               	goto	l305
  2715  047D                     l305:	
  2716  047D  0008               	return
  2717  047E                     __end_of_ReceivedPacketHandler:	
  2718                           
  2719                           	psect	text4
  2720  1732                     __ptext4:	
  2721 ;; *************** function _write_ram_status *****************
  2722 ;; Defined at:
  2723 ;;		line 169 in file "m25p16.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  status          1    wreg     unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  status          1    5[BANK1 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0, pclath, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         0       0       0       0       0
  2738 ;;      Locals:         0       0       1       0       0
  2739 ;;      Temps:          0       0       0       0       0
  2740 ;;      Totals:         0       0       1       0       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    9
  2744 ;; This function calls:
  2745 ;;		_WriteSPI
  2746 ;;		_read_ram_status
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;;		_ReceivedPacketHandler
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _write_ram_status
  2755  1732                     _write_ram_status:	
  2756                           
  2757                           ;incstack = 0
  2758 ;; hardware stack exceeded
  2759                           ; Regs used in _write_ram_status: [wreg+status,2+status,0+pclath+cstack]
  2760                           ;write_ram_status@status stored from wreg
  2761  1732  1683               	bsf	3,5	;RP0=1, select bank1
  2762  1733  1303               	bcf	3,6	;RP1=0, select bank1
  2763  1734  00A5               	movwf	write_ram_status@status^(0+128)
  2764                           
  2765                           ;m25p16.c: 172: RD3 = 0;
  2766  1735  1283               	bcf	3,5	;RP0=0, select bank0
  2767  1736  1303               	bcf	3,6	;RP1=0, select bank0
  2768  1737  1188               	bcf	8,3	;volatile
  2769                           
  2770                           ;m25p16.c: 173: WriteSPI(0x06);
  2771  1738  3006               	movlw	6
  2772  1739  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  2773                           
  2774                           ;m25p16.c: 174: RD3 = 1;
  2775  173E  1283               	bcf	3,5	;RP0=0, select bank0
  2776  173F  1303               	bcf	3,6	;RP1=0, select bank0
  2777  1740  1588               	bsf	8,3	;volatile
  2778                           
  2779                           ;m25p16.c: 175: _delay((unsigned long)((2)*(4000000/4000000.0)));
  2780  1741  2F42               	nop2	;2 cycle nop
  2781                           
  2782                           ;m25p16.c: 176: RD3 = 0;
  2783  1742  1283               	bcf	3,5	;RP0=0, select bank0
  2784  1743  1303               	bcf	3,6	;RP1=0, select bank0
  2785  1744  1188               	bcf	8,3	;volatile
  2786                           
  2787                           ;m25p16.c: 177: WriteSPI(0x01);
  2788  1745  3001               	movlw	1
  2789  1746  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  2790                           
  2791                           ;m25p16.c: 178: WriteSPI(status);
  2792  174B  1683               	bsf	3,5	;RP0=1, select bank1
  2793  174C  1303               	bcf	3,6	;RP1=0, select bank1
  2794  174D  0825               	movf	write_ram_status@status^(0+128),w
  2795  174E  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  2796                           
  2797                           ;m25p16.c: 179: RD3 = 1;
  2798  1753  1283               	bcf	3,5	;RP0=0, select bank0
  2799  1754  1303               	bcf	3,6	;RP1=0, select bank0
  2800  1755  1588               	bsf	8,3	;volatile
  2801                           
  2802                           ;m25p16.c: 180: _delay((unsigned long)((2)*(4000000/4000000.0)));
  2803  1756  2F57               	nop2	;2 cycle nop
  2804  1757                     l3926:	
  2805                           ;m25p16.c: 181: while (read_ram_status() & 0x01);
  2806                           
  2807  1757  160A  118A  252F  160A  118A  	fcall	_read_ram_status
  2808  175C  3901               	andlw	1
  2809  175D  1903               	btfsc	3,2
  2810  175E  0008               	return
  2811  175F  2F57               	goto	l3926
  2812  1760                     __end_of_write_ram_status:	
  2813                           
  2814                           	psect	text5
  2815  089A                     __ptext5:	
  2816 ;; *************** function _strstr *****************
  2817 ;; Defined at:
  2818 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strstr.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  s1              1    wreg     PTR const unsigned char 
  2821 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  2822 ;;  s2              1   14[BANK1 ] PTR const unsigned char 
  2823 ;;		 -> STR_2(8), STR_1(8), 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  s1              1   18[BANK1 ] PTR const unsigned char 
  2826 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      PTR unsigned char 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       1       0       0
  2837 ;;      Locals:         0       0       1       0       0
  2838 ;;      Temps:          0       0       3       0       0
  2839 ;;      Totals:         0       0       5       0       0
  2840 ;;Total ram usage:        5 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    7
  2843 ;; This function calls:
  2844 ;;		_strchr
  2845 ;;		_strlen
  2846 ;;		_strncmp
  2847 ;; This function is called by:
  2848 ;;		_ReceivedPacketHandler
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           
  2853                           ;psect for function _strstr
  2854  089A                     _strstr:	
  2855                           
  2856                           ;incstack = 0
  2857 ;; hardware stack exceeded
  2858                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2859                           ;strstr@s1 stored from wreg
  2860  089A  1683               	bsf	3,5	;RP0=1, select bank1
  2861  089B  1303               	bcf	3,6	;RP1=0, select bank1
  2862  089C  00B2               	movwf	strstr@s1^(0+128)
  2863  089D  28D5               	goto	l3960
  2864  089E                     l3952:	
  2865  089E  082E               	movf	strstr@s2^(0+128),w
  2866  089F  00AF               	movwf	??_strstr^(0+128)
  2867  08A0  082F               	movf	??_strstr^(0+128),w
  2868  08A1  00A8               	movwf	strncmp@s2^(0+128)
  2869  08A2  082E               	movf	strstr@s2^(0+128),w
  2870  08A3  160A  118A  2706  120A  158A  	fcall	_strlen
  2871  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  2872  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  2873  08AA  0821               	movf	(?_strlen+1)^(0+128),w
  2874  08AB  00AA               	movwf	(strncmp@len+1)^(0+128)
  2875  08AC  0820               	movf	?_strlen^(0+128),w
  2876  08AD  00A9               	movwf	strncmp@len^(0+128)
  2877  08AE  0832               	movf	strstr@s1^(0+128),w
  2878  08AF  120A  158A  2056  120A  158A  	fcall	_strncmp
  2879  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  2880  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  2881  08B6  0828               	movf	?_strncmp^(0+128),w
  2882  08B7  0429               	iorwf	(?_strncmp+1)^(0+128),w
  2883  08B8  1D03               	btfss	3,2
  2884  08B9  28BC               	goto	l3958
  2885  08BA  0832               	movf	strstr@s1^(0+128),w
  2886  08BB  0008               	return
  2887  08BC                     l3958:	
  2888  08BC  082E               	movf	strstr@s2^(0+128),w
  2889  08BD  0084               	movwf	4
  2890  08BE  160A  118A  2000  120A  158A  	fcall	stringdir
  2891  08C3  00AF               	movwf	??_strstr^(0+128)
  2892  08C4  01B0               	clrf	(??_strstr^(0+128)+1)
  2893  08C5  082F               	movf	??_strstr^(0+128),w
  2894  08C6  00A0               	movwf	strchr@chr^(0+128)
  2895  08C7  0830               	movf	(??_strstr+1)^(0+128),w
  2896  08C8  00A1               	movwf	(strchr@chr+1)^(0+128)
  2897  08C9  0832               	movf	strstr@s1^(0+128),w
  2898  08CA  3E01               	addlw	1
  2899  08CB  160A  118A  2502  120A  158A  	fcall	_strchr
  2900  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  2901  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  2902  08D2  00B1               	movwf	(??_strstr+2)^(0+128)
  2903  08D3  0831               	movf	(??_strstr+2)^(0+128),w
  2904  08D4  00B2               	movwf	strstr@s1^(0+128)
  2905  08D5                     l3960:	
  2906  08D5  0832               	movf	strstr@s1^(0+128),w
  2907  08D6  1903               	btfsc	3,2
  2908  08D7  28DE               	goto	l3964
  2909  08D8  0832               	movf	strstr@s1^(0+128),w
  2910  08D9  0084               	movwf	4
  2911  08DA  1783               	bsf	3,7	;select IRP bank2
  2912  08DB  0800               	movf	0,w
  2913  08DC  1D03               	btfss	3,2
  2914  08DD  289E               	goto	l3952
  2915  08DE                     l3964:	
  2916  08DE  3000               	movlw	0
  2917  08DF  0008               	return
  2918  08E0                     __end_of_strstr:	
  2919                           
  2920                           	psect	text6
  2921  0856                     __ptext6:	
  2922 ;; *************** function _strncmp *****************
  2923 ;; Defined at:
  2924 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strncmp.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  s1              1    wreg     PTR const unsigned char 
  2927 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  2928 ;;  s2              1    8[BANK1 ] PTR const unsigned char 
  2929 ;;		 -> STR_2(8), STR_1(8), 
  2930 ;;  len             2    9[BANK1 ] unsigned int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  s1              1   13[BANK1 ] PTR const unsigned char 
  2933 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    8[BANK1 ] int 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       0       3       0       0
  2944 ;;      Locals:         0       0       1       0       0
  2945 ;;      Temps:          0       0       2       0       0
  2946 ;;      Totals:         0       0       6       0       0
  2947 ;;Total ram usage:        6 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    6
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_strstr
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           
  2958                           ;psect for function _strncmp
  2959  0856                     _strncmp:	
  2960                           
  2961                           ;incstack = 0
  2962 ;; hardware stack exceeded
  2963                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2964                           ;strncmp@s1 stored from wreg
  2965  0856  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0857  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0858  00AD               	movwf	strncmp@s1^(0+128)
  2968  0859                     l1168:	
  2969  0859  3001               	movlw	1
  2970  085A  02A9               	subwf	strncmp@len^(0+128),f
  2971  085B  3000               	movlw	0
  2972  085C  1C03               	skipc
  2973  085D  03AA               	decf	(strncmp@len+1)^(0+128),f
  2974  085E  02AA               	subwf	(strncmp@len+1)^(0+128),f
  2975  085F  0A29               	incf	strncmp@len^(0+128),w
  2976  0860  1903               	btfsc	3,2
  2977  0861  0A2A               	incf	(strncmp@len+1)^(0+128),w
  2978  0862  1903               	btfsc	3,2
  2979  0863  2897               	goto	l3896
  2980  0864  082D               	movf	strncmp@s1^(0+128),w
  2981  0865  0084               	movwf	4
  2982  0866  1783               	bsf	3,7	;select IRP bank2
  2983  0867  0800               	movf	0,w
  2984  0868  1903               	btfsc	3,2
  2985  0869  2878               	goto	l3890
  2986  086A  0828               	movf	strncmp@s2^(0+128),w
  2987  086B  0084               	movwf	4
  2988  086C  160A  118A  2000  120A  158A  	fcall	stringdir
  2989  0871  00AB               	movwf	??_strncmp^(0+128)
  2990  0872  082D               	movf	strncmp@s1^(0+128),w
  2991  0873  0084               	movwf	4
  2992  0874  0800               	movf	0,w
  2993  0875  062B               	xorwf	??_strncmp^(0+128),w
  2994  0876  1903               	skipnz
  2995  0877  288E               	goto	l3894
  2996  0878                     l3890:	
  2997  0878  0828               	movf	strncmp@s2^(0+128),w
  2998  0879  0084               	movwf	4
  2999  087A  160A  118A  2000   	fcall	stringdir
  3000  087D  00AB               	movwf	??_strncmp^(0+128)
  3001  087E  01AC               	clrf	(??_strncmp^(0+128)+1)
  3002  087F  09AB               	comf	??_strncmp^(0+128),f
  3003  0880  09AC               	comf	(??_strncmp^(0+128)+1),f
  3004  0881  0AAB               	incf	??_strncmp^(0+128),f
  3005  0882  1903               	skipnz
  3006  0883  0AAC               	incf	(??_strncmp^(0+128)+1),f
  3007  0884  082D               	movf	strncmp@s1^(0+128),w
  3008  0885  0084               	movwf	4
  3009  0886  0800               	movf	0,w
  3010  0887  072B               	addwf	??_strncmp^(0+128),w
  3011  0888  00A8               	movwf	?_strncmp^(0+128)
  3012  0889  082C               	movf	(??_strncmp+1)^(0+128),w
  3013  088A  1803               	skipnc
  3014  088B  0A2C               	incf	(??_strncmp+1)^(0+128),w
  3015  088C  00A9               	movwf	(?_strncmp^(0+128)+1)
  3016  088D  0008               	return
  3017  088E                     l3894:	
  3018  088E  3001               	movlw	1
  3019  088F  00AB               	movwf	??_strncmp^(0+128)
  3020  0890  082B               	movf	??_strncmp^(0+128),w
  3021  0891  07AD               	addwf	strncmp@s1^(0+128),f
  3022  0892  3001               	movlw	1
  3023  0893  00AB               	movwf	??_strncmp^(0+128)
  3024  0894  082B               	movf	??_strncmp^(0+128),w
  3025  0895  07A8               	addwf	strncmp@s2^(0+128),f
  3026  0896  2859               	goto	l1168
  3027  0897                     l3896:	
  3028  0897  01A8               	clrf	?_strncmp^(0+128)
  3029  0898  01A9               	clrf	(?_strncmp+1)^(0+128)
  3030  0899  0008               	return
  3031  089A                     __end_of_strncmp:	
  3032                           
  3033                           	psect	text7
  3034  1706                     __ptext7:	
  3035 ;; *************** function _strlen *****************
  3036 ;; Defined at:
  3037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  s               1    wreg     PTR const unsigned char 
  3040 ;;		 -> STR_2(8), STR_1(8), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  3043 ;;		 -> STR_2(8), STR_1(8), 
  3044 ;;  cp              1    7[BANK1 ] PTR const unsigned char 
  3045 ;;		 -> STR_2(8), STR_1(8), 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  2    0[BANK1 ] unsigned int 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       2       0       0
  3056 ;;      Locals:         0       0       2       0       0
  3057 ;;      Temps:          0       0       4       0       0
  3058 ;;      Totals:         0       0       8       0       0
  3059 ;;Total ram usage:        8 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    6
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_strstr
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _strlen
  3071  1706                     _strlen:	
  3072                           
  3073                           ;incstack = 0
  3074 ;; hardware stack exceeded
  3075                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  3076                           ;strlen@s stored from wreg
  3077  1706  1683               	bsf	3,5	;RP0=1, select bank1
  3078  1707  1303               	bcf	3,6	;RP1=0, select bank1
  3079  1708  00A6               	movwf	strlen@s^(0+128)
  3080  1709  0826               	movf	strlen@s^(0+128),w
  3081  170A  00A2               	movwf	??_strlen^(0+128)
  3082  170B  0822               	movf	??_strlen^(0+128),w
  3083  170C  00A7               	movwf	strlen@cp^(0+128)
  3084  170D                     l3878:	
  3085  170D  0827               	movf	strlen@cp^(0+128),w
  3086  170E  0084               	movwf	4
  3087  170F  160A  118A  2000  160A  118A  	fcall	stringdir
  3088  1714  3A00               	xorlw	0
  3089  1715  1903               	btfsc	3,2
  3090  1716  2F1C               	goto	l3880
  3091  1717  3001               	movlw	1
  3092  1718  00A2               	movwf	??_strlen^(0+128)
  3093  1719  0822               	movf	??_strlen^(0+128),w
  3094  171A  07A7               	addwf	strlen@cp^(0+128),f
  3095  171B  2F0D               	goto	l3878
  3096  171C                     l3880:	
  3097  171C  0826               	movf	strlen@s^(0+128),w
  3098  171D  00A2               	movwf	??_strlen^(0+128)
  3099  171E  3080               	movlw	128
  3100  171F  00A3               	movwf	(??_strlen^(0+128)+1)
  3101  1720  09A2               	comf	??_strlen^(0+128),f
  3102  1721  09A3               	comf	(??_strlen^(0+128)+1),f
  3103  1722  0AA2               	incf	??_strlen^(0+128),f
  3104  1723  1903               	skipnz
  3105  1724  0AA3               	incf	(??_strlen^(0+128)+1),f
  3106  1725  0827               	movf	strlen@cp^(0+128),w
  3107  1726  00A4               	movwf	(??_strlen+2)^(0+128)
  3108  1727  3080               	movlw	128
  3109  1728  00A5               	movwf	((??_strlen+2)^(0+128)+1)
  3110  1729  0822               	movf	??_strlen^(0+128),w
  3111  172A  0724               	addwf	(??_strlen+2)^(0+128),w
  3112  172B  00A0               	movwf	?_strlen^(0+128)
  3113  172C  0823               	movf	(??_strlen+1)^(0+128),w
  3114  172D  1803               	skipnc
  3115  172E  0A23               	incf	(??_strlen+1)^(0+128),w
  3116  172F  0725               	addwf	(??_strlen+3)^(0+128),w
  3117  1730  00A1               	movwf	(?_strlen+1)^(0+128)
  3118  1731  0008               	return
  3119  1732                     __end_of_strlen:	
  3120                           
  3121                           	psect	text8
  3122  1502                     __ptext8:	
  3123 ;; *************** function _strchr *****************
  3124 ;; Defined at:
  3125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strchr.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  ptr             1    wreg     PTR const unsigned char 
  3128 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  3129 ;;  chr             2    0[BANK1 ] int 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  ptr             1    2[BANK1 ] PTR const unsigned char 
  3132 ;;		 -> NULL(0), TransiverReadFIFO@ReceivedString(30), 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      PTR unsigned char 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       2       0       0
  3143 ;;      Locals:         0       0       1       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       3       0       0
  3146 ;;Total ram usage:        3 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    6
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_strstr
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _strchr
  3158  1502                     _strchr:	
  3159                           
  3160                           ;incstack = 0
  3161 ;; hardware stack exceeded
  3162                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  3163                           ;strchr@ptr stored from wreg
  3164  1502  1683               	bsf	3,5	;RP0=1, select bank1
  3165  1503  1303               	bcf	3,6	;RP1=0, select bank1
  3166  1504  00A2               	movwf	strchr@ptr^(0+128)
  3167  1505                     l1156:	
  3168  1505  0822               	movf	strchr@ptr^(0+128),w
  3169  1506  0084               	movwf	4
  3170  1507  1783               	bsf	3,7	;select IRP bank2
  3171  1508  0800               	movf	0,w
  3172  1509  0620               	xorwf	strchr@chr^(0+128),w
  3173  150A  1D03               	skipz
  3174  150B  2D0E               	goto	l3906
  3175  150C  0822               	movf	strchr@ptr^(0+128),w
  3176  150D  0008               	return
  3177  150E                     l3906:	
  3178  150E  0822               	movf	strchr@ptr^(0+128),w
  3179  150F  0084               	movwf	4
  3180  1510  3001               	movlw	1
  3181  1511  07A2               	addwf	strchr@ptr^(0+128),f
  3182  1512  0800               	movf	0,w
  3183  1513  1D03               	btfss	3,2
  3184  1514  2D05               	goto	l1156
  3185  1515  3000               	movlw	0
  3186  1516  0008               	return
  3187  1517                     __end_of_strchr:	
  3188                           
  3189                           	psect	text9
  3190  15D7                     __ptext9:	
  3191 ;; *************** function _ram_bulk_erase *****************
  3192 ;; Defined at:
  3193 ;;		line 69 in file "m25p16.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    9
  3214 ;; This function calls:
  3215 ;;		_WriteSPI
  3216 ;;		_read_ram_status
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;;		_ReceivedPacketHandler
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           
  3224                           ;psect for function _ram_bulk_erase
  3225  15D7                     _ram_bulk_erase:	
  3226                           
  3227                           ;m25p16.c: 71: RD3 = 0;
  3228                           
  3229                           ;incstack = 0
  3230 ;; hardware stack exceeded
  3231                           ; Regs used in _ram_bulk_erase: [wreg+status,2+status,0+pclath+cstack]
  3232  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  3233  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  3234  15D9  1188               	bcf	8,3	;volatile
  3235                           
  3236                           ;m25p16.c: 72: WriteSPI(0x06);
  3237  15DA  3006               	movlw	6
  3238  15DB  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  3239                           
  3240                           ;m25p16.c: 73: RD3 = 1;
  3241  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  3242  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  3243  15E2  1588               	bsf	8,3	;volatile
  3244                           
  3245                           ;m25p16.c: 74: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3246  15E3  0000               	nop
  3247                           
  3248                           ;m25p16.c: 75: RD3 = 0;
  3249  15E4  1283               	bcf	3,5	;RP0=0, select bank0
  3250  15E5  1303               	bcf	3,6	;RP1=0, select bank0
  3251  15E6  1188               	bcf	8,3	;volatile
  3252                           
  3253                           ;m25p16.c: 76: WriteSPI(0xC7);
  3254  15E7  30C7               	movlw	199
  3255  15E8  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  3256                           
  3257                           ;m25p16.c: 77: RD3 = 1;
  3258  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  3259  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  3260  15EF  1588               	bsf	8,3	;volatile
  3261  15F0                     l3940:	
  3262                           ;m25p16.c: 78: while(read_ram_status());
  3263                           
  3264  15F0  160A  118A  252F  160A  118A  	fcall	_read_ram_status
  3265  15F5  3A00               	xorlw	0
  3266  15F6  1903               	btfsc	3,2
  3267  15F7  0008               	return
  3268  15F8  2DF0               	goto	l3940
  3269  15F9                     __end_of_ram_bulk_erase:	
  3270                           
  3271                           	psect	text10
  3272  05B7                     __ptext10:	
  3273 ;; *************** function _SendMemoryData *****************
  3274 ;; Defined at:
  3275 ;;		line 1213 in file "functions.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  address         4   43[BANK1 ] unsigned long 
  3280 ;;  finalAddress    4   36[BANK1 ] unsigned long 
  3281 ;;  addr1           1   42[BANK1 ] unsigned char 
  3282 ;;  addr2           1   41[BANK1 ] unsigned char 
  3283 ;;  addr3           1   40[BANK1 ] unsigned char 
  3284 ;;  value           1   35[BANK1 ] unsigned char 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       0       0       0
  3295 ;;      Locals:         0       0      12       0       0
  3296 ;;      Temps:          0       0       8       0       0
  3297 ;;      Totals:         0       0      20       0       0
  3298 ;;Total ram usage:       20 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:   12
  3301 ;; This function calls:
  3302 ;;		_ReadMemoryAdress
  3303 ;;		_TransmittPacket
  3304 ;;		_read_write_flash_ram
  3305 ;; This function is called by:
  3306 ;;		_ReceivedPacketHandler
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _SendMemoryData
  3312  05B7                     _SendMemoryData:	
  3313                           
  3314                           ;functions.c: 1215: unsigned long address, finalAddress = 0;
  3315                           
  3316                           ;incstack = 0
  3317 ;; hardware stack exceeded
  3318                           ; Regs used in _SendMemoryData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3319  05B7  3000               	movlw	0
  3320  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3321  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3322  05BA  00C7               	movwf	(SendMemoryData@finalAddress+3)^(0+128)
  3323  05BB  3000               	movlw	0
  3324  05BC  00C6               	movwf	(SendMemoryData@finalAddress+2)^(0+128)
  3325  05BD  3000               	movlw	0
  3326  05BE  00C5               	movwf	(SendMemoryData@finalAddress+1)^(0+128)
  3327  05BF  3000               	movlw	0
  3328  05C0  00C4               	movwf	SendMemoryData@finalAddress^(0+128)
  3329                           
  3330                           ;functions.c: 1216: unsigned char addr3, addr2, addr1, value;
  3331                           ;functions.c: 1218: ReadMemoryAdress(&addr3, &addr2, &addr1);
  3332  05C1  30C9               	movlw	(low (SendMemoryData@addr2| 0))& (0+255)
  3333  05C2  00BB               	movwf	??_SendMemoryData^(0+128)
  3334  05C3  083B               	movf	??_SendMemoryData^(0+128),w
  3335  05C4  00A2               	movwf	ReadMemoryAdress@var2^(0+128)
  3336  05C5  30CA               	movlw	(low (SendMemoryData@addr1| 0))& (0+255)
  3337  05C6  00BC               	movwf	(??_SendMemoryData+1)^(0+128)
  3338  05C7  083C               	movf	(??_SendMemoryData+1)^(0+128),w
  3339  05C8  00A3               	movwf	ReadMemoryAdress@var1^(0+128)
  3340  05C9  30C8               	movlw	(low (SendMemoryData@addr3| 0))& (0+255)
  3341  05CA  160A  118A  26DA  120A  118A  	fcall	_ReadMemoryAdress
  3342                           
  3343                           ;functions.c: 1220: finalAddress = (finalAddress << 8) | addr3;
  3344  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3345  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  3346  05D1  0848               	movf	SendMemoryData@addr3^(0+128),w
  3347  05D2  00BB               	movwf	??_SendMemoryData^(0+128)
  3348  05D3  01BC               	clrf	(??_SendMemoryData^(0+128)+1)
  3349  05D4  01BD               	clrf	(??_SendMemoryData^(0+128)+2)
  3350  05D5  01BE               	clrf	(??_SendMemoryData^(0+128)+3)
  3351  05D6  0844               	movf	SendMemoryData@finalAddress^(0+128),w
  3352  05D7  00BF               	movwf	(??_SendMemoryData+4)^(0+128)
  3353  05D8  0845               	movf	(SendMemoryData@finalAddress+1)^(0+128),w
  3354  05D9  00C0               	movwf	((??_SendMemoryData+4)^(0+128)+1)
  3355  05DA  0846               	movf	(SendMemoryData@finalAddress+2)^(0+128),w
  3356  05DB  00C1               	movwf	((??_SendMemoryData+4)^(0+128)+2)
  3357  05DC  0847               	movf	(SendMemoryData@finalAddress+3)^(0+128),w
  3358  05DD  00C2               	movwf	((??_SendMemoryData+4)^(0+128)+3)
  3359  05DE  3008               	movlw	8
  3360  05DF                     u3055:	
  3361  05DF  1003               	clrc
  3362  05E0  0DBF               	rlf	(??_SendMemoryData+4)^(0+128),f
  3363  05E1  0DC0               	rlf	((??_SendMemoryData+4)^(0+128)+1),f
  3364  05E2  0DC1               	rlf	((??_SendMemoryData+4)^(0+128)+2),f
  3365  05E3  0DC2               	rlf	((??_SendMemoryData+4)^(0+128)+3),f
  3366  05E4  3EFF               	addlw	-1
  3367  05E5  1D03               	skipz
  3368  05E6  2DDF               	goto	u3055
  3369  05E7  083F               	movf	(??_SendMemoryData+4)^(0+128),w
  3370  05E8  04BB               	iorwf	??_SendMemoryData^(0+128),f
  3371  05E9  0840               	movf	(??_SendMemoryData+5)^(0+128),w
  3372  05EA  04BC               	iorwf	(??_SendMemoryData^(0+128)+1),f
  3373  05EB  0841               	movf	(??_SendMemoryData+6)^(0+128),w
  3374  05EC  04BD               	iorwf	(??_SendMemoryData^(0+128)+2),f
  3375  05ED  0842               	movf	(??_SendMemoryData+7)^(0+128),w
  3376  05EE  04BE               	iorwf	(??_SendMemoryData^(0+128)+3),f
  3377  05EF  083E               	movf	(??_SendMemoryData+3)^(0+128),w
  3378  05F0  00C7               	movwf	(SendMemoryData@finalAddress+3)^(0+128)
  3379  05F1  083D               	movf	(??_SendMemoryData+2)^(0+128),w
  3380  05F2  00C6               	movwf	(SendMemoryData@finalAddress+2)^(0+128)
  3381  05F3  083C               	movf	(??_SendMemoryData+1)^(0+128),w
  3382  05F4  00C5               	movwf	(SendMemoryData@finalAddress+1)^(0+128)
  3383  05F5  083B               	movf	??_SendMemoryData^(0+128),w
  3384  05F6  00C4               	movwf	SendMemoryData@finalAddress^(0+128)
  3385                           
  3386                           ;functions.c: 1221: finalAddress = (finalAddress << 8) | addr2;
  3387  05F7  0849               	movf	SendMemoryData@addr2^(0+128),w
  3388  05F8  00BB               	movwf	??_SendMemoryData^(0+128)
  3389  05F9  01BC               	clrf	(??_SendMemoryData^(0+128)+1)
  3390  05FA  01BD               	clrf	(??_SendMemoryData^(0+128)+2)
  3391  05FB  01BE               	clrf	(??_SendMemoryData^(0+128)+3)
  3392  05FC  0844               	movf	SendMemoryData@finalAddress^(0+128),w
  3393  05FD  00BF               	movwf	(??_SendMemoryData+4)^(0+128)
  3394  05FE  0845               	movf	(SendMemoryData@finalAddress+1)^(0+128),w
  3395  05FF  00C0               	movwf	((??_SendMemoryData+4)^(0+128)+1)
  3396  0600  0846               	movf	(SendMemoryData@finalAddress+2)^(0+128),w
  3397  0601  00C1               	movwf	((??_SendMemoryData+4)^(0+128)+2)
  3398  0602  0847               	movf	(SendMemoryData@finalAddress+3)^(0+128),w
  3399  0603  00C2               	movwf	((??_SendMemoryData+4)^(0+128)+3)
  3400  0604  3008               	movlw	8
  3401  0605                     u3065:	
  3402  0605  1003               	clrc
  3403  0606  0DBF               	rlf	(??_SendMemoryData+4)^(0+128),f
  3404  0607  0DC0               	rlf	((??_SendMemoryData+4)^(0+128)+1),f
  3405  0608  0DC1               	rlf	((??_SendMemoryData+4)^(0+128)+2),f
  3406  0609  0DC2               	rlf	((??_SendMemoryData+4)^(0+128)+3),f
  3407  060A  3EFF               	addlw	-1
  3408  060B  1D03               	skipz
  3409  060C  2E05               	goto	u3065
  3410  060D  083F               	movf	(??_SendMemoryData+4)^(0+128),w
  3411  060E  04BB               	iorwf	??_SendMemoryData^(0+128),f
  3412  060F  0840               	movf	(??_SendMemoryData+5)^(0+128),w
  3413  0610  04BC               	iorwf	(??_SendMemoryData^(0+128)+1),f
  3414  0611  0841               	movf	(??_SendMemoryData+6)^(0+128),w
  3415  0612  04BD               	iorwf	(??_SendMemoryData^(0+128)+2),f
  3416  0613  0842               	movf	(??_SendMemoryData+7)^(0+128),w
  3417  0614  04BE               	iorwf	(??_SendMemoryData^(0+128)+3),f
  3418  0615  083E               	movf	(??_SendMemoryData+3)^(0+128),w
  3419  0616  00C7               	movwf	(SendMemoryData@finalAddress+3)^(0+128)
  3420  0617  083D               	movf	(??_SendMemoryData+2)^(0+128),w
  3421  0618  00C6               	movwf	(SendMemoryData@finalAddress+2)^(0+128)
  3422  0619  083C               	movf	(??_SendMemoryData+1)^(0+128),w
  3423  061A  00C5               	movwf	(SendMemoryData@finalAddress+1)^(0+128)
  3424  061B  083B               	movf	??_SendMemoryData^(0+128),w
  3425  061C  00C4               	movwf	SendMemoryData@finalAddress^(0+128)
  3426                           
  3427                           ;functions.c: 1222: finalAddress = (finalAddress << 8) | addr1;
  3428  061D  084A               	movf	SendMemoryData@addr1^(0+128),w
  3429  061E  00BB               	movwf	??_SendMemoryData^(0+128)
  3430  061F  01BC               	clrf	(??_SendMemoryData^(0+128)+1)
  3431  0620  01BD               	clrf	(??_SendMemoryData^(0+128)+2)
  3432  0621  01BE               	clrf	(??_SendMemoryData^(0+128)+3)
  3433  0622  0844               	movf	SendMemoryData@finalAddress^(0+128),w
  3434  0623  00BF               	movwf	(??_SendMemoryData+4)^(0+128)
  3435  0624  0845               	movf	(SendMemoryData@finalAddress+1)^(0+128),w
  3436  0625  00C0               	movwf	((??_SendMemoryData+4)^(0+128)+1)
  3437  0626  0846               	movf	(SendMemoryData@finalAddress+2)^(0+128),w
  3438  0627  00C1               	movwf	((??_SendMemoryData+4)^(0+128)+2)
  3439  0628  0847               	movf	(SendMemoryData@finalAddress+3)^(0+128),w
  3440  0629  00C2               	movwf	((??_SendMemoryData+4)^(0+128)+3)
  3441  062A  3008               	movlw	8
  3442  062B                     u3075:	
  3443  062B  1003               	clrc
  3444  062C  0DBF               	rlf	(??_SendMemoryData+4)^(0+128),f
  3445  062D  0DC0               	rlf	((??_SendMemoryData+4)^(0+128)+1),f
  3446  062E  0DC1               	rlf	((??_SendMemoryData+4)^(0+128)+2),f
  3447  062F  0DC2               	rlf	((??_SendMemoryData+4)^(0+128)+3),f
  3448  0630  3EFF               	addlw	-1
  3449  0631  1D03               	skipz
  3450  0632  2E2B               	goto	u3075
  3451  0633  083F               	movf	(??_SendMemoryData+4)^(0+128),w
  3452  0634  04BB               	iorwf	??_SendMemoryData^(0+128),f
  3453  0635  0840               	movf	(??_SendMemoryData+5)^(0+128),w
  3454  0636  04BC               	iorwf	(??_SendMemoryData^(0+128)+1),f
  3455  0637  0841               	movf	(??_SendMemoryData+6)^(0+128),w
  3456  0638  04BD               	iorwf	(??_SendMemoryData^(0+128)+2),f
  3457  0639  0842               	movf	(??_SendMemoryData+7)^(0+128),w
  3458  063A  04BE               	iorwf	(??_SendMemoryData^(0+128)+3),f
  3459  063B  083E               	movf	(??_SendMemoryData+3)^(0+128),w
  3460  063C  00C7               	movwf	(SendMemoryData@finalAddress+3)^(0+128)
  3461  063D  083D               	movf	(??_SendMemoryData+2)^(0+128),w
  3462  063E  00C6               	movwf	(SendMemoryData@finalAddress+2)^(0+128)
  3463  063F  083C               	movf	(??_SendMemoryData+1)^(0+128),w
  3464  0640  00C5               	movwf	(SendMemoryData@finalAddress+1)^(0+128)
  3465  0641  083B               	movf	??_SendMemoryData^(0+128),w
  3466  0642  00C4               	movwf	SendMemoryData@finalAddress^(0+128)
  3467                           
  3468                           ;functions.c: 1224: for(address = 0; address < 200; address++)
  3469  0643  3000               	movlw	0
  3470  0644  00CE               	movwf	(SendMemoryData@address+3)^(0+128)
  3471  0645  3000               	movlw	0
  3472  0646  00CD               	movwf	(SendMemoryData@address+2)^(0+128)
  3473  0647  3000               	movlw	0
  3474  0648  00CC               	movwf	(SendMemoryData@address+1)^(0+128)
  3475  0649  3000               	movlw	0
  3476  064A  00CB               	movwf	SendMemoryData@address^(0+128)
  3477  064B  084E               	movf	(SendMemoryData@address+3)^(0+128),w
  3478  064C  1D03               	btfss	3,2
  3479  064D  2ECD               	goto	l4008
  3480  064E  084D               	movf	(SendMemoryData@address+2)^(0+128),w
  3481  064F  1D03               	btfss	3,2
  3482  0650  2ECD               	goto	l4008
  3483  0651  084C               	movf	(SendMemoryData@address+1)^(0+128),w
  3484  0652  1D03               	btfss	3,2
  3485  0653  2ECD               	goto	l4008
  3486  0654  30C8               	movlw	200
  3487  0655  024B               	subwf	SendMemoryData@address^(0+128),w
  3488  0656  1D03               	skipz
  3489  0657  2E58               	goto	u3083
  3490  0658                     u3083:	
  3491  0658  1803               	btfsc	3,0
  3492  0659  2ECD               	goto	l4008
  3493  065A                     l3994:	
  3494                           
  3495                           ;functions.c: 1225: {
  3496                           ;functions.c: 1227: addr1 = address & 0x00FF;
  3497  065A  084B               	movf	SendMemoryData@address^(0+128),w
  3498  065B  00BB               	movwf	??_SendMemoryData^(0+128)
  3499  065C  083B               	movf	??_SendMemoryData^(0+128),w
  3500  065D  00CA               	movwf	SendMemoryData@addr1^(0+128)
  3501                           
  3502                           ;functions.c: 1228: addr2 = address >> 8 & 0x00FF;
  3503  065E  084B               	movf	SendMemoryData@address^(0+128),w
  3504  065F  00BB               	movwf	??_SendMemoryData^(0+128)
  3505  0660  084C               	movf	(SendMemoryData@address+1)^(0+128),w
  3506  0661  00BC               	movwf	(??_SendMemoryData^(0+128)+1)
  3507  0662  084D               	movf	(SendMemoryData@address+2)^(0+128),w
  3508  0663  00BD               	movwf	(??_SendMemoryData^(0+128)+2)
  3509  0664  084E               	movf	(SendMemoryData@address+3)^(0+128),w
  3510  0665  00BE               	movwf	(??_SendMemoryData^(0+128)+3)
  3511  0666  3008               	movlw	8
  3512  0667                     u3095:	
  3513  0667  1003               	clrc
  3514  0668  0CBE               	rrf	(??_SendMemoryData^(0+128)+3),f
  3515  0669  0CBD               	rrf	(??_SendMemoryData^(0+128)+2),f
  3516  066A  0CBC               	rrf	(??_SendMemoryData^(0+128)+1),f
  3517  066B  0CBB               	rrf	??_SendMemoryData^(0+128),f
  3518  066C  3EFF               	addlw	-1
  3519  066D  1D03               	skipz
  3520  066E  2E67               	goto	u3095
  3521  066F  083B               	movf	??_SendMemoryData^(0+128),w
  3522  0670  00BF               	movwf	(??_SendMemoryData+4)^(0+128)
  3523  0671  083F               	movf	(??_SendMemoryData+4)^(0+128),w
  3524  0672  00C9               	movwf	SendMemoryData@addr2^(0+128)
  3525                           
  3526                           ;functions.c: 1229: addr3 = address >> 16 & 0x00FF;
  3527  0673  084B               	movf	SendMemoryData@address^(0+128),w
  3528  0674  00BB               	movwf	??_SendMemoryData^(0+128)
  3529  0675  084C               	movf	(SendMemoryData@address+1)^(0+128),w
  3530  0676  00BC               	movwf	(??_SendMemoryData^(0+128)+1)
  3531  0677  084D               	movf	(SendMemoryData@address+2)^(0+128),w
  3532  0678  00BD               	movwf	(??_SendMemoryData^(0+128)+2)
  3533  0679  084E               	movf	(SendMemoryData@address+3)^(0+128),w
  3534  067A  00BE               	movwf	(??_SendMemoryData^(0+128)+3)
  3535  067B  3010               	movlw	16
  3536  067C                     u3105:	
  3537  067C  1003               	clrc
  3538  067D  0CBE               	rrf	(??_SendMemoryData^(0+128)+3),f
  3539  067E  0CBD               	rrf	(??_SendMemoryData^(0+128)+2),f
  3540  067F  0CBC               	rrf	(??_SendMemoryData^(0+128)+1),f
  3541  0680  0CBB               	rrf	??_SendMemoryData^(0+128),f
  3542  0681  3EFF               	addlw	-1
  3543  0682  1D03               	skipz
  3544  0683  2E7C               	goto	u3105
  3545  0684  083B               	movf	??_SendMemoryData^(0+128),w
  3546  0685  00BF               	movwf	(??_SendMemoryData+4)^(0+128)
  3547  0686  083F               	movf	(??_SendMemoryData+4)^(0+128),w
  3548  0687  00C8               	movwf	SendMemoryData@addr3^(0+128)
  3549                           
  3550                           ;functions.c: 1232: read_write_flash_ram(
  3551                           ;functions.c: 1233: 1,
  3552                           ;functions.c: 1234: 1,
  3553                           ;functions.c: 1235: addr3,
  3554                           ;functions.c: 1236: addr2,
  3555                           ;functions.c: 1237: addr1,
  3556                           ;functions.c: 1238: &value);
  3557  0688  3001               	movlw	1
  3558  0689  00A5               	movwf	read_write_flash_ram@bytes_to_readwrite^(0+128)
  3559  068A  3000               	movlw	0
  3560  068B  00A6               	movwf	(read_write_flash_ram@bytes_to_readwrite^(0+128)+1)
  3561  068C  0848               	movf	SendMemoryData@addr3^(0+128),w
  3562  068D  00BB               	movwf	??_SendMemoryData^(0+128)
  3563  068E  083B               	movf	??_SendMemoryData^(0+128),w
  3564  068F  00A7               	movwf	read_write_flash_ram@flash_sector^(0+128)
  3565  0690  0849               	movf	SendMemoryData@addr2^(0+128),w
  3566  0691  00BC               	movwf	(??_SendMemoryData+1)^(0+128)
  3567  0692  083C               	movf	(??_SendMemoryData+1)^(0+128),w
  3568  0693  00A8               	movwf	read_write_flash_ram@flash_page^(0+128)
  3569  0694  084A               	movf	SendMemoryData@addr1^(0+128),w
  3570  0695  00BD               	movwf	(??_SendMemoryData+2)^(0+128)
  3571  0696  083D               	movf	(??_SendMemoryData+2)^(0+128),w
  3572  0697  00A9               	movwf	read_write_flash_ram@offset^(0+128)
  3573  0698  30C3               	movlw	(low (SendMemoryData@value| 0))& (0+255)
  3574  0699  00BE               	movwf	(??_SendMemoryData+3)^(0+128)
  3575  069A  083E               	movf	(??_SendMemoryData+3)^(0+128),w
  3576  069B  00AA               	movwf	read_write_flash_ram@mem_ptr^(0+128)
  3577  069C  3001               	movlw	1
  3578  069D  120A  158A  2390  120A  118A  	fcall	_read_write_flash_ram
  3579                           
  3580                           ;functions.c: 1240: TransmittPacket(10, value);
  3581  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3582  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3583  06A4  0843               	movf	SendMemoryData@value^(0+128),w
  3584  06A5  00BB               	movwf	??_SendMemoryData^(0+128)
  3585  06A6  083B               	movf	??_SendMemoryData^(0+128),w
  3586  06A7  00B5               	movwf	TransmittPacket@value^(0+128)
  3587  06A8  300A               	movlw	10
  3588  06A9  120A  158A  24AE  120A  118A  	fcall	_TransmittPacket
  3589  06AE  3001               	movlw	1
  3590  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  3591  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  3592  06B1  07CB               	addwf	SendMemoryData@address^(0+128),f
  3593  06B2  3000               	movlw	0
  3594  06B3  1803               	skipnc
  3595  06B4  3001               	movlw	1
  3596  06B5  07CC               	addwf	(SendMemoryData@address+1)^(0+128),f
  3597  06B6  3000               	movlw	0
  3598  06B7  1803               	skipnc
  3599  06B8  3001               	movlw	1
  3600  06B9  07CD               	addwf	(SendMemoryData@address+2)^(0+128),f
  3601  06BA  3000               	movlw	0
  3602  06BB  1803               	skipnc
  3603  06BC  3001               	movlw	1
  3604  06BD  07CE               	addwf	(SendMemoryData@address+3)^(0+128),f
  3605  06BE  084E               	movf	(SendMemoryData@address+3)^(0+128),w
  3606  06BF  1D03               	btfss	3,2
  3607  06C0  2ECD               	goto	l4008
  3608  06C1  084D               	movf	(SendMemoryData@address+2)^(0+128),w
  3609  06C2  1D03               	btfss	3,2
  3610  06C3  2ECD               	goto	l4008
  3611  06C4  084C               	movf	(SendMemoryData@address+1)^(0+128),w
  3612  06C5  1D03               	btfss	3,2
  3613  06C6  2ECD               	goto	l4008
  3614  06C7  30C8               	movlw	200
  3615  06C8  024B               	subwf	SendMemoryData@address^(0+128),w
  3616  06C9  1D03               	skipz
  3617  06CA  2ECB               	goto	u3113
  3618  06CB                     u3113:	
  3619  06CB  1C03               	btfss	3,0
  3620  06CC  2E5A               	goto	l3994
  3621  06CD                     l4008:	
  3622                           
  3623                           ;functions.c: 1241: }
  3624                           ;functions.c: 1242: TransmittPacket(8, 1);
  3625  06CD  01B5               	clrf	TransmittPacket@value^(0+128)
  3626  06CE  0AB5               	incf	TransmittPacket@value^(0+128),f
  3627  06CF  3008               	movlw	8
  3628  06D0  120A  158A  24AE   	fcall	_TransmittPacket
  3629  06D3  0008               	return
  3630  06D4                     __end_of_SendMemoryData:	
  3631                           
  3632                           	psect	text11
  3633  0B90                     __ptext11:	
  3634 ;; *************** function _read_write_flash_ram *****************
  3635 ;; Defined at:
  3636 ;;		line 107 in file "m25p16.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  one_read_zer    1    wreg     unsigned char 
  3639 ;;  bytes_to_rea    2    5[BANK1 ] unsigned short 
  3640 ;;  flash_sector    1    7[BANK1 ] unsigned char 
  3641 ;;  flash_page      1    8[BANK1 ] unsigned char 
  3642 ;;  offset          1    9[BANK1 ] unsigned char 
  3643 ;;  mem_ptr         1   10[BANK1 ] PTR unsigned char 
  3644 ;;		 -> SendMemoryData@value(1), saveDataToFlash@value(1), 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  one_read_zer    1   13[BANK1 ] unsigned char 
  3647 ;;  i               2   14[BANK1 ] unsigned short 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3657 ;;      Params:         0       0       6       0       0
  3658 ;;      Locals:         0       0       3       0       0
  3659 ;;      Temps:          0       0       2       0       0
  3660 ;;      Totals:         0       0      11       0       0
  3661 ;;Total ram usage:       11 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    9
  3664 ;; This function calls:
  3665 ;;		_ReadSPI
  3666 ;;		_WriteSPI
  3667 ;;		_read_ram_status
  3668 ;; This function is called by:
  3669 ;;		_SendMemoryData
  3670 ;;		_write_flash_page
  3671 ;;		_read_flash_page
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _read_write_flash_ram
  3677  0B90                     _read_write_flash_ram:	
  3678                           
  3679                           ;incstack = 0
  3680 ;; hardware stack exceeded
  3681                           ; Regs used in _read_write_flash_ram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3682                           ;read_write_flash_ram@one_read_zero_write stored from wreg
  3683  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  3684  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  3685  0B92  00AD               	movwf	read_write_flash_ram@one_read_zero_write^(0+128)
  3686                           
  3687                           ;m25p16.c: 122: unsigned short int i;
  3688                           ;m25p16.c: 126: RD3 = 0;
  3689  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0B95  1188               	bcf	8,3	;volatile
  3692                           
  3693                           ;m25p16.c: 127: if(one_read_zero_write)
  3694  0B96  1683               	bsf	3,5	;RP0=1, select bank1
  3695  0B97  1303               	bcf	3,6	;RP1=0, select bank1
  3696  0B98  082D               	movf	read_write_flash_ram@one_read_zero_write^(0+128),w
  3697  0B99  1903               	btfsc	3,2
  3698  0B9A  2B9D               	goto	l3850
  3699                           
  3700                           ;m25p16.c: 128: {
  3701                           ;m25p16.c: 129: WriteSPI(0x03);
  3702  0B9B  3003               	movlw	3
  3703  0B9C  2BAB               	goto	L2
  3704  0B9D                     l3850:	
  3705                           ;m25p16.c: 130: }
  3706                           
  3707                           
  3708                           ;m25p16.c: 131: else
  3709                           ;m25p16.c: 132: {
  3710                           ;m25p16.c: 133: WriteSPI(0x06);
  3711  0B9D  3006               	movlw	6
  3712  0B9E  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3713                           
  3714                           ;m25p16.c: 134: RD3 = 1;
  3715  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  3716  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  3717  0BA5  1588               	bsf	8,3	;volatile
  3718                           
  3719                           ;m25p16.c: 135: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3720  0BA6  0000               	nop
  3721                           
  3722                           ;m25p16.c: 136: RD3 = 0;
  3723  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0BA9  1188               	bcf	8,3	;volatile
  3726                           
  3727                           ;m25p16.c: 137: WriteSPI(0x02);
  3728  0BAA  3002               	movlw	2
  3729  0BAB                     L2:	
  3730  0BAB  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3731                           
  3732                           ;m25p16.c: 139: }
  3733                           ;m25p16.c: 141: WriteSPI(flash_sector);
  3734  0BB0  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0BB1  1303               	bcf	3,6	;RP1=0, select bank1
  3736  0BB2  0827               	movf	read_write_flash_ram@flash_sector^(0+128),w
  3737  0BB3  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3738                           
  3739                           ;m25p16.c: 142: WriteSPI(flash_page);
  3740  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  3741  0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  3742  0BBA  0828               	movf	read_write_flash_ram@flash_page^(0+128),w
  3743  0BBB  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3744                           
  3745                           ;m25p16.c: 143: WriteSPI(offset);
  3746  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  3747  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  3748  0BC2  0829               	movf	read_write_flash_ram@offset^(0+128),w
  3749  0BC3  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3750                           
  3751                           ;m25p16.c: 145: for (i=0;i<bytes_to_readwrite;i++)
  3752  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  3753  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  3754  0BCA  01AE               	clrf	read_write_flash_ram@i^(0+128)
  3755  0BCB  01AF               	clrf	(read_write_flash_ram@i+1)^(0+128)
  3756  0BCC                     l3868:	
  3757  0BCC  0826               	movf	(read_write_flash_ram@bytes_to_readwrite+1)^(0+128),w
  3758  0BCD  022F               	subwf	(read_write_flash_ram@i+1)^(0+128),w
  3759  0BCE  1D03               	skipz
  3760  0BCF  2BD2               	goto	u2905
  3761  0BD0  0825               	movf	read_write_flash_ram@bytes_to_readwrite^(0+128),w
  3762  0BD1  022E               	subwf	read_write_flash_ram@i^(0+128),w
  3763  0BD2                     u2905:	
  3764  0BD2  1803               	btfsc	3,0
  3765  0BD3  2BFD               	goto	l589
  3766                           
  3767                           ;m25p16.c: 146: {
  3768                           ;m25p16.c: 147: if (one_read_zero_write)
  3769  0BD4  082D               	movf	read_write_flash_ram@one_read_zero_write^(0+128),w
  3770  0BD5  1903               	btfsc	3,2
  3771  0BD6  2BE8               	goto	l3864
  3772                           
  3773                           ;m25p16.c: 148: {
  3774                           ;m25p16.c: 149: mem_ptr[i] = ReadSPI();
  3775  0BD7  160A  118A  2458  120A  158A  	fcall	_ReadSPI
  3776  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  3777  0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  3778  0BDE  00AB               	movwf	??_read_write_flash_ram^(0+128)
  3779  0BDF  082E               	movf	read_write_flash_ram@i^(0+128),w
  3780  0BE0  072A               	addwf	read_write_flash_ram@mem_ptr^(0+128),w
  3781  0BE1  00AC               	movwf	(??_read_write_flash_ram+1)^(0+128)
  3782  0BE2  082C               	movf	(??_read_write_flash_ram+1)^(0+128),w
  3783  0BE3  0084               	movwf	4
  3784  0BE4  082B               	movf	??_read_write_flash_ram^(0+128),w
  3785  0BE5  1383               	bcf	3,7	;select IRP bank0
  3786  0BE6  0080               	movwf	0
  3787                           
  3788                           ;m25p16.c: 150: }
  3789  0BE7  2BF4               	goto	l3866
  3790  0BE8                     l3864:	
  3791                           
  3792                           ;m25p16.c: 151: else
  3793                           ;m25p16.c: 152: {
  3794                           ;m25p16.c: 153: WriteSPI(mem_ptr[i]);
  3795  0BE8  082E               	movf	read_write_flash_ram@i^(0+128),w
  3796  0BE9  072A               	addwf	read_write_flash_ram@mem_ptr^(0+128),w
  3797  0BEA  00AB               	movwf	??_read_write_flash_ram^(0+128)
  3798  0BEB  082B               	movf	??_read_write_flash_ram^(0+128),w
  3799  0BEC  0084               	movwf	4
  3800  0BED  1383               	bcf	3,7	;select IRP bank0
  3801  0BEE  0800               	movf	0,w
  3802  0BEF  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  3803  0BF4                     l3866:	
  3804  0BF4  3001               	movlw	1
  3805  0BF5  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0BF6  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0BF7  07AE               	addwf	read_write_flash_ram@i^(0+128),f
  3808  0BF8  1803               	skipnc
  3809  0BF9  0AAF               	incf	(read_write_flash_ram@i+1)^(0+128),f
  3810  0BFA  3000               	movlw	0
  3811  0BFB  07AF               	addwf	(read_write_flash_ram@i+1)^(0+128),f
  3812  0BFC  2BCC               	goto	l3868
  3813  0BFD                     l589:	
  3814                           
  3815                           ;m25p16.c: 154: }
  3816                           ;m25p16.c: 155: }
  3817                           ;m25p16.c: 157: RD3 = 1;
  3818  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0BFF  1588               	bsf	8,3	;volatile
  3821                           
  3822                           ;m25p16.c: 159: _delay((unsigned long)((1)*(4000000/4000000.0)));
  3823  0C00  0000               	nop
  3824  0C01                     l3872:	
  3825                           ;m25p16.c: 160: while (read_ram_status() & 0b00000011) {
  3826                           
  3827  0C01  160A  118A  252F  120A  158A  	fcall	_read_ram_status
  3828  0C06  3903               	andlw	3
  3829  0C07  1903               	btfsc	3,2
  3830  0C08  0008               	return
  3831                           
  3832                           ;m25p16.c: 161: _delay((unsigned long)((1)*(4000000/4000.0)));
  3833  0C09  30F9               	movlw	249
  3834  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  3835  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  3836  0C0C  00AB               	movwf	??_read_write_flash_ram^(0+128)
  3837  0C0D                     u3787:	
  3838  0C0D  0000               	nop
  3839  0C0E  0BAB               	decfsz	??_read_write_flash_ram^(0+128),f
  3840  0C0F  2C0D               	goto	u3787
  3841  0C10  2C11               	nop2	;nop
  3842  0C11  0000               	nop
  3843  0C12  2C01               	goto	l3872
  3844  0C13                     __end_of_read_write_flash_ram:	
  3845                           
  3846                           	psect	text12
  3847  152F                     __ptext12:	
  3848 ;; *************** function _read_ram_status *****************
  3849 ;; Defined at:
  3850 ;;		line 57 in file "m25p16.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;  status          1    4[BANK1 ] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      unsigned char 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, pclath, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3864 ;;      Params:         0       0       0       0       0
  3865 ;;      Locals:         0       0       1       0       0
  3866 ;;      Temps:          0       0       1       0       0
  3867 ;;      Totals:         0       0       2       0       0
  3868 ;;Total ram usage:        2 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    8
  3871 ;; This function calls:
  3872 ;;		_ReadSPI
  3873 ;;		_WriteSPI
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;;		_ReceivedPacketHandler
  3877 ;;		_ram_bulk_erase
  3878 ;;		_read_write_flash_ram
  3879 ;;		_write_ram_status
  3880 ;;		_ram_sector_erase
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _read_ram_status
  3886  152F                     _read_ram_status:	
  3887                           
  3888                           ;m25p16.c: 59: unsigned char status;
  3889                           ;m25p16.c: 60: RD3 = 0;
  3890                           
  3891                           ;incstack = 0
  3892 ;; hardware stack exceeded
  3893                           ; Regs used in _read_ram_status: [wreg+status,2+status,0+pclath+cstack]
  3894  152F  1283               	bcf	3,5	;RP0=0, select bank0
  3895  1530  1303               	bcf	3,6	;RP1=0, select bank0
  3896  1531  1188               	bcf	8,3	;volatile
  3897                           
  3898                           ;m25p16.c: 61: WriteSPI(0x05);
  3899  1532  3005               	movlw	5
  3900  1533  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  3901                           
  3902                           ;m25p16.c: 62: status = ReadSPI();
  3903  1538  160A  118A  2458   	fcall	_ReadSPI
  3904  153B  1683               	bsf	3,5	;RP0=1, select bank1
  3905  153C  1303               	bcf	3,6	;RP1=0, select bank1
  3906  153D  00A3               	movwf	??_read_ram_status^(0+128)
  3907  153E  0823               	movf	??_read_ram_status^(0+128),w
  3908  153F  00A4               	movwf	read_ram_status@status^(0+128)
  3909                           
  3910                           ;m25p16.c: 63: RD3 = 1;
  3911  1540  1283               	bcf	3,5	;RP0=0, select bank0
  3912  1541  1303               	bcf	3,6	;RP1=0, select bank0
  3913  1542  1588               	bsf	8,3	;volatile
  3914                           
  3915                           ;m25p16.c: 64: return status;
  3916  1543  1683               	bsf	3,5	;RP0=1, select bank1
  3917  1544  1303               	bcf	3,6	;RP1=0, select bank1
  3918  1545  0824               	movf	read_ram_status@status^(0+128),w
  3919  1546  0008               	return
  3920  1547                     __end_of_read_ram_status:	
  3921                           
  3922                           	psect	text13
  3923  16DA                     __ptext13:	
  3924 ;; *************** function _ReadMemoryAdress *****************
  3925 ;; Defined at:
  3926 ;;		line 989 in file "functions.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  var3            1    wreg     PTR unsigned char 
  3929 ;;		 -> SendMemoryData@addr3(1), saveDataToFlash@addr3(1), 
  3930 ;;  var2            1    2[BANK1 ] PTR unsigned char 
  3931 ;;		 -> SendMemoryData@addr2(1), saveDataToFlash@addr2(1), 
  3932 ;;  var1            1    3[BANK1 ] PTR unsigned char 
  3933 ;;		 -> SendMemoryData@addr1(1), saveDataToFlash@addr1(1), 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  var3            1    5[BANK1 ] PTR unsigned char 
  3936 ;;		 -> SendMemoryData@addr3(1), saveDataToFlash@addr3(1), 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         0       0       2       0       0
  3947 ;;      Locals:         0       0       1       0       0
  3948 ;;      Temps:          0       0       1       0       0
  3949 ;;      Totals:         0       0       4       0       0
  3950 ;;Total ram usage:        4 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    7
  3953 ;; This function calls:
  3954 ;;		_eeprom_read
  3955 ;; This function is called by:
  3956 ;;		_SendMemoryData
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _ReadMemoryAdress
  3962  16DA                     _ReadMemoryAdress:	
  3963                           
  3964                           ;incstack = 0
  3965 ;; hardware stack exceeded
  3966                           ; Regs used in _ReadMemoryAdress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3967                           ;ReadMemoryAdress@var3 stored from wreg
  3968  16DA  1683               	bsf	3,5	;RP0=1, select bank1
  3969  16DB  1303               	bcf	3,6	;RP1=0, select bank1
  3970  16DC  00A5               	movwf	ReadMemoryAdress@var3^(0+128)
  3971                           
  3972                           ;functions.c: 991: *var3 = eeprom_read(1);
  3973  16DD  3001               	movlw	1
  3974  16DE  160A  118A  2641  160A  118A  	fcall	_eeprom_read
  3975  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  3976  16E4  1303               	bcf	3,6	;RP1=0, select bank1
  3977  16E5  00A4               	movwf	??_ReadMemoryAdress^(0+128)
  3978  16E6  0825               	movf	ReadMemoryAdress@var3^(0+128),w
  3979  16E7  0084               	movwf	4
  3980  16E8  0824               	movf	??_ReadMemoryAdress^(0+128),w
  3981  16E9  1383               	bcf	3,7	;select IRP bank0
  3982  16EA  0080               	movwf	0
  3983                           
  3984                           ;functions.c: 992: *var2 = eeprom_read(2);
  3985  16EB  3002               	movlw	2
  3986  16EC  160A  118A  2641  160A  118A  	fcall	_eeprom_read
  3987  16F1  1683               	bsf	3,5	;RP0=1, select bank1
  3988  16F2  1303               	bcf	3,6	;RP1=0, select bank1
  3989  16F3  00A4               	movwf	??_ReadMemoryAdress^(0+128)
  3990  16F4  0822               	movf	ReadMemoryAdress@var2^(0+128),w
  3991  16F5  0084               	movwf	4
  3992  16F6  0824               	movf	??_ReadMemoryAdress^(0+128),w
  3993  16F7  1383               	bcf	3,7	;select IRP bank0
  3994  16F8  0080               	movwf	0
  3995                           
  3996                           ;functions.c: 993: *var1 = eeprom_read(3);
  3997  16F9  3003               	movlw	3
  3998  16FA  160A  118A  2641   	fcall	_eeprom_read
  3999  16FD  1683               	bsf	3,5	;RP0=1, select bank1
  4000  16FE  1303               	bcf	3,6	;RP1=0, select bank1
  4001  16FF  00A4               	movwf	??_ReadMemoryAdress^(0+128)
  4002  1700  0823               	movf	ReadMemoryAdress@var1^(0+128),w
  4003  1701  0084               	movwf	4
  4004  1702  0824               	movf	??_ReadMemoryAdress^(0+128),w
  4005  1703  1383               	bcf	3,7	;select IRP bank0
  4006  1704  0080               	movwf	0
  4007  1705  0008               	return
  4008  1706                     __end_of_ReadMemoryAdress:	
  4009                           
  4010                           	psect	text14
  4011  1547                     __ptext14:	
  4012 ;; *************** function _ResetMemoryAdress *****************
  4013 ;; Defined at:
  4014 ;;		line 1053 in file "functions.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;		None
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0
  4031 ;;      Totals:         0       0       0       0       0
  4032 ;;Total ram usage:        0 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    7
  4035 ;; This function calls:
  4036 ;;		_eeprom_write
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;;		_ReceivedPacketHandler
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _ResetMemoryAdress
  4045  1547                     _ResetMemoryAdress:	
  4046                           
  4047                           ;functions.c: 1055: eeprom_write(3,0);
  4048                           
  4049                           ;incstack = 0
  4050 ;; hardware stack exceeded
  4051                           ; Regs used in _ResetMemoryAdress: [wreg+status,2+status,0+pclath+cstack]
  4052  1547  1683               	bsf	3,5	;RP0=1, select bank1
  4053  1548  1303               	bcf	3,6	;RP1=0, select bank1
  4054  1549  01A0               	clrf	eeprom_write@value^(0+128)
  4055  154A  3003               	movlw	3
  4056  154B  160A  118A  2760  160A  118A  	fcall	_eeprom_write
  4057                           
  4058                           ;functions.c: 1056: eeprom_write(2,0);
  4059  1550  1683               	bsf	3,5	;RP0=1, select bank1
  4060  1551  1303               	bcf	3,6	;RP1=0, select bank1
  4061  1552  01A0               	clrf	eeprom_write@value^(0+128)
  4062  1553  3002               	movlw	2
  4063  1554  160A  118A  2760  160A  118A  	fcall	_eeprom_write
  4064                           
  4065                           ;functions.c: 1057: eeprom_write(1,0);
  4066  1559  1683               	bsf	3,5	;RP0=1, select bank1
  4067  155A  1303               	bcf	3,6	;RP1=0, select bank1
  4068  155B  01A0               	clrf	eeprom_write@value^(0+128)
  4069  155C  3001               	movlw	1
  4070  155D  160A  118A  2760   	fcall	_eeprom_write
  4071  1560  0008               	return
  4072  1561                     __end_of_ResetMemoryAdress:	
  4073                           
  4074                           	psect	text15
  4075  1760                     __ptext15:	
  4076 ;; *************** function _eeprom_write *****************
  4077 ;; Defined at:
  4078 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eewrite.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  addr            1    wreg     unsigned char 
  4081 ;;  value           1    0[BANK1 ] unsigned char 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  addr            1    2[BANK1 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       0       1       0       0
  4094 ;;      Locals:         0       0       1       0       0
  4095 ;;      Temps:          0       0       1       0       0
  4096 ;;      Totals:         0       0       3       0       0
  4097 ;;Total ram usage:        3 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    6
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_ReceivedPacketHandler
  4104 ;;		_ResetMemoryAdress
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           
  4109                           ;psect for function _eeprom_write
  4110  1760                     _eeprom_write:	
  4111                           
  4112                           ;incstack = 0
  4113 ;; hardware stack exceeded
  4114                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4115                           ;eeprom_write@addr stored from wreg
  4116  1760  1683               	bsf	3,5	;RP0=1, select bank1
  4117  1761  1303               	bcf	3,6	;RP1=0, select bank1
  4118  1762  00A2               	movwf	eeprom_write@addr^(0+128)
  4119  1763                     l694:	
  4120  1763  1683               	bsf	3,5	;RP0=1, select bank3
  4121  1764  1703               	bsf	3,6	;RP1=1, select bank3
  4122  1765  188C               	btfsc	12,1	;volsfr
  4123  1766  2F63               	goto	l694
  4124  1767  1683               	bsf	3,5	;RP0=1, select bank1
  4125  1768  1303               	bcf	3,6	;RP1=0, select bank1
  4126  1769  0822               	movf	eeprom_write@addr^(0+128),w
  4127  176A  1283               	bcf	3,5	;RP0=0, select bank2
  4128  176B  1703               	bsf	3,6	;RP1=1, select bank2
  4129  176C  008D               	movwf	13	;volatile
  4130  176D  1683               	bsf	3,5	;RP0=1, select bank1
  4131  176E  1303               	bcf	3,6	;RP1=0, select bank1
  4132  176F  0820               	movf	eeprom_write@value^(0+128),w
  4133  1770  1283               	bcf	3,5	;RP0=0, select bank2
  4134  1771  1703               	bsf	3,6	;RP1=1, select bank2
  4135  1772  008C               	movwf	12	;volatile
  4136  1773  303F               	movlw	63
  4137  1774  1683               	bsf	3,5	;RP0=1, select bank1
  4138  1775  1303               	bcf	3,6	;RP1=0, select bank1
  4139  1776  00A1               	movwf	??_eeprom_write^(0+128)
  4140  1777  0821               	movf	??_eeprom_write^(0+128),w
  4141  1778  1683               	bsf	3,5	;RP0=1, select bank3
  4142  1779  1703               	bsf	3,6	;RP1=1, select bank3
  4143  177A  058C               	andwf	12,f	;volsfr
  4144  177B  1283               	bcf	3,5	;RP0=0, select bank0
  4145  177C  1303               	bcf	3,6	;RP1=0, select bank0
  4146  177D  1003               	bcf	3,0	;volatile
  4147  177E  1B8B               	btfsc	11,7	;volatile
  4148  177F  1403               	bsf	3,0	;volatile
  4149  1780  138B               	bcf	11,7	;volatile
  4150  1781  1683               	bsf	3,5	;RP0=1, select bank3
  4151  1782  1703               	bsf	3,6	;RP1=1, select bank3
  4152  1783  150C               	bsf	12,2	;volsfr
  4153  1784  3055               	movlw	85
  4154  1785  008D               	movwf	13	;volsfr
  4155  1786  30AA               	movlw	170
  4156  1787  008D               	movwf	13	;volsfr
  4157  1788  148C               	bsf	12,1	;volsfr
  4158  1789  110C               	bcf	12,2	;volsfr
  4159  178A  1283               	bcf	3,5	;RP0=0, select bank0
  4160  178B  1303               	bcf	3,6	;RP1=0, select bank0
  4161  178C  1C03               	btfss	3,0	;volatile
  4162  178D  0008               	return
  4163  178E  178B               	bsf	11,7	;volatile
  4164  178F  0008               	return
  4165  1790                     __end_of_eeprom_write:	
  4166                           
  4167                           	psect	text16
  4168  1471                     __ptext16:	
  4169 ;; *************** function _OperationMode *****************
  4170 ;; Defined at:
  4171 ;;		line 965 in file "functions.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  bracketStatu    1    1[BANK1 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      unsigned char 
  4178 ;; Registers used:
  4179 ;;		wreg, status,2
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         0       0       1       0       0
  4187 ;;      Temps:          0       0       1       0       0
  4188 ;;      Totals:         0       0       2       0       0
  4189 ;;Total ram usage:        2 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    6
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;;		_ReceivedPacketHandler
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _OperationMode
  4202  1471                     _OperationMode:	
  4203                           
  4204                           ;functions.c: 967: unsigned char bracketStatus;
  4205                           ;functions.c: 968: bracketStatus = ((~PORTB) & 0b00000111) ;
  4206                           
  4207                           ;incstack = 0
  4208 ;; hardware stack exceeded
  4209                           ; Regs used in _OperationMode: [wreg+status,2]
  4210  1471  1283               	bcf	3,5	;RP0=0, select bank0
  4211  1472  1303               	bcf	3,6	;RP1=0, select bank0
  4212  1473  0906               	comf	6,w	;volatile
  4213  1474  3907               	andlw	7
  4214  1475  1683               	bsf	3,5	;RP0=1, select bank1
  4215  1476  1303               	bcf	3,6	;RP1=0, select bank1
  4216  1477  00A0               	movwf	??_OperationMode^(0+128)
  4217  1478  0820               	movf	??_OperationMode^(0+128),w
  4218  1479  00A1               	movwf	OperationMode@bracketStatus^(0+128)
  4219                           
  4220                           ;functions.c: 970: return bracketStatus;
  4221  147A  0821               	movf	OperationMode@bracketStatus^(0+128),w
  4222  147B  0008               	return
  4223  147C                     __end_of_OperationMode:	
  4224                           
  4225                           	psect	text17
  4226  14DC                     __ptext17:	
  4227 ;; *************** function _ReadFIFO *****************
  4228 ;; Defined at:
  4229 ;;		line 772 in file "functions.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;		None
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  value           1    4[BANK1 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      unsigned char 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, pclath, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         0       0       1       0       0
  4245 ;;      Temps:          0       0       1       0       0
  4246 ;;      Totals:         0       0       2       0       0
  4247 ;;Total ram usage:        2 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    8
  4250 ;; This function calls:
  4251 ;;		_ReadSPI
  4252 ;; This function is called by:
  4253 ;;		_TransiverReadFIFO
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           
  4258                           ;psect for function _ReadFIFO
  4259  14DC                     _ReadFIFO:	
  4260                           
  4261                           ;functions.c: 774: BYTE value;
  4262                           ;functions.c: 775: RA5 = 0;
  4263                           
  4264                           ;incstack = 0
  4265 ;; hardware stack exceeded
  4266                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  4267  14DC  1283               	bcf	3,5	;RP0=0, select bank0
  4268  14DD  1303               	bcf	3,6	;RP1=0, select bank0
  4269  14DE  1285               	bcf	5,5	;volatile
  4270                           
  4271                           ;functions.c: 776: value = ReadSPI();
  4272  14DF  160A  118A  2458   	fcall	_ReadSPI
  4273  14E2  1683               	bsf	3,5	;RP0=1, select bank1
  4274  14E3  1303               	bcf	3,6	;RP1=0, select bank1
  4275  14E4  00A3               	movwf	??_ReadFIFO^(0+128)
  4276  14E5  0823               	movf	??_ReadFIFO^(0+128),w
  4277  14E6  00A4               	movwf	ReadFIFO@value^(0+128)
  4278                           
  4279                           ;functions.c: 777: RA5 = 1;
  4280  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  4281  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  4282  14E9  1685               	bsf	5,5	;volatile
  4283                           
  4284                           ;functions.c: 778: return value;
  4285  14EA  1683               	bsf	3,5	;RP0=1, select bank1
  4286  14EB  1303               	bcf	3,6	;RP1=0, select bank1
  4287  14EC  0824               	movf	ReadFIFO@value^(0+128),w
  4288  14ED  0008               	return
  4289  14EE                     __end_of_ReadFIFO:	
  4290                           
  4291                           	psect	text18
  4292  0E2C                     __ptext18:	
  4293 ;; *************** function _TransiverInit *****************
  4294 ;; Defined at:
  4295 ;;		line 537 in file "functions.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4309 ;;      Params:         0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0
  4311 ;;      Temps:          0       0       1       0       0
  4312 ;;      Totals:         0       0       1       0       0
  4313 ;;Total ram usage:        1 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:   11
  4316 ;; This function calls:
  4317 ;;		_Blink
  4318 ;;		_FindChannel
  4319 ;;		_RegisterRead
  4320 ;;		_RegisterSet
  4321 ;;		_SetRFMode
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           
  4328                           ;psect for function _TransiverInit
  4329  0E2C                     _TransiverInit:	
  4330                           
  4331                           ;functions.c: 540: RegisterSet(0x00, 0x30);
  4332                           
  4333                           ;incstack = 0
  4334 ;; hardware stack exceeded
  4335                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4336  0E2C  3030               	movlw	48
  4337  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0E2F  00B5               	movwf	??_TransiverInit^(0+128)
  4340  0E30  0835               	movf	??_TransiverInit^(0+128),w
  4341  0E31  00A7               	movwf	RegisterSet@value^(0+128)
  4342  0E32  3000               	movlw	0
  4343  0E33  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4344                           
  4345                           ;functions.c: 541: RegisterSet(0x01,(0xA8));
  4346  0E38  30A8               	movlw	168
  4347  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  4348  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  4349  0E3B  00B5               	movwf	??_TransiverInit^(0+128)
  4350  0E3C  0835               	movf	??_TransiverInit^(0+128),w
  4351  0E3D  00A7               	movwf	RegisterSet@value^(0+128)
  4352  0E3E  3001               	movlw	1
  4353  0E3F  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4354                           
  4355                           ;functions.c: 542: RegisterSet(0x02, 0x09);
  4356  0E44  3009               	movlw	9
  4357  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  4359  0E47  00B5               	movwf	??_TransiverInit^(0+128)
  4360  0E48  0835               	movf	??_TransiverInit^(0+128),w
  4361  0E49  00A7               	movwf	RegisterSet@value^(0+128)
  4362  0E4A  3002               	movlw	2
  4363  0E4B  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4364                           
  4365                           ;functions.c: 543: RegisterSet(0x03, 0x07);
  4366  0E50  3007               	movlw	7
  4367  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  4368  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  4369  0E53  00B5               	movwf	??_TransiverInit^(0+128)
  4370  0E54  0835               	movf	??_TransiverInit^(0+128),w
  4371  0E55  00A7               	movwf	RegisterSet@value^(0+128)
  4372  0E56  3003               	movlw	3
  4373  0E57  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4374                           
  4375                           ;functions.c: 544: RegisterSet(0x05,(0x0A));
  4376  0E5C  300A               	movlw	10
  4377  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  4378  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  4379  0E5F  00B5               	movwf	??_TransiverInit^(0+128)
  4380  0E60  0835               	movf	??_TransiverInit^(0+128),w
  4381  0E61  00A7               	movwf	RegisterSet@value^(0+128)
  4382  0E62  3005               	movlw	5
  4383  0E63  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4384                           
  4385                           ;functions.c: 545: RegisterSet(0x0D,(0x00|0xB0|0x09));
  4386  0E68  30B9               	movlw	185
  4387  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  4388  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  4389  0E6B  00B5               	movwf	??_TransiverInit^(0+128)
  4390  0E6C  0835               	movf	??_TransiverInit^(0+128),w
  4391  0E6D  00A7               	movwf	RegisterSet@value^(0+128)
  4392  0E6E  300D               	movlw	13
  4393  0E6F  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4394                           
  4395                           ;functions.c: 546: RegisterSet(0x0E,(0x01|0x10|0x01));
  4396  0E74  3011               	movlw	17
  4397  0E75  1683               	bsf	3,5	;RP0=1, select bank1
  4398  0E76  1303               	bcf	3,6	;RP1=0, select bank1
  4399  0E77  00B5               	movwf	??_TransiverInit^(0+128)
  4400  0E78  0835               	movf	??_TransiverInit^(0+128),w
  4401  0E79  00A7               	movwf	RegisterSet@value^(0+128)
  4402  0E7A  300E               	movlw	14
  4403  0E7B  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4404                           
  4405                           ;functions.c: 547: RegisterSet(0x10, 0xA3);
  4406  0E80  30A3               	movlw	163
  4407  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  4408  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  4409  0E83  00B5               	movwf	??_TransiverInit^(0+128)
  4410  0E84  0835               	movf	??_TransiverInit^(0+128),w
  4411  0E85  00A7               	movwf	RegisterSet@value^(0+128)
  4412  0E86  3010               	movlw	16
  4413  0E87  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4414                           
  4415                           ;functions.c: 548: RegisterSet(0x12,(0x18|0x20|0x06));
  4416  0E8C  303E               	movlw	62
  4417  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0E8F  00B5               	movwf	??_TransiverInit^(0+128)
  4420  0E90  0835               	movf	??_TransiverInit^(0+128),w
  4421  0E91  00A7               	movwf	RegisterSet@value^(0+128)
  4422  0E92  3012               	movlw	18
  4423  0E93  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4424                           
  4425                           ;functions.c: 549: RegisterSet(0x16,('S'));
  4426  0E98  3053               	movlw	83
  4427  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  4428  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  4429  0E9B  00B5               	movwf	??_TransiverInit^(0+128)
  4430  0E9C  0835               	movf	??_TransiverInit^(0+128),w
  4431  0E9D  00A7               	movwf	RegisterSet@value^(0+128)
  4432  0E9E  3016               	movlw	22
  4433  0E9F  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4434                           
  4435                           ;functions.c: 550: RegisterSet(0x17,('Y'));
  4436  0EA4  3059               	movlw	89
  4437  0EA5  1683               	bsf	3,5	;RP0=1, select bank1
  4438  0EA6  1303               	bcf	3,6	;RP1=0, select bank1
  4439  0EA7  00B5               	movwf	??_TransiverInit^(0+128)
  4440  0EA8  0835               	movf	??_TransiverInit^(0+128),w
  4441  0EA9  00A7               	movwf	RegisterSet@value^(0+128)
  4442  0EAA  3017               	movlw	23
  4443  0EAB  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4444                           
  4445                           ;functions.c: 551: RegisterSet(0x18,('N'));
  4446  0EB0  304E               	movlw	78
  4447  0EB1  1683               	bsf	3,5	;RP0=1, select bank1
  4448  0EB2  1303               	bcf	3,6	;RP1=0, select bank1
  4449  0EB3  00B5               	movwf	??_TransiverInit^(0+128)
  4450  0EB4  0835               	movf	??_TransiverInit^(0+128),w
  4451  0EB5  00A7               	movwf	RegisterSet@value^(0+128)
  4452  0EB6  3018               	movlw	24
  4453  0EB7  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4454                           
  4455                           ;functions.c: 552: RegisterSet(0x19,('C'));
  4456  0EBC  3043               	movlw	67
  4457  0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  4458  0EBE  1303               	bcf	3,6	;RP1=0, select bank1
  4459  0EBF  00B5               	movwf	??_TransiverInit^(0+128)
  4460  0EC0  0835               	movf	??_TransiverInit^(0+128),w
  4461  0EC1  00A7               	movwf	RegisterSet@value^(0+128)
  4462  0EC2  3019               	movlw	25
  4463  0EC3  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4464                           
  4465                           ;functions.c: 553: RegisterSet(0x1A, 0x72);
  4466  0EC8  3072               	movlw	114
  4467  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  4468  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  4469  0ECB  00B5               	movwf	??_TransiverInit^(0+128)
  4470  0ECC  0835               	movf	??_TransiverInit^(0+128),w
  4471  0ECD  00A7               	movwf	RegisterSet@value^(0+128)
  4472  0ECE  301A               	movlw	26
  4473  0ECF  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4474                           
  4475                           ;functions.c: 554: RegisterSet(0x1B, 0x3C);
  4476  0ED4  303C               	movlw	60
  4477  0ED5  1683               	bsf	3,5	;RP0=1, select bank1
  4478  0ED6  1303               	bcf	3,6	;RP1=0, select bank1
  4479  0ED7  00B5               	movwf	??_TransiverInit^(0+128)
  4480  0ED8  0835               	movf	??_TransiverInit^(0+128),w
  4481  0ED9  00A7               	movwf	RegisterSet@value^(0+128)
  4482  0EDA  301B               	movlw	27
  4483  0EDB  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4484                           
  4485                           ;functions.c: 555: RegisterSet(0x1F, 0x80);
  4486  0EE0  3080               	movlw	128
  4487  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  4488  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  4489  0EE3  00B5               	movwf	??_TransiverInit^(0+128)
  4490  0EE4  0835               	movf	??_TransiverInit^(0+128),w
  4491  0EE5  00A7               	movwf	RegisterSet@value^(0+128)
  4492  0EE6  301F               	movlw	31
  4493  0EE7  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4494                           
  4495                           ;functions.c: 556: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  4496  0EEC  3000               	movlw	0
  4497  0EED  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  4498  0EF2  3801               	iorlw	1
  4499  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  4500  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  4501  0EF5  00B5               	movwf	??_TransiverInit^(0+128)
  4502  0EF6  0835               	movf	??_TransiverInit^(0+128),w
  4503  0EF7  00A7               	movwf	RegisterSet@value^(0+128)
  4504  0EF8  3000               	movlw	0
  4505  0EF9  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  4506                           
  4507                           ;functions.c: 558: if(FindChannel() == 1)
  4508  0EFE  120A  118A  26D4  120A  158A  	fcall	_FindChannel
  4509  0F03  3A01               	xorlw	1
  4510  0F04  1D03               	skipz
  4511  0F05  2F11               	goto	l4268
  4512                           
  4513                           ;functions.c: 559: Blink(1);
  4514  0F06  3001               	movlw	1
  4515  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  4516  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  4517  0F09  00A6               	movwf	Blink@n^(0+128)
  4518  0F0A  3000               	movlw	0
  4519  0F0B  00A7               	movwf	(Blink@n^(0+128)+1)
  4520  0F0C  160A  118A  2790  120A  158A  	fcall	_Blink
  4521  0F11                     l4268:	
  4522                           
  4523                           ;functions.c: 560: SetRFMode(0x00);
  4524  0F11  3000               	movlw	0
  4525  0F12  120A  158A  22AA   	fcall	_SetRFMode
  4526  0F15  0008               	return
  4527  0F16                     __end_of_TransiverInit:	
  4528                           
  4529                           	psect	text19
  4530  1790                     __ptext19:	
  4531 ;; *************** function _Blink *****************
  4532 ;; Defined at:
  4533 ;;		line 685 in file "functions.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  n               2    6[BANK1 ] int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  i               2    9[BANK1 ] int 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, pclath, cstack
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       0       2       0       0
  4548 ;;      Locals:         0       0       2       0       0
  4549 ;;      Temps:          0       0       1       0       0
  4550 ;;      Totals:         0       0       5       0       0
  4551 ;;Total ram usage:        5 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    7
  4554 ;; This function calls:
  4555 ;;		_DelayDs
  4556 ;; This function is called by:
  4557 ;;		_TransiverInit
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _Blink
  4563  1790                     _Blink:	
  4564                           
  4565                           ;functions.c: 687: for(int i = 1;i<=n;i++)
  4566                           
  4567                           ;incstack = 0
  4568 ;; hardware stack exceeded
  4569                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  4570  1790  3001               	movlw	1
  4571  1791  1683               	bsf	3,5	;RP0=1, select bank1
  4572  1792  1303               	bcf	3,6	;RP1=0, select bank1
  4573  1793  00A9               	movwf	Blink@i^(0+128)
  4574  1794  3000               	movlw	0
  4575  1795  00AA               	movwf	(Blink@i^(0+128)+1)
  4576  1796                     l4170:	
  4577  1796  0827               	movf	(Blink@n+1)^(0+128),w
  4578  1797  3A80               	xorlw	128
  4579  1798  00A8               	movwf	??_Blink^(0+128)
  4580  1799  082A               	movf	(Blink@i+1)^(0+128),w
  4581  179A  3A80               	xorlw	128
  4582  179B  0228               	subwf	??_Blink^(0+128),w
  4583  179C  1D03               	skipz
  4584  179D  2FA0               	goto	u3395
  4585  179E  0829               	movf	Blink@i^(0+128),w
  4586  179F  0226               	subwf	Blink@n^(0+128),w
  4587  17A0                     u3395:	
  4588  17A0  1C03               	btfss	3,0
  4589  17A1  0008               	return
  4590                           
  4591                           ;functions.c: 688: {
  4592                           ;functions.c: 689: RC1 = 1;
  4593  17A2  1283               	bcf	3,5	;RP0=0, select bank0
  4594  17A3  1303               	bcf	3,6	;RP1=0, select bank0
  4595  17A4  1487               	bsf	7,1	;volatile
  4596                           
  4597                           ;functions.c: 690: DelayDs(2);
  4598  17A5  3002               	movlw	2
  4599  17A6  1683               	bsf	3,5	;RP0=1, select bank1
  4600  17A7  1303               	bcf	3,6	;RP1=0, select bank1
  4601  17A8  00A0               	movwf	DelayDs@cnt^(0+128)
  4602  17A9  3000               	movlw	0
  4603  17AA  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  4604  17AB  160A  118A  261D  160A  118A  	fcall	_DelayDs
  4605                           
  4606                           ;functions.c: 691: RC1 = 0;
  4607  17B0  1283               	bcf	3,5	;RP0=0, select bank0
  4608  17B1  1303               	bcf	3,6	;RP1=0, select bank0
  4609  17B2  1087               	bcf	7,1	;volatile
  4610                           
  4611                           ;functions.c: 692: DelayDs(6);
  4612  17B3  3006               	movlw	6
  4613  17B4  1683               	bsf	3,5	;RP0=1, select bank1
  4614  17B5  1303               	bcf	3,6	;RP1=0, select bank1
  4615  17B6  00A0               	movwf	DelayDs@cnt^(0+128)
  4616  17B7  3000               	movlw	0
  4617  17B8  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  4618  17B9  160A  118A  261D  160A  118A  	fcall	_DelayDs
  4619  17BE  3001               	movlw	1
  4620  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  4621  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  4622  17C1  07A9               	addwf	Blink@i^(0+128),f
  4623  17C2  1803               	skipnc
  4624  17C3  0AAA               	incf	(Blink@i+1)^(0+128),f
  4625  17C4  3000               	movlw	0
  4626  17C5  07AA               	addwf	(Blink@i+1)^(0+128),f
  4627  17C6  2F96               	goto	l4170
  4628  17C7                     __end_of_Blink:	
  4629                           
  4630                           	psect	text20
  4631  09D8                     __ptext20:	
  4632 ;; *************** function _PICInit *****************
  4633 ;; Defined at:
  4634 ;;		line 425 in file "functions.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4648 ;;      Params:         0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    6
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _PICInit
  4664  09D8                     _PICInit:	
  4665                           
  4666                           ;functions.c: 429: OSCCONbits.IRCF2 = 1;
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _PICInit: [wreg+status,2+status,0]
  4670  09D8  1683               	bsf	3,5	;RP0=1, select bank1
  4671  09D9  1303               	bcf	3,6	;RP1=0, select bank1
  4672  09DA  170F               	bsf	15,6	;volatile
  4673                           
  4674                           ;functions.c: 430: OSCCONbits.IRCF1 = 1;
  4675  09DB  168F               	bsf	15,5	;volatile
  4676                           
  4677                           ;functions.c: 431: OSCCONbits.IRCF0 = 0;
  4678  09DC  120F               	bcf	15,4	;volatile
  4679                           
  4680                           ;functions.c: 432: OSCCONbits.SCS = 1;
  4681  09DD  140F               	bsf	15,0	;volatile
  4682                           
  4683                           ;functions.c: 435: PORTA = 0x00;
  4684  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4685  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4686  09E0  0185               	clrf	5	;volatile
  4687                           
  4688                           ;functions.c: 436: PORTB = 0x00;
  4689  09E1  0186               	clrf	6	;volatile
  4690                           
  4691                           ;functions.c: 437: PORTC = 0x00;
  4692  09E2  0187               	clrf	7	;volatile
  4693                           
  4694                           ;functions.c: 438: PORTD = 0x00;
  4695  09E3  0188               	clrf	8	;volatile
  4696                           
  4697                           ;functions.c: 439: PORTE = 0x00;
  4698  09E4  0189               	clrf	9	;volatile
  4699                           
  4700                           ;functions.c: 441: TRISA = 0b00001011;
  4701  09E5  300B               	movlw	11
  4702  09E6  1683               	bsf	3,5	;RP0=1, select bank1
  4703  09E7  1303               	bcf	3,6	;RP1=0, select bank1
  4704  09E8  0085               	movwf	5	;volatile
  4705                           
  4706                           ;functions.c: 442: TRISB = 0b00111101;
  4707  09E9  303D               	movlw	61
  4708  09EA  0086               	movwf	6	;volatile
  4709                           
  4710                           ;functions.c: 443: TRISC = 0b00010000;
  4711  09EB  3010               	movlw	16
  4712  09EC  0087               	movwf	7	;volatile
  4713                           
  4714                           ;functions.c: 444: TRISD = 0b00000111;
  4715  09ED  3007               	movlw	7
  4716  09EE  0088               	movwf	8	;volatile
  4717                           
  4718                           ;functions.c: 445: TRISE = 0b00000111;
  4719  09EF  3007               	movlw	7
  4720  09F0  0089               	movwf	9	;volatile
  4721                           
  4722                           ;functions.c: 447: ANSEL = 0b00000000;
  4723  09F1  1683               	bsf	3,5	;RP0=1, select bank3
  4724  09F2  1703               	bsf	3,6	;RP1=1, select bank3
  4725  09F3  0188               	clrf	8	;volatile
  4726                           
  4727                           ;functions.c: 448: ANSELH = 0b00000000;
  4728  09F4  0189               	clrf	9	;volatile
  4729                           
  4730                           ;functions.c: 449: ANSELbits.ANS0 = 1;
  4731  09F5  1408               	bsf	8,0	;volatile
  4732                           
  4733                           ;functions.c: 450: ANSELbits.ANS3 = 1;
  4734  09F6  1588               	bsf	8,3	;volatile
  4735                           
  4736                           ;functions.c: 451: ANSELbits.ANS5 = 1;
  4737  09F7  1688               	bsf	8,5	;volatile
  4738                           
  4739                           ;functions.c: 452: ANSELbits.ANS6 = 1;
  4740  09F8  1708               	bsf	8,6	;volatile
  4741                           
  4742                           ;functions.c: 453: ANSELbits.ANS7 = 1;
  4743  09F9  1788               	bsf	8,7	;volatile
  4744                           
  4745                           ;functions.c: 454: ANSELHbits.ANS8 = 1;
  4746  09FA  1409               	bsf	9,0	;volatile
  4747                           
  4748                           ;functions.c: 456: OPTION_REGbits.nRBPU = 0;
  4749  09FB  1683               	bsf	3,5	;RP0=1, select bank1
  4750  09FC  1303               	bcf	3,6	;RP1=0, select bank1
  4751  09FD  1381               	bcf	1,7	;volatile
  4752                           
  4753                           ;functions.c: 457: WPUBbits.WPUB0 = 1;
  4754  09FE  1415               	bsf	21,0	;volatile
  4755  09FF                     l395:	
  4756                           ;functions.c: 458: while(!RB0);
  4757                           
  4758  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0A00  1C06               	btfss	6,0	;volatile
  4760  0A01  29FF               	goto	l395
  4761                           
  4762                           ;functions.c: 459: WPUBbits.WPUB5 = 1;
  4763  0A02  1683               	bsf	3,5	;RP0=1, select bank1
  4764  0A03  1303               	bcf	3,6	;RP1=0, select bank1
  4765  0A04  1695               	bsf	21,5	;volatile
  4766  0A05                     l398:	
  4767                           ;functions.c: 460: while(!RB5);
  4768                           
  4769  0A05  1283               	bcf	3,5	;RP0=0, select bank0
  4770  0A06  1E86               	btfss	6,5	;volatile
  4771  0A07  2A05               	goto	l398
  4772                           
  4773                           ;functions.c: 463: SSPCONbits.SSPM=0x00;
  4774  0A08  30F0               	movlw	-16
  4775  0A09  0594               	andwf	20,f	;volatile
  4776                           
  4777                           ;functions.c: 464: SSPCONbits.CKP=0;
  4778  0A0A  1214               	bcf	20,4	;volatile
  4779                           
  4780                           ;functions.c: 465: SSPSTATbits.CKE=1;
  4781  0A0B  1683               	bsf	3,5	;RP0=1, select bank1
  4782  0A0C  1303               	bcf	3,6	;RP1=0, select bank1
  4783  0A0D  1714               	bsf	20,6	;volatile
  4784                           
  4785                           ;functions.c: 466: SSPSTATbits.SMP=0;
  4786  0A0E  1394               	bcf	20,7	;volatile
  4787                           
  4788                           ;functions.c: 467: SSPCONbits.SSPEN=0x01;
  4789  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0A11  1694               	bsf	20,5	;volatile
  4792                           
  4793                           ;functions.c: 468: SSPIE = 0;
  4794  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  4795  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  4796  0A14  118C               	bcf	12,3	;volatile
  4797                           
  4798                           ;functions.c: 471: RA5 = 1;
  4799  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0A17  1685               	bsf	5,5	;volatile
  4802                           
  4803                           ;functions.c: 472: RA4 = 1;
  4804  0A18  1605               	bsf	5,4	;volatile
  4805                           
  4806                           ;functions.c: 473: RD4 = 1;
  4807  0A19  1608               	bsf	8,4	;volatile
  4808                           
  4809                           ;functions.c: 474: RD3 = 1;
  4810  0A1A  1588               	bsf	8,3	;volatile
  4811                           
  4812                           ;functions.c: 476: RB1 = 1;
  4813  0A1B  1486               	bsf	6,1	;volatile
  4814                           
  4815                           ;functions.c: 481: INTCONbits.RBIE = 1;
  4816  0A1C  158B               	bsf	11,3	;volatile
  4817                           
  4818                           ;functions.c: 482: INTCONbits.PEIE = 1;
  4819  0A1D  170B               	bsf	11,6	;volatile
  4820                           
  4821                           ;functions.c: 483: PIE1bits.TMR1IE = 1;
  4822  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  4823  0A1F  1303               	bcf	3,6	;RP1=0, select bank1
  4824  0A20  140C               	bsf	12,0	;volatile
  4825                           
  4826                           ;functions.c: 484: INTCONbits.GIE = 1;
  4827  0A21  178B               	bsf	11,7	;volatile
  4828                           
  4829                           ;functions.c: 485: IOCBbits.IOCB5 = 1;
  4830  0A22  1696               	bsf	22,5	;volatile
  4831                           
  4832                           ;functions.c: 488: T1CON = 0b00110000;
  4833  0A23  3030               	movlw	48
  4834  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0A26  0090               	movwf	16	;volatile
  4837                           
  4838                           ;functions.c: 489: TMR1H = 0x0B;
  4839  0A27  300B               	movlw	11
  4840  0A28  008F               	movwf	15	;volatile
  4841                           
  4842                           ;functions.c: 490: TMR1L = 0xDB;
  4843  0A29  30DB               	movlw	219
  4844  0A2A  008E               	movwf	14	;volatile
  4845                           
  4846                           ;functions.c: 491: T1CONbits.TMR1ON = 1;
  4847  0A2B  1410               	bsf	16,0	;volatile
  4848                           
  4849                           ;functions.c: 494: ADCON0bits.ADCS0 = 0;
  4850  0A2C  131F               	bcf	31,6	;volatile
  4851                           
  4852                           ;functions.c: 495: ADCON0bits.ADCS1 = 0;
  4853  0A2D  139F               	bcf	31,7	;volatile
  4854                           
  4855                           ;functions.c: 496: ADCON1bits.ADFM = 0;
  4856  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  4857  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  4858  0A30  139F               	bcf	31,7	;volatile
  4859                           
  4860                           ;functions.c: 497: ADCON1bits.VCFG1 = 0;
  4861  0A31  129F               	bcf	31,5	;volatile
  4862                           
  4863                           ;functions.c: 498: ADCON1bits.VCFG0 = 0;
  4864  0A32  121F               	bcf	31,4	;volatile
  4865                           
  4866                           ;functions.c: 501: intSecondCounter = 0;
  4867  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0A34  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0A35  01DE               	clrf	_intSecondCounter
  4870  0A36  01DF               	clrf	_intSecondCounter+1
  4871                           
  4872                           ;functions.c: 502: intHalfSecondCounter = 0;
  4873  0A37  01DA               	clrf	_intHalfSecondCounter
  4874  0A38  01DB               	clrf	_intHalfSecondCounter+1
  4875                           
  4876                           ;functions.c: 503: intMinuteCounter = 0;
  4877  0A39  01DC               	clrf	_intMinuteCounter
  4878  0A3A  01DD               	clrf	_intMinuteCounter+1
  4879  0A3B  0008               	return
  4880  0A3C                     __end_of_PICInit:	
  4881                           
  4882                           	psect	text21
  4883  0800                     __ptext21:	
  4884 ;; *************** function _Mode_5 *****************
  4885 ;; Defined at:
  4886 ;;		line 326 in file "functions.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4900 ;;      Params:         0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0
  4902 ;;      Temps:          0       0       1       0       0
  4903 ;;      Totals:         0       0       1       0       0
  4904 ;;Total ram usage:        1 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:   12
  4907 ;; This function calls:
  4908 ;;		_LightWithSensController
  4909 ;;		_TransmittPacket
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _Mode_5
  4917  0800                     _Mode_5:	
  4918                           
  4919                           ;functions.c: 328: if(!RB5)
  4920                           
  4921                           ;incstack = 0
  4922 ;; hardware stack exceeded
  4923                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4924  0800  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0801  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0802  1A86               	btfsc	6,5	;volatile
  4927  0803  2810               	goto	l4344
  4928                           
  4929                           ;functions.c: 329: {
  4930                           ;functions.c: 330: TransmittPacket(2, 2);
  4931  0804  3002               	movlw	2
  4932  0805  1683               	bsf	3,5	;RP0=1, select bank1
  4933  0806  1303               	bcf	3,6	;RP1=0, select bank1
  4934  0807  00BB               	movwf	??_Mode_5^(0+128)
  4935  0808  083B               	movf	??_Mode_5^(0+128),w
  4936  0809  00B5               	movwf	TransmittPacket@value^(0+128)
  4937  080A  3002               	movlw	2
  4938  080B  120A  158A  24AE  120A  158A  	fcall	_TransmittPacket
  4939  0810                     l4344:	
  4940                           
  4941                           ;functions.c: 331: }
  4942                           ;functions.c: 332: LightWithSensController();
  4943  0810  120A  158A  20E0   	fcall	_LightWithSensController
  4944  0813  0008               	return
  4945  0814                     __end_of_Mode_5:	
  4946                           
  4947                           	psect	text22
  4948  14CA                     __ptext22:	
  4949 ;; *************** function _Mode_4 *****************
  4950 ;; Defined at:
  4951 ;;		line 314 in file "functions.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0
  4968 ;;      Totals:         0       0       0       0       0
  4969 ;;Total ram usage:        0 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:   12
  4972 ;; This function calls:
  4973 ;;		_LightWithSensController
  4974 ;;		_TransmittPacket
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _Mode_4
  4982  14CA                     _Mode_4:	
  4983                           
  4984                           ;functions.c: 316: if(!RB5)
  4985                           
  4986                           ;incstack = 0
  4987 ;; hardware stack exceeded
  4988                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4989  14CA  1283               	bcf	3,5	;RP0=0, select bank0
  4990  14CB  1303               	bcf	3,6	;RP1=0, select bank0
  4991  14CC  1A86               	btfsc	6,5	;volatile
  4992  14CD  2CD8               	goto	l4338
  4993                           
  4994                           ;functions.c: 317: {
  4995                           ;functions.c: 318: TransmittPacket(2, 1);
  4996  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  4997  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  4998  14D0  01B5               	clrf	TransmittPacket@value^(0+128)
  4999  14D1  0AB5               	incf	TransmittPacket@value^(0+128),f
  5000  14D2  3002               	movlw	2
  5001  14D3  120A  158A  24AE  160A  118A  	fcall	_TransmittPacket
  5002  14D8                     l4338:	
  5003                           
  5004                           ;functions.c: 319: }
  5005                           ;functions.c: 320: LightWithSensController();
  5006  14D8  120A  158A  20E0   	fcall	_LightWithSensController
  5007  14DB  0008               	return
  5008  14DC                     __end_of_Mode_4:	
  5009                           
  5010                           	psect	text23
  5011  0CAE                     __ptext23:	
  5012 ;; *************** function _TransmittPacket *****************
  5013 ;; Defined at:
  5014 ;;		line 221 in file "functions.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  topic           1    wreg     unsigned char 
  5017 ;;  value           1   21[BANK1 ] unsigned char 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;  topic           1   26[BANK1 ] unsigned char 
  5020 ;;  i               2   24[BANK1 ] int 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       0       1       0       0
  5031 ;;      Locals:         0       0       3       0       0
  5032 ;;      Temps:          0       0       2       0       0
  5033 ;;      Totals:         0       0       6       0       0
  5034 ;;Total ram usage:        6 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:   11
  5037 ;; This function calls:
  5038 ;;		_FindChannel
  5039 ;;		_RegisterRead
  5040 ;;		_RegisterSet
  5041 ;;		_SetRFMode
  5042 ;;		_WriteFIFO
  5043 ;;		_timerFunction
  5044 ;; This function is called by:
  5045 ;;		_ReceivedPacketHandler
  5046 ;;		_Mode_4
  5047 ;;		_Mode_5
  5048 ;;		_SendMemoryData
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           
  5053                           ;psect for function _TransmittPacket
  5054  0CAE                     _TransmittPacket:	
  5055                           
  5056                           ;incstack = 0
  5057 ;; hardware stack exceeded
  5058                           ; Regs used in _TransmittPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5059                           ;TransmittPacket@topic stored from wreg
  5060  0CAE  1683               	bsf	3,5	;RP0=1, select bank1
  5061  0CAF  1303               	bcf	3,6	;RP1=0, select bank1
  5062  0CB0  00BA               	movwf	TransmittPacket@topic^(0+128)
  5063                           
  5064                           ;functions.c: 223: timerFunction(4, 5);
  5065  0CB1  3004               	movlw	4
  5066  0CB2  00A0               	movwf	timerFunction@intTimerNumber^(0+128)
  5067  0CB3  3000               	movlw	0
  5068  0CB4  00A1               	movwf	(timerFunction@intTimerNumber^(0+128)+1)
  5069  0CB5  3005               	movlw	5
  5070  0CB6  00A2               	movwf	timerFunction@intSetSeconds^(0+128)
  5071  0CB7  3000               	movlw	0
  5072  0CB8  00A3               	movwf	(timerFunction@intSetSeconds^(0+128)+1)
  5073  0CB9  160A  118A  24B8  120A  158A  	fcall	_timerFunction
  5074                           
  5075                           ;functions.c: 225: int i = 0;
  5076  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  5077  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  5078  0CC0  01B8               	clrf	TransmittPacket@i^(0+128)
  5079  0CC1  01B9               	clrf	(TransmittPacket@i+1)^(0+128)
  5080                           
  5081                           ;functions.c: 228: SetRFMode(0x20);
  5082  0CC2  3020               	movlw	32
  5083  0CC3  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  5084                           
  5085                           ;functions.c: 229: _delay((unsigned long)((10)*(4000000/4000.0)));
  5086  0CC8  300D               	movlw	13
  5087  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  5088  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  5089  0CCB  00B7               	movwf	(??_TransmittPacket^(0+128)+1)
  5090  0CCC  30FB               	movlw	251
  5091  0CCD  00B6               	movwf	??_TransmittPacket^(0+128)
  5092  0CCE                     u3797:	
  5093  0CCE  0BB6               	decfsz	??_TransmittPacket^(0+128),f
  5094  0CCF  2CCE               	goto	u3797
  5095  0CD0  0BB7               	decfsz	(??_TransmittPacket^(0+128)+1),f
  5096  0CD1  2CCE               	goto	u3797
  5097  0CD2  2CD3               	nop2
  5098                           
  5099                           ;functions.c: 230: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  5100  0CD3  300E               	movlw	14
  5101  0CD4  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  5102  0CD9  3802               	iorlw	2
  5103  0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  5104  0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  5105  0CDC  00B6               	movwf	??_TransmittPacket^(0+128)
  5106  0CDD  0836               	movf	??_TransmittPacket^(0+128),w
  5107  0CDE  00A7               	movwf	RegisterSet@value^(0+128)
  5108  0CDF  300E               	movlw	14
  5109  0CE0  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5110                           
  5111                           ;functions.c: 231: SetRFMode(0x40);
  5112  0CE5  3040               	movlw	64
  5113  0CE6  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  5114  0CEB                     l3790:	
  5115                           ;functions.c: 232: while((RegisterRead(0x0E) & 0b00000010) == 0)
  5116                           
  5117  0CEB  300E               	movlw	14
  5118  0CEC  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  5119  0CF1  3902               	andlw	2
  5120  0CF2  1D03               	btfss	3,2
  5121  0CF3  2CFE               	goto	l3792
  5122                           
  5123                           ;functions.c: 233: {
  5124                           ;functions.c: 234: if(bTimerComplete[4])
  5125  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0CF6  0851               	movf	_bTimerComplete+4,w
  5128  0CF7  1903               	btfsc	3,2
  5129  0CF8  2CEB               	goto	l3790
  5130                           
  5131                           ;functions.c: 235: {
  5132                           ;functions.c: 236: FindChannel();
  5133  0CF9  120A  118A  26D4  120A  158A  	fcall	_FindChannel
  5134  0CFE                     l3792:	
  5135                           ;functions.c: 237: break;
  5136                           
  5137                           
  5138                           ;functions.c: 238: }
  5139                           ;functions.c: 240: }
  5140                           ;functions.c: 241: SetRFMode(0x80);
  5141  0CFE  3080               	movlw	128
  5142  0CFF  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  5143                           
  5144                           ;functions.c: 242: _delay((unsigned long)((500)*(4000000/4000000.0)));
  5145  0D04  30A6               	movlw	166
  5146  0D05  1683               	bsf	3,5	;RP0=1, select bank1
  5147  0D06  1303               	bcf	3,6	;RP1=0, select bank1
  5148  0D07  00B6               	movwf	??_TransmittPacket^(0+128)
  5149  0D08                     u3807:	
  5150  0D08  0BB6               	decfsz	??_TransmittPacket^(0+128),f
  5151  0D09  2D08               	goto	u3807
  5152  0D0A  0000               	nop
  5153                           
  5154                           ;functions.c: 245: WriteFIFO('S');
  5155  0D0B  3053               	movlw	83
  5156  0D0C  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5157                           
  5158                           ;functions.c: 246: WriteFIFO('Y');
  5159  0D11  3059               	movlw	89
  5160  0D12  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5161                           
  5162                           ;functions.c: 247: WriteFIFO('N');
  5163  0D17  304E               	movlw	78
  5164  0D18  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5165                           
  5166                           ;functions.c: 248: WriteFIFO('C');
  5167  0D1D  3043               	movlw	67
  5168  0D1E  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5169                           
  5170                           ;functions.c: 251: WriteFIFO(44);
  5171  0D23  302C               	movlw	44
  5172  0D24  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5173                           
  5174                           ;functions.c: 252: WriteFIFO(topic);
  5175  0D29  1683               	bsf	3,5	;RP0=1, select bank1
  5176  0D2A  1303               	bcf	3,6	;RP1=0, select bank1
  5177  0D2B  083A               	movf	TransmittPacket@topic^(0+128),w
  5178  0D2C  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5179                           
  5180                           ;functions.c: 253: WriteFIFO(value);
  5181  0D31  1683               	bsf	3,5	;RP0=1, select bank1
  5182  0D32  1303               	bcf	3,6	;RP1=0, select bank1
  5183  0D33  0835               	movf	TransmittPacket@value^(0+128),w
  5184  0D34  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5185                           
  5186                           ;functions.c: 254: WriteFIFO(55);
  5187  0D39  3037               	movlw	55
  5188  0D3A  160A  118A  2497  120A  158A  	fcall	_WriteFIFO
  5189  0D3F                     l345:	
  5190                           ;functions.c: 257: while(!RB4)
  5191                           
  5192  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0D41  1A06               	btfsc	6,4	;volatile
  5195  0D42  2D48               	goto	l3816
  5196                           
  5197                           ;functions.c: 258: {
  5198                           ;functions.c: 259: if(bTimerComplete[4])
  5199  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  5200  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  5201  0D45  0851               	movf	_bTimerComplete+4,w
  5202  0D46  1903               	btfsc	3,2
  5203  0D47  2D3F               	goto	l345
  5204  0D48                     l3816:	
  5205                           ;functions.c: 260: break;
  5206                           
  5207                           
  5208                           ;functions.c: 261: }
  5209                           ;functions.c: 262: _delay((unsigned long)((10)*(4000000/4000000.0)));
  5210  0D48  3003               	movlw	3
  5211  0D49  1683               	bsf	3,5	;RP0=1, select bank1
  5212  0D4A  1303               	bcf	3,6	;RP1=0, select bank1
  5213  0D4B  00B6               	movwf	??_TransmittPacket^(0+128)
  5214  0D4C                     u3817:	
  5215  0D4C  0BB6               	decfsz	??_TransmittPacket^(0+128),f
  5216  0D4D  2D4C               	goto	u3817
  5217                           
  5218                           ;functions.c: 263: SetRFMode(0x00);
  5219  0D4E  3000               	movlw	0
  5220  0D4F  120A  158A  22AA  120A  158A  	fcall	_SetRFMode
  5221                           
  5222                           ;functions.c: 264: _delay((unsigned long)((50)*(4000000/4000.0)));
  5223  0D54  3041               	movlw	65
  5224  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  5225  0D56  1303               	bcf	3,6	;RP1=0, select bank1
  5226  0D57  00B7               	movwf	(??_TransmittPacket^(0+128)+1)
  5227  0D58  30EE               	movlw	238
  5228  0D59  00B6               	movwf	??_TransmittPacket^(0+128)
  5229  0D5A                     u3827:	
  5230  0D5A  0BB6               	decfsz	??_TransmittPacket^(0+128),f
  5231  0D5B  2D5A               	goto	u3827
  5232  0D5C  0BB7               	decfsz	(??_TransmittPacket^(0+128)+1),f
  5233  0D5D  2D5A               	goto	u3827
  5234  0D5E  0000               	nop
  5235  0D5F  0008               	return
  5236  0D60                     __end_of_TransmittPacket:	
  5237                           
  5238                           	psect	text24
  5239  1497                     __ptext24:	
  5240 ;; *************** function _WriteFIFO *****************
  5241 ;; Defined at:
  5242 ;;		line 799 in file "functions.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  Data            1    wreg     unsigned char 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  Data            1    3[BANK1 ] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, pclath, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       0       0       0
  5257 ;;      Locals:         0       0       1       0       0
  5258 ;;      Temps:          0       0       0       0       0
  5259 ;;      Totals:         0       0       1       0       0
  5260 ;;Total ram usage:        1 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    7
  5263 ;; This function calls:
  5264 ;;		_WriteSPI
  5265 ;; This function is called by:
  5266 ;;		_TransmittPacket
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _WriteFIFO
  5272  1497                     _WriteFIFO:	
  5273                           
  5274                           ;incstack = 0
  5275 ;; hardware stack exceeded
  5276                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  5277                           ;WriteFIFO@Data stored from wreg
  5278  1497  1683               	bsf	3,5	;RP0=1, select bank1
  5279  1498  1303               	bcf	3,6	;RP1=0, select bank1
  5280  1499  00A3               	movwf	WriteFIFO@Data^(0+128)
  5281                           
  5282                           ;functions.c: 801: RA5 = 0;
  5283  149A  1283               	bcf	3,5	;RP0=0, select bank0
  5284  149B  1303               	bcf	3,6	;RP1=0, select bank0
  5285  149C  1285               	bcf	5,5	;volatile
  5286                           
  5287                           ;functions.c: 802: WriteSPI(Data);
  5288  149D  1683               	bsf	3,5	;RP0=1, select bank1
  5289  149E  1303               	bcf	3,6	;RP1=0, select bank1
  5290  149F  0823               	movf	WriteFIFO@Data^(0+128),w
  5291  14A0  160A  118A  2517   	fcall	_WriteSPI
  5292                           
  5293                           ;functions.c: 803: RA5 = 1;
  5294  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  5295  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  5296  14A5  1685               	bsf	5,5	;volatile
  5297  14A6  0008               	return
  5298  14A7                     __end_of_WriteFIFO:	
  5299                           
  5300                           	psect	text25
  5301  06D4                     __ptext25:	
  5302 ;; *************** function _FindChannel *****************
  5303 ;; Defined at:
  5304 ;;		line 582 in file "functions.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  i               2   19[BANK1 ] int 
  5309 ;;  cnt             2   17[BANK1 ] int 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5319 ;;      Params:         0       0       0       0       0
  5320 ;;      Locals:         0       0       4       0       0
  5321 ;;      Temps:          0       0       3       0       0
  5322 ;;      Totals:         0       0       7       0       0
  5323 ;;Total ram usage:        7 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:   10
  5326 ;; This function calls:
  5327 ;;		_RegisterRead
  5328 ;;		_RegisterSet
  5329 ;;		_SetRFMode
  5330 ;; This function is called by:
  5331 ;;		_TransiverToReceive
  5332 ;;		_TransmittPacket
  5333 ;;		_TransiverInit
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           
  5338                           ;psect for function _FindChannel
  5339  06D4                     _FindChannel:	
  5340                           
  5341                           ;functions.c: 584: int cnt = 0;
  5342                           
  5343                           ;incstack = 0
  5344 ;; hardware stack exceeded
  5345                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5346  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  5347  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  5348  06D6  01B1               	clrf	FindChannel@cnt^(0+128)
  5349  06D7  01B2               	clrf	(FindChannel@cnt+1)^(0+128)
  5350                           
  5351                           ;functions.c: 585: bChannelFound = 0;
  5352  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  5353  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  5354  06DA  01E0               	clrf	_bChannelFound
  5355                           
  5356                           ;functions.c: 586: channelFound = 0;
  5357  06DB  01D2               	clrf	_channelFound
  5358  06DC  01D3               	clrf	_channelFound+1
  5359                           
  5360                           ;functions.c: 588: _delay((unsigned long)((1000)*(4000000/4000.0)));
  5361  06DD  3006               	movlw	6
  5362  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  5363  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  5364  06E0  00B0               	movwf	(??_FindChannel^(0+128)+2)
  5365  06E1  3013               	movlw	19
  5366  06E2  00AF               	movwf	(??_FindChannel^(0+128)+1)
  5367  06E3  30B1               	movlw	177
  5368  06E4  00AE               	movwf	??_FindChannel^(0+128)
  5369  06E5                     u3837:	
  5370  06E5  0BAE               	decfsz	??_FindChannel^(0+128),f
  5371  06E6  2EE5               	goto	u3837
  5372  06E7  0BAF               	decfsz	(??_FindChannel^(0+128)+1),f
  5373  06E8  2EE5               	goto	u3837
  5374  06E9  0BB0               	decfsz	(??_FindChannel^(0+128)+2),f
  5375  06EA  2EE5               	goto	u3837
  5376  06EB  2EEC               	nop2
  5377                           
  5378                           ;functions.c: 589: for (int i = 0; i < 13; i++)
  5379  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  5380  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  5381  06EE  01B3               	clrf	FindChannel@i^(0+128)
  5382  06EF  01B4               	clrf	(FindChannel@i+1)^(0+128)
  5383  06F0  0834               	movf	(FindChannel@i+1)^(0+128),w
  5384  06F1  3A80               	xorlw	128
  5385  06F2  00FF               	movwf	127
  5386  06F3  3080               	movlw	128
  5387  06F4  027F               	subwf	127,w
  5388  06F5  1D03               	skipz
  5389  06F6  2EF9               	goto	u2745
  5390  06F7  300D               	movlw	13
  5391  06F8  0233               	subwf	FindChannel@i^(0+128),w
  5392  06F9                     u2745:	
  5393  06F9  1803               	btfsc	3,0
  5394  06FA  2FD4               	goto	l3740
  5395  06FB                     l3716:	
  5396                           
  5397                           ;functions.c: 590: {
  5398                           ;functions.c: 591: RegisterSet(0x06,ChannelR[i]);
  5399  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  5400  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  5401  06FD  0833               	movf	FindChannel@i^(0+128),w
  5402  06FE  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  5403  06FF  0084               	movwf	4
  5404  0700  160A  118A  2000  120A  118A  	fcall	stringdir
  5405  0705  00AE               	movwf	??_FindChannel^(0+128)
  5406  0706  082E               	movf	??_FindChannel^(0+128),w
  5407  0707  00A7               	movwf	RegisterSet@value^(0+128)
  5408  0708  3006               	movlw	6
  5409  0709  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5410                           
  5411                           ;functions.c: 592: RegisterSet(0x07,ChannelP[i]);
  5412  070E  1683               	bsf	3,5	;RP0=1, select bank1
  5413  070F  1303               	bcf	3,6	;RP1=0, select bank1
  5414  0710  0833               	movf	FindChannel@i^(0+128),w
  5415  0711  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  5416  0712  0084               	movwf	4
  5417  0713  160A  118A  2000  120A  118A  	fcall	stringdir
  5418  0718  00AE               	movwf	??_FindChannel^(0+128)
  5419  0719  082E               	movf	??_FindChannel^(0+128),w
  5420  071A  00A7               	movwf	RegisterSet@value^(0+128)
  5421  071B  3007               	movlw	7
  5422  071C  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5423                           
  5424                           ;functions.c: 593: RegisterSet(0x08,ChannelS[i]);
  5425  0721  1683               	bsf	3,5	;RP0=1, select bank1
  5426  0722  1303               	bcf	3,6	;RP1=0, select bank1
  5427  0723  0833               	movf	FindChannel@i^(0+128),w
  5428  0724  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  5429  0725  0084               	movwf	4
  5430  0726  160A  118A  2000  120A  118A  	fcall	stringdir
  5431  072B  00AE               	movwf	??_FindChannel^(0+128)
  5432  072C  082E               	movf	??_FindChannel^(0+128),w
  5433  072D  00A7               	movwf	RegisterSet@value^(0+128)
  5434  072E  3008               	movlw	8
  5435  072F  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5436                           
  5437                           ;functions.c: 594: RegisterSet(0x09,ChannelR[i]);
  5438  0734  1683               	bsf	3,5	;RP0=1, select bank1
  5439  0735  1303               	bcf	3,6	;RP1=0, select bank1
  5440  0736  0833               	movf	FindChannel@i^(0+128),w
  5441  0737  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  5442  0738  0084               	movwf	4
  5443  0739  160A  118A  2000  120A  118A  	fcall	stringdir
  5444  073E  00AE               	movwf	??_FindChannel^(0+128)
  5445  073F  082E               	movf	??_FindChannel^(0+128),w
  5446  0740  00A7               	movwf	RegisterSet@value^(0+128)
  5447  0741  3009               	movlw	9
  5448  0742  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5449                           
  5450                           ;functions.c: 595: RegisterSet(0x0A,ChannelP[i]);
  5451  0747  1683               	bsf	3,5	;RP0=1, select bank1
  5452  0748  1303               	bcf	3,6	;RP1=0, select bank1
  5453  0749  0833               	movf	FindChannel@i^(0+128),w
  5454  074A  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  5455  074B  0084               	movwf	4
  5456  074C  160A  118A  2000  120A  118A  	fcall	stringdir
  5457  0751  00AE               	movwf	??_FindChannel^(0+128)
  5458  0752  082E               	movf	??_FindChannel^(0+128),w
  5459  0753  00A7               	movwf	RegisterSet@value^(0+128)
  5460  0754  300A               	movlw	10
  5461  0755  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5462                           
  5463                           ;functions.c: 596: RegisterSet(0x0B,ChannelS[i]);
  5464  075A  1683               	bsf	3,5	;RP0=1, select bank1
  5465  075B  1303               	bcf	3,6	;RP1=0, select bank1
  5466  075C  0833               	movf	FindChannel@i^(0+128),w
  5467  075D  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  5468  075E  0084               	movwf	4
  5469  075F  160A  118A  2000  120A  118A  	fcall	stringdir
  5470  0764  00AE               	movwf	??_FindChannel^(0+128)
  5471  0765  082E               	movf	??_FindChannel^(0+128),w
  5472  0766  00A7               	movwf	RegisterSet@value^(0+128)
  5473  0767  300B               	movlw	11
  5474  0768  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5475                           
  5476                           ;functions.c: 597: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  5477  076D  300E               	movlw	14
  5478  076E  160A  118A  2665  120A  118A  	fcall	_RegisterRead
  5479  0773  3802               	iorlw	2
  5480  0774  1683               	bsf	3,5	;RP0=1, select bank1
  5481  0775  1303               	bcf	3,6	;RP1=0, select bank1
  5482  0776  00AE               	movwf	??_FindChannel^(0+128)
  5483  0777  082E               	movf	??_FindChannel^(0+128),w
  5484  0778  00A7               	movwf	RegisterSet@value^(0+128)
  5485  0779  300E               	movlw	14
  5486  077A  160A  118A  259A  120A  118A  	fcall	_RegisterSet
  5487                           
  5488                           ;functions.c: 598: SetRFMode(0x40);
  5489  077F  3040               	movlw	64
  5490  0780  120A  158A  22AA  120A  118A  	fcall	_SetRFMode
  5491                           
  5492                           ;functions.c: 599: cnt = 0;
  5493  0785  1683               	bsf	3,5	;RP0=1, select bank1
  5494  0786  1303               	bcf	3,6	;RP1=0, select bank1
  5495  0787  01B1               	clrf	FindChannel@cnt^(0+128)
  5496  0788  01B2               	clrf	(FindChannel@cnt+1)^(0+128)
  5497  0789                     l3734:	
  5498                           ;functions.c: 600: while(cnt < 5)
  5499                           
  5500  0789  1683               	bsf	3,5	;RP0=1, select bank1
  5501  078A  1303               	bcf	3,6	;RP1=0, select bank1
  5502  078B  0832               	movf	(FindChannel@cnt+1)^(0+128),w
  5503  078C  3A80               	xorlw	128
  5504  078D  00FF               	movwf	127
  5505  078E  3080               	movlw	128
  5506  078F  027F               	subwf	127,w
  5507  0790  1D03               	skipz
  5508  0791  2F94               	goto	u2765
  5509  0792  3005               	movlw	5
  5510  0793  0231               	subwf	FindChannel@cnt^(0+128),w
  5511  0794                     u2765:	
  5512  0794  1803               	btfsc	3,0
  5513  0795  2FC1               	goto	l3736
  5514                           
  5515                           ;functions.c: 601: {
  5516                           ;functions.c: 603: if((RegisterRead(0x0E) & 0b00000010) != 0)
  5517  0796  300E               	movlw	14
  5518  0797  160A  118A  2665  120A  118A  	fcall	_RegisterRead
  5519  079C  3902               	andlw	2
  5520  079D  1903               	btfsc	3,2
  5521  079E  2FB1               	goto	l3732
  5522                           
  5523                           ;functions.c: 604: {
  5524                           ;functions.c: 605: bChannelFound = 1;
  5525  079F  1283               	bcf	3,5	;RP0=0, select bank0
  5526  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  5527  07A1  01E0               	clrf	_bChannelFound
  5528  07A2  0AE0               	incf	_bChannelFound,f
  5529                           
  5530                           ;functions.c: 606: channelFound = i;
  5531  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  5532  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  5533  07A5  0834               	movf	(FindChannel@i+1)^(0+128),w
  5534  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  5535  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  5536  07A8  00D3               	movwf	_channelFound+1
  5537  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  5538  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  5539  07AB  0833               	movf	FindChannel@i^(0+128),w
  5540  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  5541  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  5542  07AE  00D2               	movwf	_channelFound
  5543                           
  5544                           ;functions.c: 607: return 1;
  5545  07AF  3001               	movlw	1
  5546  07B0  0008               	return
  5547  07B1                     l3732:	
  5548                           
  5549                           ;functions.c: 608: }
  5550                           ;functions.c: 609: cnt++;
  5551  07B1  3001               	movlw	1
  5552  07B2  1683               	bsf	3,5	;RP0=1, select bank1
  5553  07B3  1303               	bcf	3,6	;RP1=0, select bank1
  5554  07B4  07B1               	addwf	FindChannel@cnt^(0+128),f
  5555  07B5  1803               	skipnc
  5556  07B6  0AB2               	incf	(FindChannel@cnt+1)^(0+128),f
  5557  07B7  3000               	movlw	0
  5558  07B8  07B2               	addwf	(FindChannel@cnt+1)^(0+128),f
  5559                           
  5560                           ;functions.c: 610: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  5561  07B9  30F9               	movlw	249
  5562  07BA  00AE               	movwf	??_FindChannel^(0+128)
  5563  07BB                     u3847:	
  5564  07BB  0000               	nop
  5565  07BC  0BAE               	decfsz	??_FindChannel^(0+128),f
  5566  07BD  2FBB               	goto	u3847
  5567  07BE  2FBF               	nop2	;nop
  5568  07BF  0000               	nop
  5569  07C0  2F89               	goto	l3734
  5570  07C1                     l3736:	
  5571  07C1  3001               	movlw	1
  5572  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  5573  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  5574  07C4  07B3               	addwf	FindChannel@i^(0+128),f
  5575  07C5  1803               	skipnc
  5576  07C6  0AB4               	incf	(FindChannel@i+1)^(0+128),f
  5577  07C7  3000               	movlw	0
  5578  07C8  07B4               	addwf	(FindChannel@i+1)^(0+128),f
  5579  07C9  0834               	movf	(FindChannel@i+1)^(0+128),w
  5580  07CA  3A80               	xorlw	128
  5581  07CB  00FF               	movwf	127
  5582  07CC  3080               	movlw	128
  5583  07CD  027F               	subwf	127,w
  5584  07CE  1D03               	skipz
  5585  07CF  2FD2               	goto	u2775
  5586  07D0  300D               	movlw	13
  5587  07D1  0233               	subwf	FindChannel@i^(0+128),w
  5588  07D2                     u2775:	
  5589  07D2  1C03               	skipc
  5590  07D3  2EFB               	goto	l3716
  5591  07D4                     l3740:	
  5592                           
  5593                           ;functions.c: 611: }
  5594                           ;functions.c: 614: }
  5595                           ;functions.c: 615: return 0;
  5596  07D4  3000               	movlw	0
  5597  07D5  0008               	return
  5598  07D6                     __end_of_FindChannel:	
  5599                           
  5600                           	psect	text26
  5601  0AAA                     __ptext26:	
  5602 ;; *************** function _SetRFMode *****************
  5603 ;; Defined at:
  5604 ;;		line 637 in file "functions.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  mode            1    wreg     unsigned char 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  mode            1   12[BANK1 ] unsigned char 
  5609 ;;  mcparam0_rea    1   13[BANK1 ] unsigned char 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5619 ;;      Params:         0       0       0       0       0
  5620 ;;      Locals:         0       0       2       0       0
  5621 ;;      Temps:          0       0       1       0       0
  5622 ;;      Totals:         0       0       3       0       0
  5623 ;;Total ram usage:        3 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    9
  5626 ;; This function calls:
  5627 ;;		_RegisterRead
  5628 ;;		_RegisterSet
  5629 ;; This function is called by:
  5630 ;;		_TransiverToReceive
  5631 ;;		_TransiverReadFIFO
  5632 ;;		_TransmittPacket
  5633 ;;		_TransiverInit
  5634 ;;		_FindChannel
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           
  5639                           ;psect for function _SetRFMode
  5640  0AAA                     _SetRFMode:	
  5641                           
  5642                           ;incstack = 0
  5643 ;; hardware stack exceeded
  5644                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5645                           ;SetRFMode@mode stored from wreg
  5646  0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  5647  0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  5648  0AAC  00AC               	movwf	SetRFMode@mode^(0+128)
  5649                           
  5650                           ;functions.c: 639: RA4 = 0;
  5651  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  5652  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  5653  0AAF  1205               	bcf	5,4	;volatile
  5654                           
  5655                           ;functions.c: 640: BYTE mcparam0_read;
  5656                           ;functions.c: 641: mcparam0_read = RegisterRead(0);
  5657  0AB0  3000               	movlw	0
  5658  0AB1  160A  118A  2665  120A  158A  	fcall	_RegisterRead
  5659  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  5660  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  5661  0AB8  00AB               	movwf	??_SetRFMode^(0+128)
  5662  0AB9  082B               	movf	??_SetRFMode^(0+128),w
  5663  0ABA  00AD               	movwf	SetRFMode@mcparam0_read^(0+128)
  5664                           
  5665                           ;functions.c: 642: switch (mode) {
  5666  0ABB  2B04               	goto	l3690
  5667  0ABC                     l3678:	
  5668                           ;functions.c: 643: case 0x80:
  5669                           
  5670                           
  5671                           ;functions.c: 644: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  5672  0ABC  082D               	movf	SetRFMode@mcparam0_read^(0+128),w
  5673  0ABD  391F               	andlw	31
  5674  0ABE  3880               	iorlw	128
  5675  0ABF  00AB               	movwf	??_SetRFMode^(0+128)
  5676  0AC0  082B               	movf	??_SetRFMode^(0+128),w
  5677  0AC1  00A7               	movwf	RegisterSet@value^(0+128)
  5678  0AC2  3000               	movlw	0
  5679  0AC3  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5680                           
  5681                           ;functions.c: 646: break;
  5682  0AC8  2B17               	goto	l434
  5683  0AC9                     l3680:	
  5684                           ;functions.c: 647: case 0x60:
  5685                           
  5686                           
  5687                           ;functions.c: 648: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  5688  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  5689  0ACA  1303               	bcf	3,6	;RP1=0, select bank1
  5690  0ACB  082D               	movf	SetRFMode@mcparam0_read^(0+128),w
  5691  0ACC  391F               	andlw	31
  5692  0ACD  3860               	iorlw	96
  5693  0ACE  00AB               	movwf	??_SetRFMode^(0+128)
  5694  0ACF  082B               	movf	??_SetRFMode^(0+128),w
  5695  0AD0  00A7               	movwf	RegisterSet@value^(0+128)
  5696  0AD1  3000               	movlw	0
  5697  0AD2  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5698                           
  5699                           ;functions.c: 650: break;
  5700  0AD7  2B17               	goto	l434
  5701  0AD8                     l3682:	
  5702                           ;functions.c: 651: case 0x40:
  5703                           
  5704                           
  5705                           ;functions.c: 652: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  5706  0AD8  1683               	bsf	3,5	;RP0=1, select bank1
  5707  0AD9  1303               	bcf	3,6	;RP1=0, select bank1
  5708  0ADA  082D               	movf	SetRFMode@mcparam0_read^(0+128),w
  5709  0ADB  391F               	andlw	31
  5710  0ADC  3840               	iorlw	64
  5711  0ADD  00AB               	movwf	??_SetRFMode^(0+128)
  5712  0ADE  082B               	movf	??_SetRFMode^(0+128),w
  5713  0ADF  00A7               	movwf	RegisterSet@value^(0+128)
  5714  0AE0  3000               	movlw	0
  5715  0AE1  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5716                           
  5717                           ;functions.c: 654: break;
  5718  0AE6  2B17               	goto	l434
  5719  0AE7                     l3684:	
  5720                           ;functions.c: 655: case 0x20:
  5721                           
  5722                           
  5723                           ;functions.c: 656: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  5724  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  5725  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  5726  0AE9  082D               	movf	SetRFMode@mcparam0_read^(0+128),w
  5727  0AEA  391F               	andlw	31
  5728  0AEB  3820               	iorlw	32
  5729  0AEC  00AB               	movwf	??_SetRFMode^(0+128)
  5730  0AED  082B               	movf	??_SetRFMode^(0+128),w
  5731  0AEE  00A7               	movwf	RegisterSet@value^(0+128)
  5732  0AEF  3000               	movlw	0
  5733  0AF0  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5734                           
  5735                           ;functions.c: 658: break;
  5736  0AF5  2B17               	goto	l434
  5737  0AF6                     l3686:	
  5738                           ;functions.c: 659: case 0x00:
  5739                           
  5740                           
  5741                           ;functions.c: 660: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  5742  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  5743  0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  5744  0AF8  082D               	movf	SetRFMode@mcparam0_read^(0+128),w
  5745  0AF9  391F               	andlw	31
  5746  0AFA  00AB               	movwf	??_SetRFMode^(0+128)
  5747  0AFB  082B               	movf	??_SetRFMode^(0+128),w
  5748  0AFC  00A7               	movwf	RegisterSet@value^(0+128)
  5749  0AFD  3000               	movlw	0
  5750  0AFE  160A  118A  259A  120A  158A  	fcall	_RegisterSet
  5751                           
  5752                           ;functions.c: 663: }
  5753                           
  5754                           ;functions.c: 662: break;
  5755  0B03  2B17               	goto	l434
  5756  0B04                     l3690:	
  5757  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  5758  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  5759  0B06  082C               	movf	SetRFMode@mode^(0+128),w
  5760                           
  5761                           ; Switch size 1, requested type "space"
  5762                           ; Number of cases is 5, Range of values is 0 to 128
  5763                           ; switch strategies available:
  5764                           ; Name         Instructions Cycles
  5765                           ; simple_byte           16     9 (average)
  5766                           ; jumptable            260     6 (fixed)
  5767                           ;	Chosen strategy is simple_byte
  5768  0B07  3A00               	xorlw	0	; case 0
  5769  0B08  1903               	skipnz
  5770  0B09  2AF6               	goto	l3686
  5771  0B0A  3A20               	xorlw	32	; case 32
  5772  0B0B  1903               	skipnz
  5773  0B0C  2AE7               	goto	l3684
  5774  0B0D  3A60               	xorlw	96	; case 64
  5775  0B0E  1903               	skipnz
  5776  0B0F  2AD8               	goto	l3682
  5777  0B10  3A20               	xorlw	32	; case 96
  5778  0B11  1903               	skipnz
  5779  0B12  2AC9               	goto	l3680
  5780  0B13  3AE0               	xorlw	224	; case 128
  5781  0B14  1903               	skipnz
  5782  0B15  2ABC               	goto	l3678
  5783  0B16  2B17               	goto	l434
  5784  0B17                     l434:	
  5785                           
  5786                           ;functions.c: 664: RA4 = 1;
  5787  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0B19  1605               	bsf	5,4	;volatile
  5790  0B1A  0008               	return
  5791  0B1B                     __end_of_SetRFMode:	
  5792                           
  5793                           	psect	text27
  5794  159A                     __ptext27:	
  5795 ;; *************** function _RegisterSet *****************
  5796 ;; Defined at:
  5797 ;;		line 746 in file "functions.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  adress          1    wreg     unsigned char 
  5800 ;;  value           1    7[BANK1 ] unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  adress          1   10[BANK1 ] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0, pclath, cstack
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         0       0       1       0       0
  5813 ;;      Locals:         0       0       1       0       0
  5814 ;;      Temps:          0       0       2       0       0
  5815 ;;      Totals:         0       0       4       0       0
  5816 ;;Total ram usage:        4 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    7
  5819 ;; This function calls:
  5820 ;;		_WriteSPI
  5821 ;; This function is called by:
  5822 ;;		_TransiverToReceive
  5823 ;;		_TransmittPacket
  5824 ;;		_TransiverInit
  5825 ;;		_FindChannel
  5826 ;;		_SetRFMode
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           
  5831                           ;psect for function _RegisterSet
  5832  159A                     _RegisterSet:	
  5833                           
  5834                           ;incstack = 0
  5835 ;; hardware stack exceeded
  5836                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  5837                           ;RegisterSet@adress stored from wreg
  5838  159A  1683               	bsf	3,5	;RP0=1, select bank1
  5839  159B  1303               	bcf	3,6	;RP1=0, select bank1
  5840  159C  00AA               	movwf	RegisterSet@adress^(0+128)
  5841                           
  5842                           ;functions.c: 748: RA4 = 0;
  5843  159D  1283               	bcf	3,5	;RP0=0, select bank0
  5844  159E  1303               	bcf	3,6	;RP1=0, select bank0
  5845  159F  1205               	bcf	5,4	;volatile
  5846                           
  5847                           ;functions.c: 749: adress = (adress<<1);
  5848  15A0  1683               	bsf	3,5	;RP0=1, select bank1
  5849  15A1  1303               	bcf	3,6	;RP1=0, select bank1
  5850  15A2  082A               	movf	RegisterSet@adress^(0+128),w
  5851  15A3  00A8               	movwf	??_RegisterSet^(0+128)
  5852  15A4  0728               	addwf	??_RegisterSet^(0+128),w
  5853  15A5  00A9               	movwf	(??_RegisterSet+1)^(0+128)
  5854  15A6  0829               	movf	(??_RegisterSet+1)^(0+128),w
  5855  15A7  00AA               	movwf	RegisterSet@adress^(0+128)
  5856                           
  5857                           ;functions.c: 750: WriteSPI(adress);
  5858  15A8  082A               	movf	RegisterSet@adress^(0+128),w
  5859  15A9  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  5860                           
  5861                           ;functions.c: 751: WriteSPI(value);
  5862  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  5863  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  5864  15B0  0827               	movf	RegisterSet@value^(0+128),w
  5865  15B1  160A  118A  2517   	fcall	_WriteSPI
  5866                           
  5867                           ;functions.c: 752: RA4 = 1;
  5868  15B4  1283               	bcf	3,5	;RP0=0, select bank0
  5869  15B5  1303               	bcf	3,6	;RP1=0, select bank0
  5870  15B6  1605               	bsf	5,4	;volatile
  5871  15B7  0008               	return
  5872  15B8                     __end_of_RegisterSet:	
  5873                           
  5874                           	psect	text28
  5875  1665                     __ptext28:	
  5876 ;; *************** function _RegisterRead *****************
  5877 ;; Defined at:
  5878 ;;		line 716 in file "functions.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  adress          1    wreg     unsigned char 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  adress          1    6[BANK1 ] unsigned char 
  5883 ;;  value           1    5[BANK1 ] unsigned char 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      unsigned char 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         0       0       0       0       0
  5894 ;;      Locals:         0       0       2       0       0
  5895 ;;      Temps:          0       0       2       0       0
  5896 ;;      Totals:         0       0       4       0       0
  5897 ;;Total ram usage:        4 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    8
  5900 ;; This function calls:
  5901 ;;		_ReadSPI
  5902 ;;		_WriteSPI
  5903 ;; This function is called by:
  5904 ;;		_TransiverToReceive
  5905 ;;		_TransmittPacket
  5906 ;;		_TransiverInit
  5907 ;;		_FindChannel
  5908 ;;		_SetRFMode
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _RegisterRead
  5914  1665                     _RegisterRead:	
  5915                           
  5916                           ;incstack = 0
  5917 ;; hardware stack exceeded
  5918                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  5919                           ;RegisterRead@adress stored from wreg
  5920  1665  1683               	bsf	3,5	;RP0=1, select bank1
  5921  1666  1303               	bcf	3,6	;RP1=0, select bank1
  5922  1667  00A6               	movwf	RegisterRead@adress^(0+128)
  5923                           
  5924                           ;functions.c: 718: BYTE value;
  5925                           ;functions.c: 719: RA4 = 0;
  5926  1668  1283               	bcf	3,5	;RP0=0, select bank0
  5927  1669  1303               	bcf	3,6	;RP1=0, select bank0
  5928  166A  1205               	bcf	5,4	;volatile
  5929                           
  5930                           ;functions.c: 720: adress = ((adress<<1)|0x40);
  5931  166B  1683               	bsf	3,5	;RP0=1, select bank1
  5932  166C  1303               	bcf	3,6	;RP1=0, select bank1
  5933  166D  0826               	movf	RegisterRead@adress^(0+128),w
  5934  166E  00A3               	movwf	??_RegisterRead^(0+128)
  5935  166F  0723               	addwf	??_RegisterRead^(0+128),w
  5936  1670  3840               	iorlw	64
  5937  1671  00A4               	movwf	(??_RegisterRead+1)^(0+128)
  5938  1672  0824               	movf	(??_RegisterRead+1)^(0+128),w
  5939  1673  00A6               	movwf	RegisterRead@adress^(0+128)
  5940                           
  5941                           ;functions.c: 721: WriteSPI(adress);
  5942  1674  0826               	movf	RegisterRead@adress^(0+128),w
  5943  1675  160A  118A  2517  160A  118A  	fcall	_WriteSPI
  5944                           
  5945                           ;functions.c: 722: value = ReadSPI();
  5946  167A  160A  118A  2458   	fcall	_ReadSPI
  5947  167D  1683               	bsf	3,5	;RP0=1, select bank1
  5948  167E  1303               	bcf	3,6	;RP1=0, select bank1
  5949  167F  00A3               	movwf	??_RegisterRead^(0+128)
  5950  1680  0823               	movf	??_RegisterRead^(0+128),w
  5951  1681  00A5               	movwf	RegisterRead@value^(0+128)
  5952                           
  5953                           ;functions.c: 723: RA4 = 1;
  5954  1682  1283               	bcf	3,5	;RP0=0, select bank0
  5955  1683  1303               	bcf	3,6	;RP1=0, select bank0
  5956  1684  1605               	bsf	5,4	;volatile
  5957                           
  5958                           ;functions.c: 724: return value;
  5959  1685  1683               	bsf	3,5	;RP0=1, select bank1
  5960  1686  1303               	bcf	3,6	;RP1=0, select bank1
  5961  1687  0825               	movf	RegisterRead@value^(0+128),w
  5962  1688  0008               	return
  5963  1689                     __end_of_RegisterRead:	
  5964                           
  5965                           	psect	text29
  5966  147C                     __ptext29:	
  5967 ;; *************** function _Mode_2 *****************
  5968 ;; Defined at:
  5969 ;;		line 295 in file "functions.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;		None
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;		None
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5983 ;;      Params:         0       0       0       0       0
  5984 ;;      Locals:         0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0
  5986 ;;      Totals:         0       0       0       0       0
  5987 ;;Total ram usage:        0 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:   10
  5990 ;; This function calls:
  5991 ;;		_LightWithSensController
  5992 ;; This function is called by:
  5993 ;;		_main
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _Mode_2
  5999  147C                     _Mode_2:	
  6000                           
  6001                           ;functions.c: 297: LightWithSensController();
  6002                           
  6003                           ;incstack = 0
  6004 ;; hardware stack exceeded
  6005                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6006  147C  120A  158A  20E0  160A  118A  	fcall	_LightWithSensController
  6007                           
  6008                           ;functions.c: 298: if(RC2)
  6009  1481  1283               	bcf	3,5	;RP0=0, select bank0
  6010  1482  1303               	bcf	3,6	;RP1=0, select bank0
  6011  1483  1D07               	btfss	7,2	;volatile
  6012  1484  2C87               	goto	l361
  6013                           
  6014                           ;functions.c: 299: RC1 = 1;
  6015  1485  1487               	bsf	7,1	;volatile
  6016  1486  0008               	return
  6017  1487                     l361:	
  6018                           
  6019                           ;functions.c: 300: else
  6020                           ;functions.c: 301: RC1 = 0;
  6021  1487  1087               	bcf	7,1	;volatile
  6022  1488  0008               	return
  6023  1489                     __end_of_Mode_2:	
  6024                           
  6025                           	psect	text30
  6026  15B8                     __ptext30:	
  6027 ;; *************** function _Mode_1 *****************
  6028 ;; Defined at:
  6029 ;;		line 281 in file "functions.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		wreg, status,2, status,0, pclath, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6043 ;;      Params:         0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    9
  6050 ;; This function calls:
  6051 ;;		_DarknessCheck
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           
  6058                           ;psect for function _Mode_1
  6059  15B8                     _Mode_1:	
  6060                           
  6061                           ;functions.c: 284: if((intSecondCounter == 30)&&(!RC2))
  6062                           
  6063                           ;incstack = 0
  6064 ;; hardware stack exceeded
  6065                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  6066  15B8  301E               	movlw	30
  6067  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  6068  15BA  1303               	bcf	3,6	;RP1=0, select bank0
  6069  15BB  065E               	xorwf	_intSecondCounter,w
  6070  15BC  045F               	iorwf	_intSecondCounter+1,w
  6071  15BD  1903               	btfsc	3,2
  6072  15BE  1907               	btfsc	7,2	;volatile
  6073  15BF  2DC5               	goto	l4322
  6074                           
  6075                           ;functions.c: 285: DarknessCheck();
  6076  15C0  120A  118A  27D6  160A  118A  	fcall	_DarknessCheck
  6077  15C5                     l4322:	
  6078                           
  6079                           ;functions.c: 286: if((intBlinkCycle == 1)&&(bDark == 1))
  6080  15C5  1283               	bcf	3,5	;RP0=0, select bank0
  6081  15C6  1303               	bcf	3,6	;RP1=0, select bank0
  6082  15C7  0356               	decf	_intBlinkCycle,w
  6083  15C8  0457               	iorwf	_intBlinkCycle+1,w
  6084  15C9  1D03               	btfss	3,2
  6085  15CA  2DD4               	goto	l356
  6086  15CB  1683               	bsf	3,5	;RP0=1, select bank1
  6087  15CC  1303               	bcf	3,6	;RP1=0, select bank1
  6088  15CD  0356               	decf	_bDark^(0+128),w
  6089  15CE  1D03               	btfss	3,2
  6090  15CF  2DD4               	goto	l356
  6091                           
  6092                           ;functions.c: 287: RC2 = 1;
  6093  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  6094  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  6095  15D2  1507               	bsf	7,2	;volatile
  6096  15D3  0008               	return
  6097  15D4                     l356:	
  6098                           
  6099                           ;functions.c: 288: else
  6100                           ;functions.c: 289: RC2 = 0;
  6101  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  6102  15D5  1107               	bcf	7,2	;volatile
  6103  15D6  0008               	return
  6104  15D7                     __end_of_Mode_1:	
  6105                           
  6106                           	psect	text31
  6107  144C                     __ptext31:	
  6108 ;; *************** function _Mode_0 *****************
  6109 ;; Defined at:
  6110 ;;		line 273 in file "functions.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6124 ;;      Params:         0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0
  6127 ;;      Totals:         0       0       0       0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:   10
  6131 ;; This function calls:
  6132 ;;		_LightWithSensController
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _Mode_0
  6140  144C                     _Mode_0:	
  6141                           
  6142                           ;functions.c: 275: LightWithSensController();
  6143                           
  6144                           ;incstack = 0
  6145 ;; hardware stack exceeded
  6146                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6147  144C  120A  158A  20E0   	fcall	_LightWithSensController
  6148  144F  0008               	return
  6149  1450                     __end_of_Mode_0:	
  6150                           
  6151                           	psect	text32
  6152  08E0                     __ptext32:	
  6153 ;; *************** function _LightWithSensController *****************
  6154 ;; Defined at:
  6155 ;;		line 339 in file "functions.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6169 ;;      Params:         0       0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    9
  6176 ;; This function calls:
  6177 ;;		_DarknessCheck
  6178 ;;		_timerFunction
  6179 ;; This function is called by:
  6180 ;;		_Mode_0
  6181 ;;		_Mode_2
  6182 ;;		_Mode_4
  6183 ;;		_Mode_5
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function _LightWithSensController
  6189  08E0                     _LightWithSensController:	
  6190                           
  6191                           ;functions.c: 343: if((intSecondCounter == 30)&&(!RC2))
  6192                           
  6193                           ;incstack = 0
  6194 ;; hardware stack exceeded
  6195                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6196  08E0  301E               	movlw	30
  6197  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  6198  08E2  1303               	bcf	3,6	;RP1=0, select bank0
  6199  08E3  065E               	xorwf	_intSecondCounter,w
  6200  08E4  045F               	iorwf	_intSecondCounter+1,w
  6201  08E5  1903               	btfsc	3,2
  6202  08E6  1907               	btfsc	7,2	;volatile
  6203  08E7  28ED               	goto	l4142
  6204                           
  6205                           ;functions.c: 344: DarknessCheck();
  6206  08E8  120A  118A  27D6  120A  158A  	fcall	_DarknessCheck
  6207  08ED                     l4142:	
  6208                           
  6209                           ;functions.c: 348: if((bDark == 1)&&(RA1)&&(!RC2))
  6210  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  6211  08EE  1303               	bcf	3,6	;RP1=0, select bank1
  6212  08EF  0356               	decf	_bDark^(0+128),w
  6213  08F0  1D03               	btfss	3,2
  6214  08F1  2906               	goto	l4152
  6215  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  6216  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  6217  08F4  1885               	btfsc	5,1	;volatile
  6218  08F5  1907               	btfsc	7,2	;volatile
  6219  08F6  2906               	goto	l4152
  6220                           
  6221                           ;functions.c: 349: {
  6222                           ;functions.c: 351: RC2 = 1;
  6223  08F7  1507               	bsf	7,2	;volatile
  6224                           
  6225                           ;functions.c: 353: timerFunction(0,120);
  6226  08F8  3000               	movlw	0
  6227  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  6228  08FA  1303               	bcf	3,6	;RP1=0, select bank1
  6229  08FB  00A0               	movwf	timerFunction@intTimerNumber^(0+128)
  6230  08FC  00A1               	movwf	(timerFunction@intTimerNumber+1)^(0+128)
  6231  08FD  3078               	movlw	120
  6232  08FE  00A2               	movwf	timerFunction@intSetSeconds^(0+128)
  6233  08FF  3000               	movlw	0
  6234  0900  00A3               	movwf	(timerFunction@intSetSeconds^(0+128)+1)
  6235  0901  160A  118A  24B8  120A  158A  	fcall	_timerFunction
  6236  0906                     l4152:	
  6237                           
  6238                           ;functions.c: 354: }
  6239                           ;functions.c: 357: if(bTimerComplete[0])
  6240  0906  1283               	bcf	3,5	;RP0=0, select bank0
  6241  0907  1303               	bcf	3,6	;RP1=0, select bank0
  6242  0908  084D               	movf	_bTimerComplete,w
  6243  0909  1903               	btfsc	3,2
  6244  090A  0008               	return
  6245                           
  6246                           ;functions.c: 358: {
  6247                           ;functions.c: 359: DarknessCheck();
  6248  090B  120A  118A  27D6  120A  158A  	fcall	_DarknessCheck
  6249                           
  6250                           ;functions.c: 360: if((bDark)&&(RA1))
  6251  0910  1683               	bsf	3,5	;RP0=1, select bank1
  6252  0911  1303               	bcf	3,6	;RP1=0, select bank1
  6253  0912  0856               	movf	_bDark^(0+128),w
  6254  0913  1903               	btfsc	3,2
  6255  0914  2926               	goto	l380
  6256  0915  1283               	bcf	3,5	;RP0=0, select bank0
  6257  0916  1303               	bcf	3,6	;RP1=0, select bank0
  6258  0917  1C85               	btfss	5,1	;volatile
  6259  0918  2926               	goto	l380
  6260                           
  6261                           ;functions.c: 361: {
  6262                           ;functions.c: 362: timerFunction(0,120);
  6263  0919  3000               	movlw	0
  6264  091A  1683               	bsf	3,5	;RP0=1, select bank1
  6265  091B  1303               	bcf	3,6	;RP1=0, select bank1
  6266  091C  00A0               	movwf	timerFunction@intTimerNumber^(0+128)
  6267  091D  00A1               	movwf	(timerFunction@intTimerNumber+1)^(0+128)
  6268  091E  3078               	movlw	120
  6269  091F  00A2               	movwf	timerFunction@intSetSeconds^(0+128)
  6270  0920  3000               	movlw	0
  6271  0921  00A3               	movwf	(timerFunction@intSetSeconds^(0+128)+1)
  6272  0922  160A  118A  24B8   	fcall	_timerFunction
  6273                           
  6274                           ;functions.c: 363: }
  6275  0925  0008               	return
  6276  0926                     l380:	
  6277                           
  6278                           ;functions.c: 364: else
  6279                           ;functions.c: 365: RC2 = 0;
  6280  0926  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0927  1107               	bcf	7,2	;volatile
  6282  0928  0008               	return
  6283  0929                     __end_of_LightWithSensController:	
  6284                           
  6285                           	psect	text33
  6286  14B8                     __ptext33:	
  6287 ;; *************** function _timerFunction *****************
  6288 ;; Defined at:
  6289 ;;		line 390 in file "functions.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  intTimerNumb    2    0[BANK1 ] int 
  6292 ;;  intSetSecond    2    2[BANK1 ] int 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      unsigned char 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6304 ;;      Params:         0       0       4       0       0
  6305 ;;      Locals:         0       0       0       0       0
  6306 ;;      Temps:          0       0       1       0       0
  6307 ;;      Totals:         0       0       5       0       0
  6308 ;;Total ram usage:        5 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    6
  6311 ;; This function calls:
  6312 ;;		Nothing
  6313 ;; This function is called by:
  6314 ;;		_TransiverToReceive
  6315 ;;		_TransiverReadFIFO
  6316 ;;		_TransmittPacket
  6317 ;;		_LightWithSensController
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _timerFunction
  6323  14B8                     _timerFunction:	
  6324                           
  6325                           ;functions.c: 392: intClockTimer[intTimerNumber] = intSetSeconds;
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  6329  14B8  1683               	bsf	3,5	;RP0=1, select bank1
  6330  14B9  1303               	bcf	3,6	;RP1=0, select bank1
  6331  14BA  0820               	movf	timerFunction@intTimerNumber^(0+128),w
  6332  14BB  00A4               	movwf	??_timerFunction^(0+128)
  6333  14BC  0724               	addwf	??_timerFunction^(0+128),w
  6334  14BD  3E43               	addlw	(low (_intClockTimer| 0))& (0+255)
  6335  14BE  0084               	movwf	4
  6336  14BF  0822               	movf	timerFunction@intSetSeconds^(0+128),w
  6337  14C0  1383               	bcf	3,7	;select IRP bank0
  6338  14C1  0080               	movwf	0
  6339  14C2  0A84               	incf	4,f
  6340  14C3  0823               	movf	(timerFunction@intSetSeconds+1)^(0+128),w
  6341  14C4  0080               	movwf	0
  6342                           
  6343                           ;functions.c: 393: bTimerComplete[intTimerNumber] = 0;
  6344  14C5  0820               	movf	timerFunction@intTimerNumber^(0+128),w
  6345  14C6  3E4D               	addlw	(low (_bTimerComplete| 0))& (0+255)
  6346  14C7  0084               	movwf	4
  6347  14C8  0180               	clrf	0
  6348  14C9  0008               	return
  6349  14CA                     __end_of_timerFunction:	
  6350                           ;functions.c: 394: return 1;
  6351                           ;	Return value of _timerFunction is never used
  6352                           
  6353                           
  6354                           	psect	text34
  6355  07D6                     __ptext34:	
  6356 ;; *************** function _DarknessCheck *****************
  6357 ;; Defined at:
  6358 ;;		line 932 in file "functions.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  darknessValu    1    9[BANK1 ] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0, pclath, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6372 ;;      Params:         0       0       0       0       0
  6373 ;;      Locals:         0       0       1       0       0
  6374 ;;      Temps:          0       0       1       0       0
  6375 ;;      Totals:         0       0       2       0       0
  6376 ;;Total ram usage:        2 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    8
  6379 ;; This function calls:
  6380 ;;		_AnalogValue
  6381 ;;		_eeprom_read
  6382 ;; This function is called by:
  6383 ;;		_ReceivedPacketHandler
  6384 ;;		_Mode_1
  6385 ;;		_LightWithSensController
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _DarknessCheck
  6391  07D6                     _DarknessCheck:	
  6392                           
  6393                           ;functions.c: 934: unsigned char darknessValue;
  6394                           ;functions.c: 937: if(bValueFromPot == TRUE)
  6395                           
  6396                           ;incstack = 0
  6397 ;; hardware stack exceeded
  6398                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  6399  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  6400  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  6401  07D8  0363               	decf	_bValueFromPot,w
  6402  07D9  1D03               	btfss	3,2
  6403  07DA  2FE2               	goto	l3972
  6404                           
  6405                           ;functions.c: 938: darknessValue= AnalogValue(3);
  6406  07DB  3003               	movlw	3
  6407  07DC  160A  118A  27C7  120A  118A  	fcall	_AnalogValue
  6408  07E1  2FE8               	goto	L3
  6409  07E2                     l3972:	
  6410                           
  6411                           ;functions.c: 939: else
  6412                           ;functions.c: 940: darknessValue=eeprom_read(0);
  6413  07E2  3000               	movlw	0
  6414  07E3  160A  118A  2641  120A  118A  	fcall	_eeprom_read
  6415  07E8                     L3:	
  6416  07E8  1683               	bsf	3,5	;RP0=1, select bank1
  6417  07E9  1303               	bcf	3,6	;RP1=0, select bank1
  6418  07EA  00A8               	movwf	??_DarknessCheck^(0+128)
  6419  07EB  0828               	movf	??_DarknessCheck^(0+128),w
  6420  07EC  00A9               	movwf	DarknessCheck@darknessValue^(0+128)
  6421                           
  6422                           ;functions.c: 942: if(AnalogValue(0)>darknessValue)
  6423  07ED  3000               	movlw	0
  6424  07EE  160A  118A  27C7  120A  118A  	fcall	_AnalogValue
  6425  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  6426  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  6427  07F5  0229               	subwf	DarknessCheck@darknessValue^(0+128),w
  6428  07F6  1803               	skipnc
  6429  07F7  2FFB               	goto	l3976
  6430                           
  6431                           ;functions.c: 943: bDark = 1;
  6432  07F8  01D6               	clrf	_bDark^(0+128)
  6433  07F9  0AD6               	incf	_bDark^(0+128),f
  6434  07FA  0008               	return
  6435  07FB                     l3976:	
  6436                           
  6437                           ;functions.c: 944: else
  6438                           ;functions.c: 945: bDark = 0;
  6439  07FB  01D6               	clrf	_bDark^(0+128)
  6440  07FC  0008               	return
  6441  07FD                     __end_of_DarknessCheck:	
  6442                           
  6443                           	psect	text35
  6444  1641                     __ptext35:	
  6445 ;; *************** function _eeprom_read *****************
  6446 ;; Defined at:
  6447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  addr            1    wreg     unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  addr            1    1[BANK1 ] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      unsigned char 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6461 ;;      Params:         0       0       0       0       0
  6462 ;;      Locals:         0       0       1       0       0
  6463 ;;      Temps:          0       0       1       0       0
  6464 ;;      Totals:         0       0       2       0       0
  6465 ;;Total ram usage:        2 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    6
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_ReceivedPacketHandler
  6472 ;;		_DarknessCheck
  6473 ;;		_ReadMemoryAdress
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _eeprom_read
  6479  1641                     _eeprom_read:	
  6480                           
  6481                           ;incstack = 0
  6482 ;; hardware stack exceeded
  6483                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  6484                           ;eeprom_read@addr stored from wreg
  6485  1641  1683               	bsf	3,5	;RP0=1, select bank1
  6486  1642  1303               	bcf	3,6	;RP1=0, select bank1
  6487  1643  00A1               	movwf	eeprom_read@addr^(0+128)
  6488  1644  2E47               	goto	l672
  6489  1645                     u2791:	
  6490  1645  1683               	bsf	3,5	;RP0=1, select bank1
  6491  1646  1303               	bcf	3,6	;RP1=0, select bank1
  6492  1647                     l672:	
  6493  1647  0064               	clrwdt	;# 
  6494  1648  1683               	bsf	3,5	;RP0=1, select bank3
  6495  1649  1703               	bsf	3,6	;RP1=1, select bank3
  6496  164A  188C               	btfsc	12,1	;volsfr
  6497  164B  2E45               	goto	u2791
  6498  164C  1683               	bsf	3,5	;RP0=1, select bank1
  6499  164D  1303               	bcf	3,6	;RP1=0, select bank1
  6500  164E  0821               	movf	eeprom_read@addr^(0+128),w
  6501  164F  1283               	bcf	3,5	;RP0=0, select bank2
  6502  1650  1703               	bsf	3,6	;RP1=1, select bank2
  6503  1651  008D               	movwf	13	;volatile
  6504  1652  303F               	movlw	63
  6505  1653  1683               	bsf	3,5	;RP0=1, select bank1
  6506  1654  1303               	bcf	3,6	;RP1=0, select bank1
  6507  1655  00A0               	movwf	??_eeprom_read^(0+128)
  6508  1656  0820               	movf	??_eeprom_read^(0+128),w
  6509  1657  1683               	bsf	3,5	;RP0=1, select bank3
  6510  1658  1703               	bsf	3,6	;RP1=1, select bank3
  6511  1659  058C               	andwf	12,f	;volsfr
  6512  165A  140C               	bsf	12,0	;volsfr
  6513  165B  1003               	clrc
  6514  165C  180C               	btfsc	12,0	;volsfr
  6515  165D  1403               	setc
  6516  165E  3000               	movlw	0
  6517  165F  1803               	skipnc
  6518  1660  3001               	movlw	1
  6519  1661  1283               	bcf	3,5	;RP0=0, select bank2
  6520  1662  1703               	bsf	3,6	;RP1=1, select bank2
  6521  1663  080C               	movf	12,w	;volatile
  6522  1664  0008               	return
  6523  1665                     __end_of_eeprom_read:	
  6524                           
  6525                           	psect	text36
  6526  17C7                     __ptext36:	
  6527 ;; *************** function _AnalogValue *****************
  6528 ;; Defined at:
  6529 ;;		line 902 in file "functions.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  channel         1    wreg     unsigned char 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  channel         1    7[BANK1 ] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      unsigned char 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         0       0       0       0       0
  6544 ;;      Locals:         0       0       1       0       0
  6545 ;;      Temps:          0       0       1       0       0
  6546 ;;      Totals:         0       0       2       0       0
  6547 ;;Total ram usage:        2 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    7
  6550 ;; This function calls:
  6551 ;;		_DelayDs
  6552 ;; This function is called by:
  6553 ;;		_ReceivedPacketHandler
  6554 ;;		_DarknessCheck
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           
  6559                           ;psect for function _AnalogValue
  6560  17C7                     _AnalogValue:	
  6561                           
  6562                           ;incstack = 0
  6563 ;; hardware stack exceeded
  6564                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  6565                           ;AnalogValue@channel stored from wreg
  6566  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  6567  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  6568  17C9  00A7               	movwf	AnalogValue@channel^(0+128)
  6569                           
  6570                           ;functions.c: 904: RC0 = 0;
  6571  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  6572  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  6573  17CC  1007               	bcf	7,0	;volatile
  6574                           
  6575                           ;functions.c: 905: ADCON0bits.CHS = channel;
  6576  17CD  1683               	bsf	3,5	;RP0=1, select bank1
  6577  17CE  1303               	bcf	3,6	;RP1=0, select bank1
  6578  17CF  0827               	movf	AnalogValue@channel^(0+128),w
  6579  17D0  00A6               	movwf	??_AnalogValue^(0+128)
  6580  17D1  0DA6               	rlf	??_AnalogValue^(0+128),f
  6581  17D2  0DA6               	rlf	??_AnalogValue^(0+128),f
  6582  17D3  1283               	bcf	3,5	;RP0=0, select bank0
  6583  17D4  1303               	bcf	3,6	;RP1=0, select bank0
  6584  17D5  081F               	movf	31,w	;volatile
  6585  17D6  1683               	bsf	3,5	;RP0=1, select bank1
  6586  17D7  1303               	bcf	3,6	;RP1=0, select bank1
  6587  17D8  0626               	xorwf	??_AnalogValue^(0+128),w
  6588  17D9  39C3               	andlw	-61
  6589  17DA  0626               	xorwf	??_AnalogValue^(0+128),w
  6590  17DB  1283               	bcf	3,5	;RP0=0, select bank0
  6591  17DC  1303               	bcf	3,6	;RP1=0, select bank0
  6592  17DD  009F               	movwf	31	;volatile
  6593                           
  6594                           ;functions.c: 906: ADCON0bits.ADON = 1;
  6595  17DE  141F               	bsf	31,0	;volatile
  6596                           
  6597                           ;functions.c: 907: DelayDs(1);
  6598  17DF  3001               	movlw	1
  6599  17E0  1683               	bsf	3,5	;RP0=1, select bank1
  6600  17E1  1303               	bcf	3,6	;RP1=0, select bank1
  6601  17E2  00A0               	movwf	DelayDs@cnt^(0+128)
  6602  17E3  3000               	movlw	0
  6603  17E4  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  6604  17E5  160A  118A  261D  160A  118A  	fcall	_DelayDs
  6605                           
  6606                           ;functions.c: 908: ADCON0bits.GO = 1;
  6607  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  6608  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  6609  17EC  149F               	bsf	31,1	;volatile
  6610                           
  6611                           ;functions.c: 909: DelayDs(1);
  6612  17ED  3001               	movlw	1
  6613  17EE  1683               	bsf	3,5	;RP0=1, select bank1
  6614  17EF  1303               	bcf	3,6	;RP1=0, select bank1
  6615  17F0  00A0               	movwf	DelayDs@cnt^(0+128)
  6616  17F1  3000               	movlw	0
  6617  17F2  00A1               	movwf	(DelayDs@cnt^(0+128)+1)
  6618  17F3  160A  118A  261D  160A  118A  	fcall	_DelayDs
  6619  17F8                     l477:	
  6620                           ;functions.c: 910: while(ADCON0bits.GO);
  6621                           
  6622  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  6623  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  6624  17FA  189F               	btfsc	31,1	;volatile
  6625  17FB  2FF8               	goto	l477
  6626                           
  6627                           ;functions.c: 911: ADCON0bits.ADON = 0;
  6628  17FC  101F               	bcf	31,0	;volatile
  6629                           
  6630                           ;functions.c: 912: RC0 = 1;
  6631  17FD  1407               	bsf	7,0	;volatile
  6632                           
  6633                           ;functions.c: 914: return ADRESH;
  6634  17FE  081E               	movf	30,w	;volatile
  6635  17FF  0008               	return
  6636  1800                     __end_of_AnalogValue:	
  6637                           
  6638                           	psect	text37
  6639  161D                     __ptext37:	
  6640 ;; *************** function _DelayDs *****************
  6641 ;; Defined at:
  6642 ;;		line 508 in file "functions.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  cnt             2    0[BANK1 ] int 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  i               2    4[BANK1 ] int 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         0       0       2       0       0
  6657 ;;      Locals:         0       0       2       0       0
  6658 ;;      Temps:          0       0       2       0       0
  6659 ;;      Totals:         0       0       6       0       0
  6660 ;;Total ram usage:        6 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    6
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_ReceivedPacketHandler
  6667 ;;		_Blink
  6668 ;;		_AnalogValue
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _DelayDs
  6674  161D                     _DelayDs:	
  6675                           
  6676                           ;functions.c: 509: int i;
  6677                           ;functions.c: 510: for(i=0;i<cnt;i++){
  6678                           
  6679                           ;incstack = 0
  6680 ;; hardware stack exceeded
  6681                           ; Regs used in _DelayDs: [wreg+status,2]
  6682  161D  1683               	bsf	3,5	;RP0=1, select bank1
  6683  161E  1303               	bcf	3,6	;RP1=0, select bank1
  6684  161F  01A4               	clrf	DelayDs@i^(0+128)
  6685  1620  01A5               	clrf	(DelayDs@i+1)^(0+128)
  6686  1621                     l404:	
  6687  1621  0825               	movf	(DelayDs@i+1)^(0+128),w
  6688  1622  3A80               	xorlw	128
  6689  1623  00A2               	movwf	??_DelayDs^(0+128)
  6690  1624  0821               	movf	(DelayDs@cnt+1)^(0+128),w
  6691  1625  3A80               	xorlw	128
  6692  1626  0222               	subwf	??_DelayDs^(0+128),w
  6693  1627  1D03               	skipz
  6694  1628  2E2B               	goto	u2785
  6695  1629  0820               	movf	DelayDs@cnt^(0+128),w
  6696  162A  0224               	subwf	DelayDs@i^(0+128),w
  6697  162B                     u2785:	
  6698  162B  1803               	btfsc	3,0
  6699  162C  0008               	return
  6700                           
  6701                           ;functions.c: 511: _delay((unsigned long)((100)*(4000000/4000.0)));
  6702  162D  3082               	movlw	130
  6703  162E  1683               	bsf	3,5	;RP0=1, select bank1
  6704  162F  1303               	bcf	3,6	;RP1=0, select bank1
  6705  1630  00A3               	movwf	(??_DelayDs^(0+128)+1)
  6706  1631  30DD               	movlw	221
  6707  1632  00A2               	movwf	??_DelayDs^(0+128)
  6708  1633                     u3857:	
  6709  1633  0BA2               	decfsz	??_DelayDs^(0+128),f
  6710  1634  2E33               	goto	u3857
  6711  1635  0BA3               	decfsz	(??_DelayDs^(0+128)+1),f
  6712  1636  2E33               	goto	u3857
  6713  1637  2E38               	nop2
  6714  1638  3001               	movlw	1
  6715  1639  1683               	bsf	3,5	;RP0=1, select bank1
  6716  163A  1303               	bcf	3,6	;RP1=0, select bank1
  6717  163B  07A4               	addwf	DelayDs@i^(0+128),f
  6718  163C  1803               	skipnc
  6719  163D  0AA5               	incf	(DelayDs@i+1)^(0+128),f
  6720  163E  3000               	movlw	0
  6721  163F  07A5               	addwf	(DelayDs@i+1)^(0+128),f
  6722  1640  2E21               	goto	l404
  6723  1641                     __end_of_DelayDs:	
  6724                           
  6725                           	psect	text38
  6726  0C13                     __ptext38:	
  6727 ;; *************** function _ClockInit *****************
  6728 ;; Defined at:
  6729 ;;		line 6 in file "MCP79510.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  cnt             1    4[BANK1 ] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, status,2, status,0, pclath, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6743 ;;      Params:         0       0       0       0       0
  6744 ;;      Locals:         0       0       1       0       0
  6745 ;;      Temps:          0       0       1       0       0
  6746 ;;      Totals:         0       0       2       0       0
  6747 ;;Total ram usage:        2 bytes
  6748 ;; Hardware stack levels used:    1
  6749 ;; Hardware stack levels required when called:    8
  6750 ;; This function calls:
  6751 ;;		_ReadSPI
  6752 ;;		_WriteSPI
  6753 ;; This function is called by:
  6754 ;;		_main
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           
  6759                           ;psect for function _ClockInit
  6760  0C13                     _ClockInit:	
  6761                           
  6762                           ;MCP79510.c: 8: RD4 = 0;
  6763                           
  6764                           ;incstack = 0
  6765 ;; hardware stack exceeded
  6766                           ; Regs used in _ClockInit: [wreg+status,2+status,0+pclath+cstack]
  6767  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  6768  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  6769  0C15  1208               	bcf	8,4	;volatile
  6770                           
  6771                           ;MCP79510.c: 9: WriteSPI(0x12);
  6772  0C16  3012               	movlw	18
  6773  0C17  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6774                           
  6775                           ;MCP79510.c: 10: WriteSPI(0x01);
  6776  0C1C  3001               	movlw	1
  6777  0C1D  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6778                           
  6779                           ;MCP79510.c: 11: WriteSPI(0x00);
  6780  0C22  3000               	movlw	0
  6781  0C23  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6782                           
  6783                           ;MCP79510.c: 12: RD4 = 1;
  6784  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  6785  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  6786  0C2A  1608               	bsf	8,4	;volatile
  6787                           
  6788                           ;MCP79510.c: 13: _delay((unsigned long)((40)*(4000000/4000000.0)));
  6789  0C2B  300D               	movlw	13
  6790  0C2C  1683               	bsf	3,5	;RP0=1, select bank1
  6791  0C2D  1303               	bcf	3,6	;RP1=0, select bank1
  6792  0C2E  00A3               	movwf	??_ClockInit^(0+128)
  6793  0C2F                     u3867:	
  6794  0C2F  0BA3               	decfsz	??_ClockInit^(0+128),f
  6795  0C30  2C2F               	goto	u3867
  6796                           
  6797                           ;MCP79510.c: 14: RD4 = 0;
  6798  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  6799  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  6800  0C33  1208               	bcf	8,4	;volatile
  6801                           
  6802                           ;MCP79510.c: 15: WriteSPI(0x12);
  6803  0C34  3012               	movlw	18
  6804  0C35  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6805                           
  6806                           ;MCP79510.c: 16: WriteSPI(0x02);
  6807  0C3A  3002               	movlw	2
  6808  0C3B  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6809                           
  6810                           ;MCP79510.c: 17: WriteSPI(0x00);
  6811  0C40  3000               	movlw	0
  6812  0C41  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6813                           
  6814                           ;MCP79510.c: 18: RD4 = 1;
  6815  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  6816  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  6817  0C48  1608               	bsf	8,4	;volatile
  6818                           
  6819                           ;MCP79510.c: 19: _delay((unsigned long)((40)*(4000000/4000000.0)));
  6820  0C49  300D               	movlw	13
  6821  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  6822  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  6823  0C4C  00A3               	movwf	??_ClockInit^(0+128)
  6824  0C4D                     u3877:	
  6825  0C4D  0BA3               	decfsz	??_ClockInit^(0+128),f
  6826  0C4E  2C4D               	goto	u3877
  6827                           
  6828                           ;MCP79510.c: 20: RD4 = 0;
  6829  0C4F  1283               	bcf	3,5	;RP0=0, select bank0
  6830  0C50  1303               	bcf	3,6	;RP1=0, select bank0
  6831  0C51  1208               	bcf	8,4	;volatile
  6832                           
  6833                           ;MCP79510.c: 21: WriteSPI(0x12);
  6834  0C52  3012               	movlw	18
  6835  0C53  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6836                           
  6837                           ;MCP79510.c: 22: WriteSPI(0x08);
  6838  0C58  3008               	movlw	8
  6839  0C59  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6840                           
  6841                           ;MCP79510.c: 23: WriteSPI(0x00);
  6842  0C5E  3000               	movlw	0
  6843  0C5F  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6844                           
  6845                           ;MCP79510.c: 24: RD4 = 1;
  6846  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0C66  1608               	bsf	8,4	;volatile
  6849                           
  6850                           ;MCP79510.c: 25: _delay((unsigned long)((40)*(4000000/4000000.0)));
  6851  0C67  300D               	movlw	13
  6852  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  6853  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  6854  0C6A  00A3               	movwf	??_ClockInit^(0+128)
  6855  0C6B                     u3887:	
  6856  0C6B  0BA3               	decfsz	??_ClockInit^(0+128),f
  6857  0C6C  2C6B               	goto	u3887
  6858                           
  6859                           ;MCP79510.c: 26: RD4 = 0;
  6860  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0C6F  1208               	bcf	8,4	;volatile
  6863                           
  6864                           ;MCP79510.c: 27: WriteSPI(0x12);
  6865  0C70  3012               	movlw	18
  6866  0C71  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6867                           
  6868                           ;MCP79510.c: 28: WriteSPI(0x01);
  6869  0C76  3001               	movlw	1
  6870  0C77  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6871                           
  6872                           ;MCP79510.c: 29: WriteSPI(0x80);
  6873  0C7C  3080               	movlw	128
  6874  0C7D  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6875                           
  6876                           ;MCP79510.c: 30: RD4 = 1;
  6877  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  6879  0C84  1608               	bsf	8,4	;volatile
  6880                           
  6881                           ;MCP79510.c: 32: char cnt = 0;
  6882  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  6883  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  6884  0C87  01A4               	clrf	ClockInit@cnt^(0+128)
  6885  0C88                     l4312:	
  6886                           ;MCP79510.c: 33: while(cnt < 100)
  6887                           
  6888  0C88  3064               	movlw	100
  6889  0C89  0224               	subwf	ClockInit@cnt^(0+128),w
  6890  0C8A  1803               	btfsc	3,0
  6891  0C8B  2CAA               	goto	l655
  6892                           
  6893                           ;MCP79510.c: 34: {
  6894                           ;MCP79510.c: 35: RD4 = 0;
  6895  0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  6896  0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  6897  0C8E  1208               	bcf	8,4	;volatile
  6898                           
  6899                           ;MCP79510.c: 36: WriteSPI(0x13);
  6900  0C8F  3013               	movlw	19
  6901  0C90  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6902                           
  6903                           ;MCP79510.c: 37: WriteSPI(0x04);
  6904  0C95  3004               	movlw	4
  6905  0C96  160A  118A  2517  120A  158A  	fcall	_WriteSPI
  6906                           
  6907                           ;MCP79510.c: 38: if((ReadSPI() & 0b00100000) != 0)
  6908  0C9B  160A  118A  2458  120A  158A  	fcall	_ReadSPI
  6909  0CA0  3920               	andlw	32
  6910  0CA1  1D03               	btfss	3,2
  6911  0CA2  2CAA               	goto	l655
  6912                           
  6913                           ;MCP79510.c: 42: }
  6914                           ;MCP79510.c: 43: cnt++;
  6915                           
  6916                           ;MCP79510.c: 39: {
  6917                           ;MCP79510.c: 40: break;
  6918  0CA3  3001               	movlw	1
  6919  0CA4  1683               	bsf	3,5	;RP0=1, select bank1
  6920  0CA5  1303               	bcf	3,6	;RP1=0, select bank1
  6921  0CA6  00A3               	movwf	??_ClockInit^(0+128)
  6922  0CA7  0823               	movf	??_ClockInit^(0+128),w
  6923  0CA8  07A4               	addwf	ClockInit@cnt^(0+128),f
  6924  0CA9  2C88               	goto	l4312
  6925  0CAA                     l655:	
  6926                           
  6927                           ;MCP79510.c: 46: }
  6928                           ;MCP79510.c: 47: RD4 = 1;
  6929  0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  6930  0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  6931  0CAC  1608               	bsf	8,4	;volatile
  6932  0CAD  0008               	return
  6933  0CAE                     __end_of_ClockInit:	
  6934                           
  6935                           	psect	text39
  6936  1458                     __ptext39:	
  6937 ;; *************** function _ReadSPI *****************
  6938 ;; Defined at:
  6939 ;;		line 529 in file "functions.c"
  6940 ;; Parameters:    Size  Location     Type
  6941 ;;		None
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;		None
  6944 ;; Return value:  Size  Location     Type
  6945 ;;                  1    wreg      unsigned char 
  6946 ;; Registers used:
  6947 ;;		wreg, status,2, status,0, pclath, cstack
  6948 ;; Tracked objects:
  6949 ;;		On entry : 0/0
  6950 ;;		On exit  : 0/0
  6951 ;;		Unchanged: 0/0
  6952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6953 ;;      Params:         0       0       0       0       0
  6954 ;;      Locals:         0       0       0       0       0
  6955 ;;      Temps:          0       0       0       0       0
  6956 ;;      Totals:         0       0       0       0       0
  6957 ;;Total ram usage:        0 bytes
  6958 ;; Hardware stack levels used:    1
  6959 ;; Hardware stack levels required when called:    7
  6960 ;; This function calls:
  6961 ;;		_WriteSPI
  6962 ;; This function is called by:
  6963 ;;		_RegisterRead
  6964 ;;		_ReadFIFO
  6965 ;;		_read_ram_status
  6966 ;;		_read_write_flash_ram
  6967 ;;		_ClockInit
  6968 ;;		_read_ram_id
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function _ReadSPI
  6974  1458                     _ReadSPI:	
  6975                           
  6976                           ;functions.c: 531: WriteSPI(0x00);
  6977                           
  6978                           ;incstack = 0
  6979 ;; hardware stack exceeded
  6980                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  6981  1458  3000               	movlw	0
  6982  1459  160A  118A  2517   	fcall	_WriteSPI
  6983                           
  6984                           ;functions.c: 532: return SSPBUF;
  6985  145C  1283               	bcf	3,5	;RP0=0, select bank0
  6986  145D  1303               	bcf	3,6	;RP1=0, select bank0
  6987  145E  0813               	movf	19,w	;volatile
  6988  145F  0008               	return
  6989  1460                     __end_of_ReadSPI:	
  6990                           
  6991                           	psect	text40
  6992  1517                     __ptext40:	
  6993 ;; *************** function _WriteSPI *****************
  6994 ;; Defined at:
  6995 ;;		line 517 in file "functions.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  databyte        1    wreg     unsigned char 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  databyte        1    2[BANK1 ] unsigned char 
  7000 ;;  buffer          1    1[BANK1 ] unsigned char 
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7010 ;;      Params:         0       0       0       0       0
  7011 ;;      Locals:         0       0       2       0       0
  7012 ;;      Temps:          0       0       1       0       0
  7013 ;;      Totals:         0       0       3       0       0
  7014 ;;Total ram usage:        3 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    6
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_ReadSPI
  7021 ;;		_RegisterRead
  7022 ;;		_RegisterSet
  7023 ;;		_WriteFIFO
  7024 ;;		_read_ram_status
  7025 ;;		_ram_bulk_erase
  7026 ;;		_read_write_flash_ram
  7027 ;;		_write_ram_status
  7028 ;;		_ClockInit
  7029 ;;		_read_ram_id
  7030 ;;		_ram_sector_erase
  7031 ;;		_power_up_flash_ram
  7032 ;;		_power_down_flash_ram
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           
  7037                           ;psect for function _WriteSPI
  7038  1517                     _WriteSPI:	
  7039                           
  7040                           ;incstack = 0
  7041 ;; hardware stack exceeded
  7042                           ; Regs used in _WriteSPI: [wreg]
  7043                           ;WriteSPI@databyte stored from wreg
  7044  1517  1683               	bsf	3,5	;RP0=1, select bank1
  7045  1518  1303               	bcf	3,6	;RP1=0, select bank1
  7046  1519  00A2               	movwf	WriteSPI@databyte^(0+128)
  7047                           
  7048                           ;functions.c: 519: unsigned char buffer;
  7049                           ;functions.c: 520: buffer = SSPBUF;
  7050  151A  1283               	bcf	3,5	;RP0=0, select bank0
  7051  151B  1303               	bcf	3,6	;RP1=0, select bank0
  7052  151C  0813               	movf	19,w	;volatile
  7053  151D  1683               	bsf	3,5	;RP0=1, select bank1
  7054  151E  1303               	bcf	3,6	;RP1=0, select bank1
  7055  151F  00A0               	movwf	??_WriteSPI^(0+128)
  7056  1520  0820               	movf	??_WriteSPI^(0+128),w
  7057  1521  00A1               	movwf	WriteSPI@buffer^(0+128)
  7058                           
  7059                           ;functions.c: 521: PIR1bits.SSPIF=0;
  7060  1522  1283               	bcf	3,5	;RP0=0, select bank0
  7061  1523  1303               	bcf	3,6	;RP1=0, select bank0
  7062  1524  118C               	bcf	12,3	;volatile
  7063                           
  7064                           ;functions.c: 522: SSPBUF = databyte;
  7065  1525  1683               	bsf	3,5	;RP0=1, select bank1
  7066  1526  1303               	bcf	3,6	;RP1=0, select bank1
  7067  1527  0822               	movf	WriteSPI@databyte^(0+128),w
  7068  1528  1283               	bcf	3,5	;RP0=0, select bank0
  7069  1529  1303               	bcf	3,6	;RP1=0, select bank0
  7070  152A  0093               	movwf	19	;volatile
  7071  152B                     l410:	
  7072                           ;functions.c: 523: while(PIR1bits.SSPIF == 0);
  7073                           
  7074  152B  1D8C               	btfss	12,3	;volatile
  7075  152C  2D2B               	goto	l410
  7076                           
  7077                           ;functions.c: 524: PIR1bits.SSPIF = 0;
  7078  152D  118C               	bcf	12,3	;volatile
  7079  152E  0008               	return
  7080  152F                     __end_of_WriteSPI:	
  7081                           
  7082                           	psect	text41
  7083  0D60                     __ptext41:	
  7084 ;; *************** function _tc_int *****************
  7085 ;; Defined at:
  7086 ;;		line 823 in file "functions.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;		None
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7100 ;;      Params:         0       0       0       0       0
  7101 ;;      Locals:         0       0       0       0       0
  7102 ;;      Temps:          0       7       0       0       0
  7103 ;;      Totals:         0       7       0       0       0
  7104 ;;Total ram usage:        7 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    5
  7107 ;; This function calls:
  7108 ;;		_TimerCounter
  7109 ;;		_saveDataToFlash
  7110 ;;		i1_OperationMode
  7111 ;; This function is called by:
  7112 ;;		Interrupt level 1
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           
  7117                           ;psect for function _tc_int
  7118  0D60                     _tc_int:	
  7119                           
  7120                           ;functions.c: 826: if((RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode() < 2)){
  7121  0D60  1A86               	btfsc	6,5	;volatile
  7122  0D61  2D78               	goto	i1l3532
  7123  0D62  0856               	movf	_intBlinkCycle,w
  7124  0D63  0457               	iorwf	_intBlinkCycle+1,w
  7125  0D64  1D03               	btfss	3,2
  7126  0D65  2D78               	goto	i1l3532
  7127  0D66  160A  118A  2468  120A  158A  	fcall	i1_OperationMode
  7128  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  7129  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  7130  0D6D  00BC               	movwf	??_tc_int
  7131  0D6E  3002               	movlw	2
  7132  0D6F  023C               	subwf	??_tc_int,w
  7133  0D70  1803               	skipnc
  7134  0D71  2D78               	goto	i1l3532
  7135                           
  7136                           ;functions.c: 827: intBlinkCycle = 1;
  7137  0D72  3001               	movlw	1
  7138  0D73  00D6               	movwf	_intBlinkCycle
  7139  0D74  3000               	movlw	0
  7140  0D75  00D7               	movwf	_intBlinkCycle+1
  7141                           
  7142                           ;functions.c: 828: intBlinkCounter = 0;
  7143  0D76  01D4               	clrf	_intBlinkCounter
  7144  0D77  01D5               	clrf	_intBlinkCounter+1
  7145  0D78                     i1l3532:	
  7146                           
  7147                           ;functions.c: 830: }
  7148                           ;functions.c: 833: if(TMR1IF ==1){
  7149  0D78  1C0C               	btfss	12,0	;volatile
  7150  0D79  2E1F               	goto	L4
  7151                           
  7152                           ;functions.c: 834: TMR1ON = 0;
  7153  0D7A  1010               	bcf	16,0	;volatile
  7154                           
  7155                           ;functions.c: 835: TMR1H = 0x0B;
  7156  0D7B  300B               	movlw	11
  7157  0D7C  008F               	movwf	15	;volatile
  7158                           
  7159                           ;functions.c: 836: TMR1L = 0xDB;
  7160  0D7D  30DB               	movlw	219
  7161  0D7E  008E               	movwf	14	;volatile
  7162                           
  7163                           ;functions.c: 838: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2)){
  7164  0D7F  0356               	decf	_intBlinkCycle,w
  7165  0D80  0457               	iorwf	_intBlinkCycle+1,w
  7166  0D81  1D03               	btfss	3,2
  7167  0D82  2DA5               	goto	i1l3550
  7168  0D83  0862               	movf	_intNumberOfBlinks+1,w
  7169  0D84  00BD               	movwf	??_tc_int+1
  7170  0D85  0861               	movf	_intNumberOfBlinks,w
  7171  0D86  00BC               	movwf	??_tc_int
  7172  0D87  1003               	clrc
  7173  0D88  0DBC               	rlf	??_tc_int,f
  7174  0D89  0DBD               	rlf	??_tc_int+1,f
  7175  0D8A  0855               	movf	_intBlinkCounter+1,w
  7176  0D8B  3A80               	xorlw	128
  7177  0D8C  00BE               	movwf	??_tc_int+2
  7178  0D8D  083D               	movf	??_tc_int+1,w
  7179  0D8E  3A80               	xorlw	128
  7180  0D8F  023E               	subwf	??_tc_int+2,w
  7181  0D90  1D03               	skipz
  7182  0D91  2D94               	goto	u262_25
  7183  0D92  083C               	movf	??_tc_int,w
  7184  0D93  0254               	subwf	_intBlinkCounter,w
  7185  0D94                     u262_25:	
  7186  0D94  1803               	skipnc
  7187  0D95  2DA5               	goto	i1l3550
  7188                           
  7189                           ;functions.c: 839: intBlinkCounter++;
  7190  0D96  3001               	movlw	1
  7191  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0D99  07D4               	addwf	_intBlinkCounter,f
  7194  0D9A  1803               	skipnc
  7195  0D9B  0AD5               	incf	_intBlinkCounter+1,f
  7196  0D9C  3000               	movlw	0
  7197  0D9D  07D5               	addwf	_intBlinkCounter+1,f
  7198                           
  7199                           ;functions.c: 841: if(RC1 == 0)
  7200  0D9E  1887               	btfsc	7,1	;volatile
  7201  0D9F  2DA2               	goto	i1l463
  7202                           
  7203                           ;functions.c: 842: RC1 = 1;
  7204  0DA0  1487               	bsf	7,1	;volatile
  7205  0DA1  2DC3               	goto	i1l3558
  7206  0DA2                     i1l463:	
  7207                           
  7208                           ;functions.c: 843: else if(RC1 == 1)
  7209  0DA2  1C87               	btfss	7,1	;volatile
  7210  0DA3  2DC3               	goto	i1l3558
  7211  0DA4  2DC2               	goto	i1l3556
  7212  0DA5                     i1l3550:	
  7213                           ;functions.c: 845: }
  7214                           
  7215                           ;functions.c: 844: RC1 = 0;
  7216                           
  7217                           
  7218                           ;functions.c: 847: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBlinks*2)
      +                          ){
  7219  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  7220  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  7221  0DA7  0356               	decf	_intBlinkCycle,w
  7222  0DA8  0457               	iorwf	_intBlinkCycle+1,w
  7223  0DA9  1D03               	btfss	3,2
  7224  0DAA  2DC3               	goto	i1l3558
  7225  0DAB  0862               	movf	_intNumberOfBlinks+1,w
  7226  0DAC  00BD               	movwf	??_tc_int+1
  7227  0DAD  0861               	movf	_intNumberOfBlinks,w
  7228  0DAE  00BC               	movwf	??_tc_int
  7229  0DAF  1003               	clrc
  7230  0DB0  0DBC               	rlf	??_tc_int,f
  7231  0DB1  0DBD               	rlf	??_tc_int+1,f
  7232  0DB2  0855               	movf	_intBlinkCounter+1,w
  7233  0DB3  3A80               	xorlw	128
  7234  0DB4  00BE               	movwf	??_tc_int+2
  7235  0DB5  083D               	movf	??_tc_int+1,w
  7236  0DB6  3A80               	xorlw	128
  7237  0DB7  023E               	subwf	??_tc_int+2,w
  7238  0DB8  1D03               	skipz
  7239  0DB9  2DBC               	goto	u266_25
  7240  0DBA  083C               	movf	??_tc_int,w
  7241  0DBB  0254               	subwf	_intBlinkCounter,w
  7242  0DBC                     u266_25:	
  7243  0DBC  1C03               	skipc
  7244  0DBD  2DC3               	goto	i1l3558
  7245                           
  7246                           ;functions.c: 848: intBlinkCycle = 0;
  7247  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  7248  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  7249  0DC0  01D6               	clrf	_intBlinkCycle
  7250  0DC1  01D7               	clrf	_intBlinkCycle+1
  7251  0DC2                     i1l3556:	
  7252                           
  7253                           ;functions.c: 849: RC1 = 0;
  7254  0DC2  1087               	bcf	7,1	;volatile
  7255  0DC3                     i1l3558:	
  7256                           
  7257                           ;functions.c: 850: }
  7258                           ;functions.c: 853: intHalfSecondCounter++;
  7259  0DC3  3001               	movlw	1
  7260  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  7262  0DC6  07DA               	addwf	_intHalfSecondCounter,f
  7263  0DC7  1803               	skipnc
  7264  0DC8  0ADB               	incf	_intHalfSecondCounter+1,f
  7265  0DC9  3000               	movlw	0
  7266  0DCA  07DB               	addwf	_intHalfSecondCounter+1,f
  7267                           
  7268                           ;functions.c: 854: if(intHalfSecondCounter>=2)
  7269  0DCB  085B               	movf	_intHalfSecondCounter+1,w
  7270  0DCC  3A80               	xorlw	128
  7271  0DCD  00FF               	movwf	127
  7272  0DCE  3080               	movlw	128
  7273  0DCF  027F               	subwf	127,w
  7274  0DD0  1D03               	skipz
  7275  0DD1  2DD4               	goto	u267_25
  7276  0DD2  3002               	movlw	2
  7277  0DD3  025A               	subwf	_intHalfSecondCounter,w
  7278  0DD4                     u267_25:	
  7279  0DD4  1C03               	skipc
  7280  0DD5  2DEE               	goto	i1l3574
  7281                           
  7282                           ;functions.c: 855: {
  7283                           ;functions.c: 856: intHalfSecondCounter = 0;
  7284  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  7285  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  7286  0DD8  01DA               	clrf	_intHalfSecondCounter
  7287  0DD9  01DB               	clrf	_intHalfSecondCounter+1
  7288                           
  7289                           ;functions.c: 857: intSecondCounter++;
  7290  0DDA  3001               	movlw	1
  7291  0DDB  07DE               	addwf	_intSecondCounter,f
  7292  0DDC  1803               	skipnc
  7293  0DDD  0ADF               	incf	_intSecondCounter+1,f
  7294  0DDE  3000               	movlw	0
  7295  0DDF  07DF               	addwf	_intSecondCounter+1,f
  7296                           
  7297                           ;functions.c: 858: TimerCounter();
  7298  0DE0  120A  158A  2014  120A  158A  	fcall	_TimerCounter
  7299                           
  7300                           ;functions.c: 860: if(RB1)
  7301  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  7302  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  7303  0DE7  1C86               	btfss	6,1	;volatile
  7304  0DE8  2DEB               	goto	i1l469
  7305                           
  7306                           ;functions.c: 861: RB1 = 0;
  7307  0DE9  1086               	bcf	6,1	;volatile
  7308  0DEA  2DEE               	goto	i1l3574
  7309  0DEB                     i1l469:	
  7310                           
  7311                           ;functions.c: 862: else if(!RB1)
  7312  0DEB  1886               	btfsc	6,1	;volatile
  7313  0DEC  2DEE               	goto	i1l3574
  7314                           
  7315                           ;functions.c: 863: RB1 = 1;
  7316  0DED  1486               	bsf	6,1	;volatile
  7317  0DEE                     i1l3574:	
  7318                           
  7319                           ;functions.c: 864: }
  7320                           ;functions.c: 865: if(intSecondCounter >=60)
  7321  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  7322  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  7323  0DF0  085F               	movf	_intSecondCounter+1,w
  7324  0DF1  3A80               	xorlw	128
  7325  0DF2  00FF               	movwf	127
  7326  0DF3  3080               	movlw	128
  7327  0DF4  027F               	subwf	127,w
  7328  0DF5  1D03               	skipz
  7329  0DF6  2DF9               	goto	u270_25
  7330  0DF7  303C               	movlw	60
  7331  0DF8  025E               	subwf	_intSecondCounter,w
  7332  0DF9                     u270_25:	
  7333  0DF9  1C03               	skipc
  7334  0DFA  2E0A               	goto	i1l3582
  7335                           
  7336                           ;functions.c: 866: {
  7337                           ;functions.c: 867: intSecondCounter = 0;
  7338  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  7339  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  7340  0DFD  01DE               	clrf	_intSecondCounter
  7341  0DFE  01DF               	clrf	_intSecondCounter+1
  7342                           
  7343                           ;functions.c: 868: intMinuteCounter++;
  7344  0DFF  3001               	movlw	1
  7345  0E00  07DC               	addwf	_intMinuteCounter,f
  7346  0E01  1803               	skipnc
  7347  0E02  0ADD               	incf	_intMinuteCounter+1,f
  7348  0E03  3000               	movlw	0
  7349  0E04  07DD               	addwf	_intMinuteCounter+1,f
  7350                           
  7351                           ;functions.c: 869: saveDataToFlash();
  7352  0E05  120A  118A  203F  120A  158A  	fcall	_saveDataToFlash
  7353  0E0A                     i1l3582:	
  7354                           
  7355                           ;functions.c: 871: }
  7356                           ;functions.c: 872: if(intMinuteCounter >= 60)
  7357  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  7358  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  7359  0E0C  085D               	movf	_intMinuteCounter+1,w
  7360  0E0D  3A80               	xorlw	128
  7361  0E0E  00FF               	movwf	127
  7362  0E0F  3080               	movlw	128
  7363  0E10  027F               	subwf	127,w
  7364  0E11  1D03               	skipz
  7365  0E12  2E15               	goto	u271_25
  7366  0E13  303C               	movlw	60
  7367  0E14  025C               	subwf	_intMinuteCounter,w
  7368  0E15                     u271_25:	
  7369  0E15  1C03               	skipc
  7370  0E16  2E1B               	goto	i1l3586
  7371                           
  7372                           ;functions.c: 873: {
  7373                           ;functions.c: 874: intMinuteCounter = 0;
  7374  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  7375  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  7376  0E19  01DC               	clrf	_intMinuteCounter
  7377  0E1A  01DD               	clrf	_intMinuteCounter+1
  7378  0E1B                     i1l3586:	
  7379                           
  7380                           ;functions.c: 875: }
  7381                           ;functions.c: 878: TMR1ON = 1;
  7382  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  7383  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  7384  0E1D  1410               	bsf	16,0	;volatile
  7385                           
  7386                           ;functions.c: 879: }
  7387                           ;functions.c: 880: TMR1IF = 0;
  7388  0E1E  100C               	bcf	12,0	;volatile
  7389  0E1F                     L4:	
  7390                           
  7391                           ;functions.c: 881: RBIF = 0;
  7392  0E1F  100B               	bcf	11,0	;volatile
  7393                           
  7394                           ;functions.c: 882: GIE = 1;
  7395  0E20  178B               	bsf	11,7	;volatile
  7396                           
  7397                           ;functions.c: 883: return;
  7398  0E21  0842               	movf	??_tc_int+6,w
  7399  0E22  00FF               	movwf	127
  7400  0E23  0841               	movf	??_tc_int+5,w
  7401  0E24  008A               	movwf	10
  7402  0E25  0840               	movf	??_tc_int+4,w
  7403  0E26  0084               	movwf	4
  7404  0E27  0E3F               	swapf	(??_tc_int+3)^0,w
  7405  0E28  0083               	movwf	3
  7406  0E29  0EFE               	swapf	126,f
  7407  0E2A  0E7E               	swapf	126,w
  7408  0E2B  0009               	retfie
  7409  0E2C                     __end_of_tc_int:	
  7410                           
  7411                           	psect	intentry
  7412  0004                     __pintentry:	
  7413                           ;incstack = 0
  7414 ;; hardware stack exceeded
  7415                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7416                           
  7417  0004                     interrupt_function:	
  7418  007E                     saved_w	set	btemp
  7419  0004  00FE               	movwf	btemp
  7420  0005  0E03               	swapf	3,w
  7421  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7422  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7423  0008  00BF               	movwf	??_tc_int+3
  7424  0009  0804               	movf	4,w
  7425  000A  00C0               	movwf	??_tc_int+4
  7426  000B  080A               	movf	10,w
  7427  000C  00C1               	movwf	??_tc_int+5
  7428  000D  087F               	movf	btemp+1,w
  7429  000E  00C2               	movwf	??_tc_int+6
  7430  000F  120A  158A  2D60   	ljmp	_tc_int
  7431                           
  7432                           	psect	text42
  7433  1468                     __ptext42:	
  7434 ;; *************** function i1_OperationMode *****************
  7435 ;; Defined at:
  7436 ;;		line 965 in file "functions.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;		None
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  OperationMod    1    1[COMMON] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      unsigned char 
  7443 ;; Registers used:
  7444 ;;		wreg, status,2
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7450 ;;      Params:         0       0       0       0       0
  7451 ;;      Locals:         1       0       0       0       0
  7452 ;;      Temps:          1       0       0       0       0
  7453 ;;      Totals:         2       0       0       0       0
  7454 ;;Total ram usage:        2 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_tc_int
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           
  7464                           ;psect for function i1_OperationMode
  7465  1468                     i1_OperationMode:	
  7466                           
  7467                           ;functions.c: 967: unsigned char bracketStatus;
  7468                           ;functions.c: 968: bracketStatus = ((~PORTB) & 0b00000111) ;
  7469                           
  7470                           ;incstack = 0
  7471 ;; hardware stack exceeded
  7472                           ; Regs used in i1_OperationMode: [wreg+status,2]
  7473  1468  1283               	bcf	3,5	;RP0=0, select bank0
  7474  1469  1303               	bcf	3,6	;RP1=0, select bank0
  7475  146A  0906               	comf	6,w	;volatile
  7476  146B  3907               	andlw	7
  7477  146C  00F0               	movwf	??i1_OperationMode
  7478  146D  0870               	movf	??i1_OperationMode,w
  7479  146E  00F1               	movwf	i1OperationMode@bracketStatus
  7480                           
  7481                           ;functions.c: 970: return bracketStatus;
  7482  146F  0871               	movf	i1OperationMode@bracketStatus,w
  7483  1470  0008               	return
  7484  1471                     __end_ofi1_OperationMode:	
  7485                           
  7486                           	psect	text43
  7487  003F                     __ptext43:	
  7488 ;; *************** function _saveDataToFlash *****************
  7489 ;; Defined at:
  7490 ;;		line 1076 in file "functions.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  addr3           1   27[BANK0 ] unsigned char 
  7495 ;;  addr2           1   26[BANK0 ] unsigned char 
  7496 ;;  addr1           1   25[BANK0 ] unsigned char 
  7497 ;;  value           1   24[BANK0 ] unsigned char 
  7498 ;;  year            1   23[BANK0 ] unsigned char 
  7499 ;;  month           1   22[BANK0 ] unsigned char 
  7500 ;;  date            1   21[BANK0 ] unsigned char 
  7501 ;;  hours           1   20[BANK0 ] unsigned char 
  7502 ;;  minutes         1   19[BANK0 ] unsigned char 
  7503 ;;  seconds         1   18[BANK0 ] unsigned char 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7513 ;;      Params:         0       0       0       0       0
  7514 ;;      Locals:         0      10       0       0       0
  7515 ;;      Temps:          0       5       0       0       0
  7516 ;;      Totals:         0      15       0       0       0
  7517 ;;Total ram usage:       15 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    4
  7520 ;; This function calls:
  7521 ;;		_IncreaseMemoryAdress
  7522 ;;		_ReadClock
  7523 ;;		i1_AnalogValue
  7524 ;;		i1_ReadMemoryAdress
  7525 ;;		i1_read_write_flash_ram
  7526 ;; This function is called by:
  7527 ;;		_tc_int
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function _saveDataToFlash
  7533  003F                     _saveDataToFlash:	
  7534                           
  7535                           ;functions.c: 1078: unsigned char value, addr1, addr2, addr3, seconds, minutes, hours, d
      +                          ate, month, year;
  7536                           ;functions.c: 1080: ReadClock(&seconds, &minutes, &hours, &date, &month, &year);
  7537                           
  7538                           ;incstack = 0
  7539 ;; hardware stack exceeded
  7540                           ; Regs used in _saveDataToFlash: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7541  003F  3033               	movlw	(low (saveDataToFlash@minutes| 0))& (0+255)
  7542  0040  1283               	bcf	3,5	;RP0=0, select bank0
  7543  0041  1303               	bcf	3,6	;RP1=0, select bank0
  7544  0042  00AD               	movwf	??_saveDataToFlash
  7545  0043  082D               	movf	??_saveDataToFlash,w
  7546  0044  00F4               	movwf	ReadClock@minutes
  7547  0045  3034               	movlw	(low (saveDataToFlash@hours| 0))& (0+255)
  7548  0046  00AE               	movwf	??_saveDataToFlash+1
  7549  0047  082E               	movf	??_saveDataToFlash+1,w
  7550  0048  00F5               	movwf	ReadClock@hour
  7551  0049  3035               	movlw	(low (saveDataToFlash@date| 0))& (0+255)
  7552  004A  00AF               	movwf	??_saveDataToFlash+2
  7553  004B  082F               	movf	??_saveDataToFlash+2,w
  7554  004C  00F6               	movwf	ReadClock@date
  7555  004D  3036               	movlw	(low (saveDataToFlash@month| 0))& (0+255)
  7556  004E  00B0               	movwf	??_saveDataToFlash+3
  7557  004F  0830               	movf	??_saveDataToFlash+3,w
  7558  0050  00F7               	movwf	ReadClock@month
  7559  0051  3037               	movlw	(low (saveDataToFlash@year| 0))& (0+255)
  7560  0052  00B1               	movwf	??_saveDataToFlash+4
  7561  0053  0831               	movf	??_saveDataToFlash+4,w
  7562  0054  00F8               	movwf	ReadClock@year
  7563  0055  3032               	movlw	(low (saveDataToFlash@seconds| 0))& (0+255)
  7564  0056  120A  118A  247E  120A  118A  	fcall	_ReadClock
  7565                           
  7566                           ;functions.c: 1082: value = year;
  7567  005B  1283               	bcf	3,5	;RP0=0, select bank0
  7568  005C  1303               	bcf	3,6	;RP1=0, select bank0
  7569  005D  0837               	movf	saveDataToFlash@year,w
  7570  005E  00AD               	movwf	??_saveDataToFlash
  7571  005F  082D               	movf	??_saveDataToFlash,w
  7572  0060  00B8               	movwf	saveDataToFlash@value
  7573                           
  7574                           ;functions.c: 1083: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7575  0061  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7576  0062  00AD               	movwf	??_saveDataToFlash
  7577  0063  082D               	movf	??_saveDataToFlash,w
  7578  0064  00F2               	movwf	i1ReadMemoryAdress@var2
  7579  0065  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7580  0066  00AE               	movwf	??_saveDataToFlash+1
  7581  0067  082E               	movf	??_saveDataToFlash+1,w
  7582  0068  00F3               	movwf	i1ReadMemoryAdress@var1
  7583  0069  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7584  006A  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7585                           
  7586                           ;functions.c: 1084: read_write_flash_ram(
  7587                           ;functions.c: 1085: 0,
  7588                           ;functions.c: 1086: 1,
  7589                           ;functions.c: 1087: addr3,
  7590                           ;functions.c: 1088: addr2,
  7591                           ;functions.c: 1089: addr1,
  7592                           ;functions.c: 1090: &value);
  7593  006F  3001               	movlw	1
  7594  0070  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7595  0071  3000               	movlw	0
  7596  0072  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7597  0073  1283               	bcf	3,5	;RP0=0, select bank0
  7598  0074  1303               	bcf	3,6	;RP1=0, select bank0
  7599  0075  083B               	movf	saveDataToFlash@addr3,w
  7600  0076  00AD               	movwf	??_saveDataToFlash
  7601  0077  082D               	movf	??_saveDataToFlash,w
  7602  0078  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7603  0079  083A               	movf	saveDataToFlash@addr2,w
  7604  007A  00AE               	movwf	??_saveDataToFlash+1
  7605  007B  082E               	movf	??_saveDataToFlash+1,w
  7606  007C  00F8               	movwf	i1read_write_flash_ram@flash_page
  7607  007D  0839               	movf	saveDataToFlash@addr1,w
  7608  007E  00AF               	movwf	??_saveDataToFlash+2
  7609  007F  082F               	movf	??_saveDataToFlash+2,w
  7610  0080  00F9               	movwf	i1read_write_flash_ram@offset
  7611  0081  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7612  0082  00B0               	movwf	??_saveDataToFlash+3
  7613  0083  0830               	movf	??_saveDataToFlash+3,w
  7614  0084  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7615  0085  3000               	movlw	0
  7616  0086  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7617                           
  7618                           ;functions.c: 1091: IncreaseMemoryAdress();
  7619  008B  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7620                           
  7621                           ;functions.c: 1093: value = month;
  7622  0090  1283               	bcf	3,5	;RP0=0, select bank0
  7623  0091  1303               	bcf	3,6	;RP1=0, select bank0
  7624  0092  0836               	movf	saveDataToFlash@month,w
  7625  0093  00AD               	movwf	??_saveDataToFlash
  7626  0094  082D               	movf	??_saveDataToFlash,w
  7627  0095  00B8               	movwf	saveDataToFlash@value
  7628                           
  7629                           ;functions.c: 1094: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7630  0096  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7631  0097  00AD               	movwf	??_saveDataToFlash
  7632  0098  082D               	movf	??_saveDataToFlash,w
  7633  0099  00F2               	movwf	i1ReadMemoryAdress@var2
  7634  009A  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7635  009B  00AE               	movwf	??_saveDataToFlash+1
  7636  009C  082E               	movf	??_saveDataToFlash+1,w
  7637  009D  00F3               	movwf	i1ReadMemoryAdress@var1
  7638  009E  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7639  009F  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7640                           
  7641                           ;functions.c: 1095: read_write_flash_ram(
  7642                           ;functions.c: 1096: 0,
  7643                           ;functions.c: 1097: 1,
  7644                           ;functions.c: 1098: addr3,
  7645                           ;functions.c: 1099: addr2,
  7646                           ;functions.c: 1100: addr1,
  7647                           ;functions.c: 1101: &value);
  7648  00A4  3001               	movlw	1
  7649  00A5  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7650  00A6  3000               	movlw	0
  7651  00A7  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7652  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  7653  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  7654  00AA  083B               	movf	saveDataToFlash@addr3,w
  7655  00AB  00AD               	movwf	??_saveDataToFlash
  7656  00AC  082D               	movf	??_saveDataToFlash,w
  7657  00AD  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7658  00AE  083A               	movf	saveDataToFlash@addr2,w
  7659  00AF  00AE               	movwf	??_saveDataToFlash+1
  7660  00B0  082E               	movf	??_saveDataToFlash+1,w
  7661  00B1  00F8               	movwf	i1read_write_flash_ram@flash_page
  7662  00B2  0839               	movf	saveDataToFlash@addr1,w
  7663  00B3  00AF               	movwf	??_saveDataToFlash+2
  7664  00B4  082F               	movf	??_saveDataToFlash+2,w
  7665  00B5  00F9               	movwf	i1read_write_flash_ram@offset
  7666  00B6  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7667  00B7  00B0               	movwf	??_saveDataToFlash+3
  7668  00B8  0830               	movf	??_saveDataToFlash+3,w
  7669  00B9  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7670  00BA  3000               	movlw	0
  7671  00BB  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7672                           
  7673                           ;functions.c: 1102: IncreaseMemoryAdress();
  7674  00C0  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7675                           
  7676                           ;functions.c: 1104: value = date;
  7677  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  7678  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  7679  00C7  0835               	movf	saveDataToFlash@date,w
  7680  00C8  00AD               	movwf	??_saveDataToFlash
  7681  00C9  082D               	movf	??_saveDataToFlash,w
  7682  00CA  00B8               	movwf	saveDataToFlash@value
  7683                           
  7684                           ;functions.c: 1105: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7685  00CB  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7686  00CC  00AD               	movwf	??_saveDataToFlash
  7687  00CD  082D               	movf	??_saveDataToFlash,w
  7688  00CE  00F2               	movwf	i1ReadMemoryAdress@var2
  7689  00CF  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7690  00D0  00AE               	movwf	??_saveDataToFlash+1
  7691  00D1  082E               	movf	??_saveDataToFlash+1,w
  7692  00D2  00F3               	movwf	i1ReadMemoryAdress@var1
  7693  00D3  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7694  00D4  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7695                           
  7696                           ;functions.c: 1106: read_write_flash_ram(
  7697                           ;functions.c: 1107: 0,
  7698                           ;functions.c: 1108: 1,
  7699                           ;functions.c: 1109: addr3,
  7700                           ;functions.c: 1110: addr2,
  7701                           ;functions.c: 1111: addr1,
  7702                           ;functions.c: 1112: &value);
  7703  00D9  3001               	movlw	1
  7704  00DA  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7705  00DB  3000               	movlw	0
  7706  00DC  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7707  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  7708  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  7709  00DF  083B               	movf	saveDataToFlash@addr3,w
  7710  00E0  00AD               	movwf	??_saveDataToFlash
  7711  00E1  082D               	movf	??_saveDataToFlash,w
  7712  00E2  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7713  00E3  083A               	movf	saveDataToFlash@addr2,w
  7714  00E4  00AE               	movwf	??_saveDataToFlash+1
  7715  00E5  082E               	movf	??_saveDataToFlash+1,w
  7716  00E6  00F8               	movwf	i1read_write_flash_ram@flash_page
  7717  00E7  0839               	movf	saveDataToFlash@addr1,w
  7718  00E8  00AF               	movwf	??_saveDataToFlash+2
  7719  00E9  082F               	movf	??_saveDataToFlash+2,w
  7720  00EA  00F9               	movwf	i1read_write_flash_ram@offset
  7721  00EB  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7722  00EC  00B0               	movwf	??_saveDataToFlash+3
  7723  00ED  0830               	movf	??_saveDataToFlash+3,w
  7724  00EE  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7725  00EF  3000               	movlw	0
  7726  00F0  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7727                           
  7728                           ;functions.c: 1113: IncreaseMemoryAdress();
  7729  00F5  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7730                           
  7731                           ;functions.c: 1115: value = hours;
  7732  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  7733  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  7734  00FC  0834               	movf	saveDataToFlash@hours,w
  7735  00FD  00AD               	movwf	??_saveDataToFlash
  7736  00FE  082D               	movf	??_saveDataToFlash,w
  7737  00FF  00B8               	movwf	saveDataToFlash@value
  7738                           
  7739                           ;functions.c: 1116: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7740  0100  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7741  0101  00AD               	movwf	??_saveDataToFlash
  7742  0102  082D               	movf	??_saveDataToFlash,w
  7743  0103  00F2               	movwf	i1ReadMemoryAdress@var2
  7744  0104  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7745  0105  00AE               	movwf	??_saveDataToFlash+1
  7746  0106  082E               	movf	??_saveDataToFlash+1,w
  7747  0107  00F3               	movwf	i1ReadMemoryAdress@var1
  7748  0108  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7749  0109  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7750                           
  7751                           ;functions.c: 1117: read_write_flash_ram(
  7752                           ;functions.c: 1118: 0,
  7753                           ;functions.c: 1119: 1,
  7754                           ;functions.c: 1120: addr3,
  7755                           ;functions.c: 1121: addr2,
  7756                           ;functions.c: 1122: addr1,
  7757                           ;functions.c: 1123: &value);
  7758  010E  3001               	movlw	1
  7759  010F  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7760  0110  3000               	movlw	0
  7761  0111  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7762  0112  1283               	bcf	3,5	;RP0=0, select bank0
  7763  0113  1303               	bcf	3,6	;RP1=0, select bank0
  7764  0114  083B               	movf	saveDataToFlash@addr3,w
  7765  0115  00AD               	movwf	??_saveDataToFlash
  7766  0116  082D               	movf	??_saveDataToFlash,w
  7767  0117  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7768  0118  083A               	movf	saveDataToFlash@addr2,w
  7769  0119  00AE               	movwf	??_saveDataToFlash+1
  7770  011A  082E               	movf	??_saveDataToFlash+1,w
  7771  011B  00F8               	movwf	i1read_write_flash_ram@flash_page
  7772  011C  0839               	movf	saveDataToFlash@addr1,w
  7773  011D  00AF               	movwf	??_saveDataToFlash+2
  7774  011E  082F               	movf	??_saveDataToFlash+2,w
  7775  011F  00F9               	movwf	i1read_write_flash_ram@offset
  7776  0120  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7777  0121  00B0               	movwf	??_saveDataToFlash+3
  7778  0122  0830               	movf	??_saveDataToFlash+3,w
  7779  0123  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7780  0124  3000               	movlw	0
  7781  0125  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7782                           
  7783                           ;functions.c: 1124: IncreaseMemoryAdress();
  7784  012A  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7785                           
  7786                           ;functions.c: 1127: value = AnalogValue(0);
  7787  012F  3000               	movlw	0
  7788  0130  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  7789  0135  1283               	bcf	3,5	;RP0=0, select bank0
  7790  0136  1303               	bcf	3,6	;RP1=0, select bank0
  7791  0137  00AD               	movwf	??_saveDataToFlash
  7792  0138  082D               	movf	??_saveDataToFlash,w
  7793  0139  00B8               	movwf	saveDataToFlash@value
  7794                           
  7795                           ;functions.c: 1128: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7796  013A  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7797  013B  00AD               	movwf	??_saveDataToFlash
  7798  013C  082D               	movf	??_saveDataToFlash,w
  7799  013D  00F2               	movwf	i1ReadMemoryAdress@var2
  7800  013E  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7801  013F  00AE               	movwf	??_saveDataToFlash+1
  7802  0140  082E               	movf	??_saveDataToFlash+1,w
  7803  0141  00F3               	movwf	i1ReadMemoryAdress@var1
  7804  0142  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7805  0143  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7806                           
  7807                           ;functions.c: 1129: read_write_flash_ram(
  7808                           ;functions.c: 1130: 0,
  7809                           ;functions.c: 1131: 1,
  7810                           ;functions.c: 1132: addr3,
  7811                           ;functions.c: 1133: addr2,
  7812                           ;functions.c: 1134: addr1,
  7813                           ;functions.c: 1135: &value);
  7814  0148  3001               	movlw	1
  7815  0149  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7816  014A  3000               	movlw	0
  7817  014B  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7818  014C  1283               	bcf	3,5	;RP0=0, select bank0
  7819  014D  1303               	bcf	3,6	;RP1=0, select bank0
  7820  014E  083B               	movf	saveDataToFlash@addr3,w
  7821  014F  00AD               	movwf	??_saveDataToFlash
  7822  0150  082D               	movf	??_saveDataToFlash,w
  7823  0151  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7824  0152  083A               	movf	saveDataToFlash@addr2,w
  7825  0153  00AE               	movwf	??_saveDataToFlash+1
  7826  0154  082E               	movf	??_saveDataToFlash+1,w
  7827  0155  00F8               	movwf	i1read_write_flash_ram@flash_page
  7828  0156  0839               	movf	saveDataToFlash@addr1,w
  7829  0157  00AF               	movwf	??_saveDataToFlash+2
  7830  0158  082F               	movf	??_saveDataToFlash+2,w
  7831  0159  00F9               	movwf	i1read_write_flash_ram@offset
  7832  015A  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7833  015B  00B0               	movwf	??_saveDataToFlash+3
  7834  015C  0830               	movf	??_saveDataToFlash+3,w
  7835  015D  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7836  015E  3000               	movlw	0
  7837  015F  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7838                           
  7839                           ;functions.c: 1136: IncreaseMemoryAdress();
  7840  0164  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7841                           
  7842                           ;functions.c: 1138: value = AnalogValue(3);
  7843  0169  3003               	movlw	3
  7844  016A  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  7845  016F  1283               	bcf	3,5	;RP0=0, select bank0
  7846  0170  1303               	bcf	3,6	;RP1=0, select bank0
  7847  0171  00AD               	movwf	??_saveDataToFlash
  7848  0172  082D               	movf	??_saveDataToFlash,w
  7849  0173  00B8               	movwf	saveDataToFlash@value
  7850                           
  7851                           ;functions.c: 1139: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7852  0174  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7853  0175  00AD               	movwf	??_saveDataToFlash
  7854  0176  082D               	movf	??_saveDataToFlash,w
  7855  0177  00F2               	movwf	i1ReadMemoryAdress@var2
  7856  0178  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7857  0179  00AE               	movwf	??_saveDataToFlash+1
  7858  017A  082E               	movf	??_saveDataToFlash+1,w
  7859  017B  00F3               	movwf	i1ReadMemoryAdress@var1
  7860  017C  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7861  017D  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7862                           
  7863                           ;functions.c: 1140: read_write_flash_ram(
  7864                           ;functions.c: 1141: 0,
  7865                           ;functions.c: 1142: 1,
  7866                           ;functions.c: 1143: addr3,
  7867                           ;functions.c: 1144: addr2,
  7868                           ;functions.c: 1145: addr1,
  7869                           ;functions.c: 1146: &value);
  7870  0182  3001               	movlw	1
  7871  0183  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7872  0184  3000               	movlw	0
  7873  0185  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7874  0186  1283               	bcf	3,5	;RP0=0, select bank0
  7875  0187  1303               	bcf	3,6	;RP1=0, select bank0
  7876  0188  083B               	movf	saveDataToFlash@addr3,w
  7877  0189  00AD               	movwf	??_saveDataToFlash
  7878  018A  082D               	movf	??_saveDataToFlash,w
  7879  018B  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7880  018C  083A               	movf	saveDataToFlash@addr2,w
  7881  018D  00AE               	movwf	??_saveDataToFlash+1
  7882  018E  082E               	movf	??_saveDataToFlash+1,w
  7883  018F  00F8               	movwf	i1read_write_flash_ram@flash_page
  7884  0190  0839               	movf	saveDataToFlash@addr1,w
  7885  0191  00AF               	movwf	??_saveDataToFlash+2
  7886  0192  082F               	movf	??_saveDataToFlash+2,w
  7887  0193  00F9               	movwf	i1read_write_flash_ram@offset
  7888  0194  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7889  0195  00B0               	movwf	??_saveDataToFlash+3
  7890  0196  0830               	movf	??_saveDataToFlash+3,w
  7891  0197  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7892  0198  3000               	movlw	0
  7893  0199  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7894                           
  7895                           ;functions.c: 1147: IncreaseMemoryAdress();
  7896  019E  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7897                           
  7898                           ;functions.c: 1149: value = AnalogValue(5);
  7899  01A3  3005               	movlw	5
  7900  01A4  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  7901  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  7902  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  7903  01AB  00AD               	movwf	??_saveDataToFlash
  7904  01AC  082D               	movf	??_saveDataToFlash,w
  7905  01AD  00B8               	movwf	saveDataToFlash@value
  7906                           
  7907                           ;functions.c: 1150: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7908  01AE  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7909  01AF  00AD               	movwf	??_saveDataToFlash
  7910  01B0  082D               	movf	??_saveDataToFlash,w
  7911  01B1  00F2               	movwf	i1ReadMemoryAdress@var2
  7912  01B2  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7913  01B3  00AE               	movwf	??_saveDataToFlash+1
  7914  01B4  082E               	movf	??_saveDataToFlash+1,w
  7915  01B5  00F3               	movwf	i1ReadMemoryAdress@var1
  7916  01B6  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7917  01B7  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7918                           
  7919                           ;functions.c: 1151: read_write_flash_ram(
  7920                           ;functions.c: 1152: 0,
  7921                           ;functions.c: 1153: 1,
  7922                           ;functions.c: 1154: addr3,
  7923                           ;functions.c: 1155: addr2,
  7924                           ;functions.c: 1156: addr1,
  7925                           ;functions.c: 1157: &value);
  7926  01BC  3001               	movlw	1
  7927  01BD  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7928  01BE  3000               	movlw	0
  7929  01BF  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7930  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  7931  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  7932  01C2  083B               	movf	saveDataToFlash@addr3,w
  7933  01C3  00AD               	movwf	??_saveDataToFlash
  7934  01C4  082D               	movf	??_saveDataToFlash,w
  7935  01C5  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7936  01C6  083A               	movf	saveDataToFlash@addr2,w
  7937  01C7  00AE               	movwf	??_saveDataToFlash+1
  7938  01C8  082E               	movf	??_saveDataToFlash+1,w
  7939  01C9  00F8               	movwf	i1read_write_flash_ram@flash_page
  7940  01CA  0839               	movf	saveDataToFlash@addr1,w
  7941  01CB  00AF               	movwf	??_saveDataToFlash+2
  7942  01CC  082F               	movf	??_saveDataToFlash+2,w
  7943  01CD  00F9               	movwf	i1read_write_flash_ram@offset
  7944  01CE  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  7945  01CF  00B0               	movwf	??_saveDataToFlash+3
  7946  01D0  0830               	movf	??_saveDataToFlash+3,w
  7947  01D1  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  7948  01D2  3000               	movlw	0
  7949  01D3  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  7950                           
  7951                           ;functions.c: 1158: IncreaseMemoryAdress();
  7952  01D8  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  7953                           
  7954                           ;functions.c: 1160: value = AnalogValue(7);
  7955  01DD  3007               	movlw	7
  7956  01DE  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  7957  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  7958  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  7959  01E5  00AD               	movwf	??_saveDataToFlash
  7960  01E6  082D               	movf	??_saveDataToFlash,w
  7961  01E7  00B8               	movwf	saveDataToFlash@value
  7962                           
  7963                           ;functions.c: 1161: ReadMemoryAdress(&addr3, &addr2, &addr1);
  7964  01E8  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  7965  01E9  00AD               	movwf	??_saveDataToFlash
  7966  01EA  082D               	movf	??_saveDataToFlash,w
  7967  01EB  00F2               	movwf	i1ReadMemoryAdress@var2
  7968  01EC  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  7969  01ED  00AE               	movwf	??_saveDataToFlash+1
  7970  01EE  082E               	movf	??_saveDataToFlash+1,w
  7971  01EF  00F3               	movwf	i1ReadMemoryAdress@var1
  7972  01F0  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  7973  01F1  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  7974                           
  7975                           ;functions.c: 1162: read_write_flash_ram(
  7976                           ;functions.c: 1163: 0,
  7977                           ;functions.c: 1164: 1,
  7978                           ;functions.c: 1165: addr3,
  7979                           ;functions.c: 1166: addr2,
  7980                           ;functions.c: 1167: addr1,
  7981                           ;functions.c: 1168: &value);
  7982  01F6  3001               	movlw	1
  7983  01F7  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  7984  01F8  3000               	movlw	0
  7985  01F9  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  7986  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  7987  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  7988  01FC  083B               	movf	saveDataToFlash@addr3,w
  7989  01FD  00AD               	movwf	??_saveDataToFlash
  7990  01FE  082D               	movf	??_saveDataToFlash,w
  7991  01FF  00F7               	movwf	i1read_write_flash_ram@flash_sector
  7992  0200  083A               	movf	saveDataToFlash@addr2,w
  7993  0201  00AE               	movwf	??_saveDataToFlash+1
  7994  0202  082E               	movf	??_saveDataToFlash+1,w
  7995  0203  00F8               	movwf	i1read_write_flash_ram@flash_page
  7996  0204  0839               	movf	saveDataToFlash@addr1,w
  7997  0205  00AF               	movwf	??_saveDataToFlash+2
  7998  0206  082F               	movf	??_saveDataToFlash+2,w
  7999  0207  00F9               	movwf	i1read_write_flash_ram@offset
  8000  0208  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  8001  0209  00B0               	movwf	??_saveDataToFlash+3
  8002  020A  0830               	movf	??_saveDataToFlash+3,w
  8003  020B  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  8004  020C  3000               	movlw	0
  8005  020D  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  8006                           
  8007                           ;functions.c: 1169: IncreaseMemoryAdress();
  8008  0212  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  8009                           
  8010                           ;functions.c: 1172: value = AnalogValue(6);
  8011  0217  3006               	movlw	6
  8012  0218  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  8013  021D  1283               	bcf	3,5	;RP0=0, select bank0
  8014  021E  1303               	bcf	3,6	;RP1=0, select bank0
  8015  021F  00AD               	movwf	??_saveDataToFlash
  8016  0220  082D               	movf	??_saveDataToFlash,w
  8017  0221  00B8               	movwf	saveDataToFlash@value
  8018                           
  8019                           ;functions.c: 1173: ReadMemoryAdress(&addr3, &addr2, &addr1);
  8020  0222  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  8021  0223  00AD               	movwf	??_saveDataToFlash
  8022  0224  082D               	movf	??_saveDataToFlash,w
  8023  0225  00F2               	movwf	i1ReadMemoryAdress@var2
  8024  0226  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  8025  0227  00AE               	movwf	??_saveDataToFlash+1
  8026  0228  082E               	movf	??_saveDataToFlash+1,w
  8027  0229  00F3               	movwf	i1ReadMemoryAdress@var1
  8028  022A  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  8029  022B  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  8030                           
  8031                           ;functions.c: 1174: read_write_flash_ram(
  8032                           ;functions.c: 1175: 0,
  8033                           ;functions.c: 1176: 1,
  8034                           ;functions.c: 1177: addr3,
  8035                           ;functions.c: 1178: addr2,
  8036                           ;functions.c: 1179: addr1,
  8037                           ;functions.c: 1180: &value);
  8038  0230  3001               	movlw	1
  8039  0231  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  8040  0232  3000               	movlw	0
  8041  0233  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  8042  0234  1283               	bcf	3,5	;RP0=0, select bank0
  8043  0235  1303               	bcf	3,6	;RP1=0, select bank0
  8044  0236  083B               	movf	saveDataToFlash@addr3,w
  8045  0237  00AD               	movwf	??_saveDataToFlash
  8046  0238  082D               	movf	??_saveDataToFlash,w
  8047  0239  00F7               	movwf	i1read_write_flash_ram@flash_sector
  8048  023A  083A               	movf	saveDataToFlash@addr2,w
  8049  023B  00AE               	movwf	??_saveDataToFlash+1
  8050  023C  082E               	movf	??_saveDataToFlash+1,w
  8051  023D  00F8               	movwf	i1read_write_flash_ram@flash_page
  8052  023E  0839               	movf	saveDataToFlash@addr1,w
  8053  023F  00AF               	movwf	??_saveDataToFlash+2
  8054  0240  082F               	movf	??_saveDataToFlash+2,w
  8055  0241  00F9               	movwf	i1read_write_flash_ram@offset
  8056  0242  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  8057  0243  00B0               	movwf	??_saveDataToFlash+3
  8058  0244  0830               	movf	??_saveDataToFlash+3,w
  8059  0245  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  8060  0246  3000               	movlw	0
  8061  0247  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  8062                           
  8063                           ;functions.c: 1181: IncreaseMemoryAdress();
  8064  024C  120A  158A  2129  120A  118A  	fcall	_IncreaseMemoryAdress
  8065                           
  8066                           ;functions.c: 1184: value = AnalogValue(8);
  8067  0251  3008               	movlw	8
  8068  0252  160A  118A  26AF  120A  118A  	fcall	i1_AnalogValue
  8069  0257  1283               	bcf	3,5	;RP0=0, select bank0
  8070  0258  1303               	bcf	3,6	;RP1=0, select bank0
  8071  0259  00AD               	movwf	??_saveDataToFlash
  8072  025A  082D               	movf	??_saveDataToFlash,w
  8073  025B  00B8               	movwf	saveDataToFlash@value
  8074                           
  8075                           ;functions.c: 1185: ReadMemoryAdress(&addr3, &addr2, &addr1);
  8076  025C  303A               	movlw	(low (saveDataToFlash@addr2| 0))& (0+255)
  8077  025D  00AD               	movwf	??_saveDataToFlash
  8078  025E  082D               	movf	??_saveDataToFlash,w
  8079  025F  00F2               	movwf	i1ReadMemoryAdress@var2
  8080  0260  3039               	movlw	(low (saveDataToFlash@addr1| 0))& (0+255)
  8081  0261  00AE               	movwf	??_saveDataToFlash+1
  8082  0262  082E               	movf	??_saveDataToFlash+1,w
  8083  0263  00F3               	movwf	i1ReadMemoryAdress@var1
  8084  0264  303B               	movlw	(low (saveDataToFlash@addr3| 0))& (0+255)
  8085  0265  160A  118A  25F9  120A  118A  	fcall	i1_ReadMemoryAdress
  8086                           
  8087                           ;functions.c: 1186: read_write_flash_ram(
  8088                           ;functions.c: 1187: 0,
  8089                           ;functions.c: 1188: 1,
  8090                           ;functions.c: 1189: addr3,
  8091                           ;functions.c: 1190: addr2,
  8092                           ;functions.c: 1191: addr1,
  8093                           ;functions.c: 1192: &value);
  8094  026A  3001               	movlw	1
  8095  026B  00F5               	movwf	i1read_write_flash_ram@bytes_to_readwrite
  8096  026C  3000               	movlw	0
  8097  026D  00F6               	movwf	i1read_write_flash_ram@bytes_to_readwrite+1
  8098  026E  1283               	bcf	3,5	;RP0=0, select bank0
  8099  026F  1303               	bcf	3,6	;RP1=0, select bank0
  8100  0270  083B               	movf	saveDataToFlash@addr3,w
  8101  0271  00AD               	movwf	??_saveDataToFlash
  8102  0272  082D               	movf	??_saveDataToFlash,w
  8103  0273  00F7               	movwf	i1read_write_flash_ram@flash_sector
  8104  0274  083A               	movf	saveDataToFlash@addr2,w
  8105  0275  00AE               	movwf	??_saveDataToFlash+1
  8106  0276  082E               	movf	??_saveDataToFlash+1,w
  8107  0277  00F8               	movwf	i1read_write_flash_ram@flash_page
  8108  0278  0839               	movf	saveDataToFlash@addr1,w
  8109  0279  00AF               	movwf	??_saveDataToFlash+2
  8110  027A  082F               	movf	??_saveDataToFlash+2,w
  8111  027B  00F9               	movwf	i1read_write_flash_ram@offset
  8112  027C  3038               	movlw	(low (saveDataToFlash@value| 0))& (0+255)
  8113  027D  00B0               	movwf	??_saveDataToFlash+3
  8114  027E  0830               	movf	??_saveDataToFlash+3,w
  8115  027F  00FA               	movwf	i1read_write_flash_ram@mem_ptr
  8116  0280  3000               	movlw	0
  8117  0281  120A  158A  231B  120A  118A  	fcall	i1_read_write_flash_ram
  8118                           
  8119                           ;functions.c: 1193: IncreaseMemoryAdress();
  8120  0286  120A  158A  2129   	fcall	_IncreaseMemoryAdress
  8121  0289  0008               	return
  8122  028A                     __end_of_saveDataToFlash:	
  8123                           
  8124                           	psect	text44
  8125  0B1B                     __ptext44:	
  8126 ;; *************** function i1_read_write_flash_ram *****************
  8127 ;; Defined at:
  8128 ;;		line 107 in file "m25p16.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  one_read_zer    1    wreg     unsigned char 
  8131 ;;  bytes_to_rea    2    5[COMMON] unsigned short 
  8132 ;;  flash_sector    1    7[COMMON] unsigned char 
  8133 ;;  flash_page      1    8[COMMON] unsigned char 
  8134 ;;  offset          1    9[COMMON] unsigned char 
  8135 ;;  mem_ptr         1   10[COMMON] PTR unsigned char 
  8136 ;;		 -> SendMemoryData@value(1), saveDataToFlash@value(1), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  one_read_zer    1    0[BANK0 ] unsigned char 
  8139 ;;  read_write_f    2    1[BANK0 ] unsigned short 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8149 ;;      Params:         6       0       0       0       0
  8150 ;;      Locals:         0       3       0       0       0
  8151 ;;      Temps:          2       0       0       0       0
  8152 ;;      Totals:         8       3       0       0       0
  8153 ;;Total ram usage:       11 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    3
  8156 ;; This function calls:
  8157 ;;		i1_ReadSPI
  8158 ;;		i1_WriteSPI
  8159 ;;		i1_read_ram_status
  8160 ;; This function is called by:
  8161 ;;		_saveDataToFlash
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function i1_read_write_flash_ram
  8167  0B1B                     i1_read_write_flash_ram:	
  8168                           
  8169                           ;incstack = 0
  8170 ;; hardware stack exceeded
  8171                           ; Regs used in i1_read_write_flash_ram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8172                           ;i1read_write_flash_ram@one_read_zero_write stored from wreg
  8173  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  8174  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  8175  0B1D  00A0               	movwf	i1read_write_flash_ram@one_read_zero_write
  8176                           
  8177                           ;m25p16.c: 122: unsigned short int i;
  8178                           ;m25p16.c: 126: RD3 = 0;
  8179  0B1E  1188               	bcf	8,3	;volatile
  8180                           
  8181                           ;m25p16.c: 127: if(one_read_zero_write)
  8182  0B1F  0820               	movf	i1read_write_flash_ram@one_read_zero_write,w
  8183  0B20  1903               	btfsc	3,2
  8184  0B21  2B24               	goto	i1l3102
  8185                           
  8186                           ;m25p16.c: 128: {
  8187                           ;m25p16.c: 129: WriteSPI(0x03);
  8188  0B22  3003               	movlw	3
  8189  0B23  2B32               	goto	L5
  8190  0B24                     i1l3102:	
  8191                           ;m25p16.c: 130: }
  8192                           
  8193                           
  8194                           ;m25p16.c: 131: else
  8195                           ;m25p16.c: 132: {
  8196                           ;m25p16.c: 133: WriteSPI(0x06);
  8197  0B24  3006               	movlw	6
  8198  0B25  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8199                           
  8200                           ;m25p16.c: 134: RD3 = 1;
  8201  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  8202  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  8203  0B2C  1588               	bsf	8,3	;volatile
  8204                           
  8205                           ;m25p16.c: 135: _delay((unsigned long)((1)*(4000000/4000000.0)));
  8206  0B2D  0000               	nop
  8207                           
  8208                           ;m25p16.c: 136: RD3 = 0;
  8209  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8210  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8211  0B30  1188               	bcf	8,3	;volatile
  8212                           
  8213                           ;m25p16.c: 137: WriteSPI(0x02);
  8214  0B31  3002               	movlw	2
  8215  0B32                     L5:	
  8216  0B32  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8217                           
  8218                           ;m25p16.c: 139: }
  8219                           ;m25p16.c: 141: WriteSPI(flash_sector);
  8220  0B37  0877               	movf	i1read_write_flash_ram@flash_sector,w
  8221  0B38  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8222                           
  8223                           ;m25p16.c: 142: WriteSPI(flash_page);
  8224  0B3D  0878               	movf	i1read_write_flash_ram@flash_page,w
  8225  0B3E  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8226                           
  8227                           ;m25p16.c: 143: WriteSPI(offset);
  8228  0B43  0879               	movf	i1read_write_flash_ram@offset,w
  8229  0B44  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8230                           
  8231                           ;m25p16.c: 145: for (i=0;i<bytes_to_readwrite;i++)
  8232  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  8233  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  8234  0B4B  01A1               	clrf	i1read_write_flash_ram@i
  8235  0B4C  01A2               	clrf	i1read_write_flash_ram@i+1
  8236  0B4D                     i1l3120:	
  8237  0B4D  0876               	movf	i1read_write_flash_ram@bytes_to_readwrite+1,w
  8238  0B4E  0222               	subwf	i1read_write_flash_ram@i+1,w
  8239  0B4F  1D03               	skipz
  8240  0B50  2B53               	goto	u224_25
  8241  0B51  0875               	movf	i1read_write_flash_ram@bytes_to_readwrite,w
  8242  0B52  0221               	subwf	i1read_write_flash_ram@i,w
  8243  0B53                     u224_25:	
  8244  0B53  1803               	btfsc	3,0
  8245  0B54  2B7E               	goto	i1l589
  8246                           
  8247                           ;m25p16.c: 146: {
  8248                           ;m25p16.c: 147: if (one_read_zero_write)
  8249  0B55  0820               	movf	i1read_write_flash_ram@one_read_zero_write,w
  8250  0B56  1903               	btfsc	3,2
  8251  0B57  2B69               	goto	i1l3116
  8252                           
  8253                           ;m25p16.c: 148: {
  8254                           ;m25p16.c: 149: mem_ptr[i] = ReadSPI();
  8255  0B58  160A  118A  2450  120A  158A  	fcall	i1_ReadSPI
  8256  0B5D  00FB               	movwf	??i1_read_write_flash_ram
  8257  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  8258  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  8259  0B60  0821               	movf	i1read_write_flash_ram@i,w
  8260  0B61  077A               	addwf	i1read_write_flash_ram@mem_ptr,w
  8261  0B62  00FC               	movwf	??i1_read_write_flash_ram+1
  8262  0B63  087C               	movf	??i1_read_write_flash_ram+1,w
  8263  0B64  0084               	movwf	4
  8264  0B65  087B               	movf	??i1_read_write_flash_ram,w
  8265  0B66  1383               	bcf	3,7	;select IRP bank0
  8266  0B67  0080               	movwf	0
  8267                           
  8268                           ;m25p16.c: 150: }
  8269  0B68  2B75               	goto	i1l3118
  8270  0B69                     i1l3116:	
  8271                           
  8272                           ;m25p16.c: 151: else
  8273                           ;m25p16.c: 152: {
  8274                           ;m25p16.c: 153: WriteSPI(mem_ptr[i]);
  8275  0B69  0821               	movf	i1read_write_flash_ram@i,w
  8276  0B6A  077A               	addwf	i1read_write_flash_ram@mem_ptr,w
  8277  0B6B  00FB               	movwf	??i1_read_write_flash_ram
  8278  0B6C  087B               	movf	??i1_read_write_flash_ram,w
  8279  0B6D  0084               	movwf	4
  8280  0B6E  1383               	bcf	3,7	;select IRP bank0
  8281  0B6F  0800               	movf	0,w
  8282  0B70  160A  118A  2489  120A  158A  	fcall	i1_WriteSPI
  8283  0B75                     i1l3118:	
  8284  0B75  3001               	movlw	1
  8285  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  8286  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  8287  0B78  07A1               	addwf	i1read_write_flash_ram@i,f
  8288  0B79  1803               	skipnc
  8289  0B7A  0AA2               	incf	i1read_write_flash_ram@i+1,f
  8290  0B7B  3000               	movlw	0
  8291  0B7C  07A2               	addwf	i1read_write_flash_ram@i+1,f
  8292  0B7D  2B4D               	goto	i1l3120
  8293  0B7E                     i1l589:	
  8294                           
  8295                           ;m25p16.c: 154: }
  8296                           ;m25p16.c: 155: }
  8297                           ;m25p16.c: 157: RD3 = 1;
  8298  0B7E  1588               	bsf	8,3	;volatile
  8299                           
  8300                           ;m25p16.c: 159: _delay((unsigned long)((1)*(4000000/4000000.0)));
  8301  0B7F  0000               	nop
  8302  0B80                     i1l3124:	
  8303                           ;m25p16.c: 160: while (read_ram_status() & 0b00000011) {
  8304                           
  8305  0B80  160A  118A  24EE  120A  158A  	fcall	i1_read_ram_status
  8306  0B85  3903               	andlw	3
  8307  0B86  1903               	btfsc	3,2
  8308  0B87  0008               	return
  8309                           
  8310                           ;m25p16.c: 161: _delay((unsigned long)((1)*(4000000/4000.0)));
  8311  0B88  30F9               	movlw	249
  8312  0B89  00FB               	movwf	??i1_read_write_flash_ram
  8313  0B8A                     u389_27:	
  8314  0B8A  0000               	nop
  8315  0B8B  0BFB               	decfsz	??i1_read_write_flash_ram,f
  8316  0B8C  2B8A               	goto	u389_27
  8317  0B8D  2B8E               	nop2	;nop
  8318  0B8E  0000               	nop
  8319  0B8F  2B80               	goto	i1l3124
  8320  0B90                     __end_ofi1_read_write_flash_ram:	
  8321                           
  8322                           	psect	text45
  8323  14EE                     __ptext45:	
  8324 ;; *************** function i1_read_ram_status *****************
  8325 ;; Defined at:
  8326 ;;		line 57 in file "m25p16.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  read_ram_sta    1    4[COMMON] unsigned char 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      unsigned char 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0, pclath, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8340 ;;      Params:         0       0       0       0       0
  8341 ;;      Locals:         1       0       0       0       0
  8342 ;;      Temps:          1       0       0       0       0
  8343 ;;      Totals:         2       0       0       0       0
  8344 ;;Total ram usage:        2 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:    2
  8347 ;; This function calls:
  8348 ;;		i1_ReadSPI
  8349 ;;		i1_WriteSPI
  8350 ;; This function is called by:
  8351 ;;		i1_read_write_flash_ram
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           
  8356                           ;psect for function i1_read_ram_status
  8357  14EE                     i1_read_ram_status:	
  8358                           
  8359                           ;m25p16.c: 59: unsigned char status;
  8360                           ;m25p16.c: 60: RD3 = 0;
  8361                           
  8362                           ;incstack = 0
  8363 ;; hardware stack exceeded
  8364                           ; Regs used in i1_read_ram_status: [wreg+status,2+status,0+pclath+cstack]
  8365  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  8366  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  8367  14F0  1188               	bcf	8,3	;volatile
  8368                           
  8369                           ;m25p16.c: 61: WriteSPI(0x05);
  8370  14F1  3005               	movlw	5
  8371  14F2  160A  118A  2489  160A  118A  	fcall	i1_WriteSPI
  8372                           
  8373                           ;m25p16.c: 62: status = ReadSPI();
  8374  14F7  160A  118A  2450   	fcall	i1_ReadSPI
  8375  14FA  00F3               	movwf	??i1_read_ram_status
  8376  14FB  0873               	movf	??i1_read_ram_status,w
  8377  14FC  00F4               	movwf	i1read_ram_status@status
  8378                           
  8379                           ;m25p16.c: 63: RD3 = 1;
  8380  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  8381  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  8382  14FF  1588               	bsf	8,3	;volatile
  8383                           
  8384                           ;m25p16.c: 64: return status;
  8385  1500  0874               	movf	i1read_ram_status@status,w
  8386  1501  0008               	return
  8387  1502                     __end_ofi1_read_ram_status:	
  8388                           
  8389                           	psect	text46
  8390  15F9                     __ptext46:	
  8391 ;; *************** function i1_ReadMemoryAdress *****************
  8392 ;; Defined at:
  8393 ;;		line 989 in file "functions.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  var3            1    wreg     PTR unsigned char 
  8396 ;;		 -> SendMemoryData@addr3(1), saveDataToFlash@addr3(1), 
  8397 ;;  var2            1    2[COMMON] PTR unsigned char 
  8398 ;;		 -> SendMemoryData@addr2(1), saveDataToFlash@addr2(1), 
  8399 ;;  var1            1    3[COMMON] PTR unsigned char 
  8400 ;;		 -> SendMemoryData@addr1(1), saveDataToFlash@addr1(1), 
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  var3            1    5[COMMON] PTR unsigned char 
  8403 ;;		 -> SendMemoryData@addr3(1), saveDataToFlash@addr3(1), 
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8413 ;;      Params:         2       0       0       0       0
  8414 ;;      Locals:         1       0       0       0       0
  8415 ;;      Temps:          1       0       0       0       0
  8416 ;;      Totals:         4       0       0       0       0
  8417 ;;Total ram usage:        4 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    1
  8420 ;; This function calls:
  8421 ;;		i1_eeprom_read
  8422 ;; This function is called by:
  8423 ;;		_saveDataToFlash
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           
  8428                           ;psect for function i1_ReadMemoryAdress
  8429  15F9                     i1_ReadMemoryAdress:	
  8430                           
  8431                           ;incstack = 0
  8432 ;; hardware stack exceeded
  8433                           ; Regs used in i1_ReadMemoryAdress: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8434                           ;i1ReadMemoryAdress@var3 stored from wreg
  8435  15F9  00F5               	movwf	i1ReadMemoryAdress@var3
  8436                           
  8437                           ;functions.c: 991: *var3 = eeprom_read(1);
  8438  15FA  3001               	movlw	1
  8439  15FB  160A  118A  2561  160A  118A  	fcall	i1_eeprom_read
  8440  1600  00F4               	movwf	??i1_ReadMemoryAdress
  8441  1601  0875               	movf	i1ReadMemoryAdress@var3,w
  8442  1602  0084               	movwf	4
  8443  1603  0874               	movf	??i1_ReadMemoryAdress,w
  8444  1604  1383               	bcf	3,7	;select IRP bank0
  8445  1605  0080               	movwf	0
  8446                           
  8447                           ;functions.c: 992: *var2 = eeprom_read(2);
  8448  1606  3002               	movlw	2
  8449  1607  160A  118A  2561  160A  118A  	fcall	i1_eeprom_read
  8450  160C  00F4               	movwf	??i1_ReadMemoryAdress
  8451  160D  0872               	movf	i1ReadMemoryAdress@var2,w
  8452  160E  0084               	movwf	4
  8453  160F  0874               	movf	??i1_ReadMemoryAdress,w
  8454  1610  1383               	bcf	3,7	;select IRP bank0
  8455  1611  0080               	movwf	0
  8456                           
  8457                           ;functions.c: 993: *var1 = eeprom_read(3);
  8458  1612  3003               	movlw	3
  8459  1613  160A  118A  2561   	fcall	i1_eeprom_read
  8460  1616  00F4               	movwf	??i1_ReadMemoryAdress
  8461  1617  0873               	movf	i1ReadMemoryAdress@var1,w
  8462  1618  0084               	movwf	4
  8463  1619  0874               	movf	??i1_ReadMemoryAdress,w
  8464  161A  1383               	bcf	3,7	;select IRP bank0
  8465  161B  0080               	movwf	0
  8466  161C  0008               	return
  8467  161D                     __end_ofi1_ReadMemoryAdress:	
  8468                           
  8469                           	psect	text47
  8470  16AF                     __ptext47:	
  8471 ;; *************** function i1_AnalogValue *****************
  8472 ;; Defined at:
  8473 ;;		line 902 in file "functions.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  channel         1    wreg     unsigned char 
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  channel         1    7[COMMON] unsigned char 
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  1    wreg      unsigned char 
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0, pclath, cstack
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8487 ;;      Params:         0       0       0       0       0
  8488 ;;      Locals:         1       0       0       0       0
  8489 ;;      Temps:          1       0       0       0       0
  8490 ;;      Totals:         2       0       0       0       0
  8491 ;;Total ram usage:        2 bytes
  8492 ;; Hardware stack levels used:    1
  8493 ;; Hardware stack levels required when called:    1
  8494 ;; This function calls:
  8495 ;;		i1_DelayDs
  8496 ;; This function is called by:
  8497 ;;		_saveDataToFlash
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function i1_AnalogValue
  8503  16AF                     i1_AnalogValue:	
  8504                           
  8505                           ;incstack = 0
  8506 ;; hardware stack exceeded
  8507                           ; Regs used in i1_AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  8508                           ;i1AnalogValue@channel stored from wreg
  8509  16AF  00F7               	movwf	i1AnalogValue@channel
  8510                           
  8511                           ;functions.c: 904: RC0 = 0;
  8512  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  8513  16B1  1303               	bcf	3,6	;RP1=0, select bank0
  8514  16B2  1007               	bcf	7,0	;volatile
  8515                           
  8516                           ;functions.c: 905: ADCON0bits.CHS = channel;
  8517  16B3  0877               	movf	i1AnalogValue@channel,w
  8518  16B4  00F6               	movwf	??i1_AnalogValue
  8519  16B5  0DF6               	rlf	??i1_AnalogValue,f
  8520  16B6  0DF6               	rlf	??i1_AnalogValue,f
  8521  16B7  081F               	movf	31,w	;volatile
  8522  16B8  0676               	xorwf	??i1_AnalogValue,w
  8523  16B9  39C3               	andlw	-61
  8524  16BA  0676               	xorwf	??i1_AnalogValue,w
  8525  16BB  009F               	movwf	31	;volatile
  8526                           
  8527                           ;functions.c: 906: ADCON0bits.ADON = 1;
  8528  16BC  141F               	bsf	31,0	;volatile
  8529                           
  8530                           ;functions.c: 907: DelayDs(1);
  8531  16BD  3001               	movlw	1
  8532  16BE  00F0               	movwf	i1DelayDs@cnt
  8533  16BF  3000               	movlw	0
  8534  16C0  00F1               	movwf	i1DelayDs@cnt+1
  8535  16C1  160A  118A  257C  160A  118A  	fcall	i1_DelayDs
  8536                           
  8537                           ;functions.c: 908: ADCON0bits.GO = 1;
  8538  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  8539  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  8540  16C8  149F               	bsf	31,1	;volatile
  8541                           
  8542                           ;functions.c: 909: DelayDs(1);
  8543  16C9  3001               	movlw	1
  8544  16CA  00F0               	movwf	i1DelayDs@cnt
  8545  16CB  3000               	movlw	0
  8546  16CC  00F1               	movwf	i1DelayDs@cnt+1
  8547  16CD  160A  118A  257C  160A  118A  	fcall	i1_DelayDs
  8548  16D2                     i1l477:	
  8549                           ;functions.c: 910: while(ADCON0bits.GO);
  8550                           
  8551  16D2  1283               	bcf	3,5	;RP0=0, select bank0
  8552  16D3  1303               	bcf	3,6	;RP1=0, select bank0
  8553  16D4  189F               	btfsc	31,1	;volatile
  8554  16D5  2ED2               	goto	i1l477
  8555                           
  8556                           ;functions.c: 911: ADCON0bits.ADON = 0;
  8557  16D6  101F               	bcf	31,0	;volatile
  8558                           
  8559                           ;functions.c: 912: RC0 = 1;
  8560  16D7  1407               	bsf	7,0	;volatile
  8561                           
  8562                           ;functions.c: 914: return ADRESH;
  8563  16D8  081E               	movf	30,w	;volatile
  8564  16D9  0008               	return
  8565  16DA                     __end_ofi1_AnalogValue:	
  8566                           
  8567                           	psect	text48
  8568  157C                     __ptext48:	
  8569 ;; *************** function i1_DelayDs *****************
  8570 ;; Defined at:
  8571 ;;		line 508 in file "functions.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  cnt             2    0[COMMON] int 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  DelayDs         2    4[COMMON] int 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8585 ;;      Params:         2       0       0       0       0
  8586 ;;      Locals:         2       0       0       0       0
  8587 ;;      Temps:          2       0       0       0       0
  8588 ;;      Totals:         6       0       0       0       0
  8589 ;;Total ram usage:        6 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		i1_AnalogValue
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function i1_DelayDs
  8600  157C                     i1_DelayDs:	
  8601                           
  8602                           ;functions.c: 509: int i;
  8603                           ;functions.c: 510: for(i=0;i<cnt;i++){
  8604                           
  8605                           ;incstack = 0
  8606 ;; hardware stack exceeded
  8607                           ; Regs used in i1_DelayDs: [wreg+status,2]
  8608  157C  01F4               	clrf	i1DelayDs@i
  8609  157D  01F5               	clrf	i1DelayDs@i+1
  8610  157E                     i1l404:	
  8611  157E  0875               	movf	i1DelayDs@i+1,w
  8612  157F  3A80               	xorlw	128
  8613  1580  00F2               	movwf	??i1_DelayDs
  8614  1581  0871               	movf	i1DelayDs@cnt+1,w
  8615  1582  3A80               	xorlw	128
  8616  1583  0272               	subwf	??i1_DelayDs,w
  8617  1584  1D03               	skipz
  8618  1585  2D88               	goto	u179_25
  8619  1586  0870               	movf	i1DelayDs@cnt,w
  8620  1587  0274               	subwf	i1DelayDs@i,w
  8621  1588                     u179_25:	
  8622  1588  1803               	btfsc	3,0
  8623  1589  0008               	return
  8624                           
  8625                           ;functions.c: 511: _delay((unsigned long)((100)*(4000000/4000.0)));
  8626  158A  3082               	movlw	130
  8627  158B  00F3               	movwf	??i1_DelayDs+1
  8628  158C  30DD               	movlw	221
  8629  158D  00F2               	movwf	??i1_DelayDs
  8630  158E                     u390_27:	
  8631  158E  0BF2               	decfsz	??i1_DelayDs,f
  8632  158F  2D8E               	goto	u390_27
  8633  1590  0BF3               	decfsz	??i1_DelayDs+1,f
  8634  1591  2D8E               	goto	u390_27
  8635  1592  2D93               	nop2
  8636  1593  3001               	movlw	1
  8637  1594  07F4               	addwf	i1DelayDs@i,f
  8638  1595  1803               	skipnc
  8639  1596  0AF5               	incf	i1DelayDs@i+1,f
  8640  1597  3000               	movlw	0
  8641  1598  07F5               	addwf	i1DelayDs@i+1,f
  8642  1599  2D7E               	goto	i1l404
  8643  159A                     __end_ofi1_DelayDs:	
  8644                           
  8645                           	psect	text49
  8646  047E                     __ptext49:	
  8647 ;; *************** function _ReadClock *****************
  8648 ;; Defined at:
  8649 ;;		line 49 in file "MCP79510.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  seconds         1    wreg     PTR unsigned char 
  8652 ;;		 -> saveDataToFlash@seconds(1), 
  8653 ;;  minutes         1    4[COMMON] PTR unsigned char 
  8654 ;;		 -> saveDataToFlash@minutes(1), 
  8655 ;;  hour            1    5[COMMON] PTR unsigned char 
  8656 ;;		 -> saveDataToFlash@hours(1), 
  8657 ;;  date            1    6[COMMON] PTR unsigned char 
  8658 ;;		 -> saveDataToFlash@date(1), 
  8659 ;;  month           1    7[COMMON] PTR unsigned char 
  8660 ;;		 -> saveDataToFlash@month(1), 
  8661 ;;  year            1    8[COMMON] PTR unsigned char 
  8662 ;;		 -> saveDataToFlash@year(1), 
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;  seconds         1    6[BANK0 ] PTR unsigned char 
  8665 ;;		 -> saveDataToFlash@seconds(1), 
  8666 ;;  date1           1   12[BANK0 ] unsigned char 
  8667 ;;  year1           1   11[BANK0 ] unsigned char 
  8668 ;;  month1          1   10[BANK0 ] unsigned char 
  8669 ;;  hour1           1    9[BANK0 ] unsigned char 
  8670 ;;  min1            1    8[BANK0 ] unsigned char 
  8671 ;;  sec1            1    7[BANK0 ] unsigned char 
  8672 ;;  year10          1    5[BANK0 ] unsigned char 
  8673 ;;  month10         1    4[BANK0 ] unsigned char 
  8674 ;;  date10          1    3[BANK0 ] unsigned char 
  8675 ;;  hour10          1    2[BANK0 ] unsigned char 
  8676 ;;  min10           1    1[BANK0 ] unsigned char 
  8677 ;;  sec10           1    0[BANK0 ] unsigned char 
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8687 ;;      Params:         5       0       0       0       0
  8688 ;;      Locals:         0      13       0       0       0
  8689 ;;      Temps:          2       0       0       0       0
  8690 ;;      Totals:         7      13       0       0       0
  8691 ;;Total ram usage:       20 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    2
  8694 ;; This function calls:
  8695 ;;		___bmul
  8696 ;;		i1_ReadSPI
  8697 ;;		i1_WriteSPI
  8698 ;; This function is called by:
  8699 ;;		_saveDataToFlash
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           
  8704                           ;psect for function _ReadClock
  8705  047E                     _ReadClock:	
  8706                           
  8707                           ;incstack = 0
  8708 ;; hardware stack exceeded
  8709                           ; Regs used in _ReadClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8710                           ;ReadClock@seconds stored from wreg
  8711  047E  1283               	bcf	3,5	;RP0=0, select bank0
  8712  047F  1303               	bcf	3,6	;RP1=0, select bank0
  8713  0480  00A6               	movwf	ReadClock@seconds
  8714                           
  8715                           ;MCP79510.c: 51: unsigned char sec10, min10, hour10, date10, month10, year10, sec1, min1
      +                          , hour1, date1, month1, year1;
  8716                           ;MCP79510.c: 53: RD4 = 0;
  8717  0481  1208               	bcf	8,4	;volatile
  8718                           
  8719                           ;MCP79510.c: 55: WriteSPI(0x13);
  8720  0482  3013               	movlw	19
  8721  0483  160A  118A  2489  120A  118A  	fcall	i1_WriteSPI
  8722                           
  8723                           ;MCP79510.c: 56: WriteSPI(0x01);
  8724  0488  3001               	movlw	1
  8725  0489  160A  118A  2489  120A  118A  	fcall	i1_WriteSPI
  8726                           
  8727                           ;MCP79510.c: 58: sec1 = ReadSPI() & 0x7F;
  8728  048E  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8729  0493  397F               	andlw	127
  8730  0494  00F9               	movwf	??_ReadClock
  8731  0495  0879               	movf	??_ReadClock,w
  8732  0496  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0497  1303               	bcf	3,6	;RP1=0, select bank0
  8734  0498  00A7               	movwf	ReadClock@sec1
  8735                           
  8736                           ;MCP79510.c: 59: min1 = ReadSPI() & 0x7F;
  8737  0499  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8738  049E  397F               	andlw	127
  8739  049F  00F9               	movwf	??_ReadClock
  8740  04A0  0879               	movf	??_ReadClock,w
  8741  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  8742  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  8743  04A3  00A8               	movwf	ReadClock@min1
  8744                           
  8745                           ;MCP79510.c: 60: hour1 = ReadSPI() & 0x3F;
  8746  04A4  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8747  04A9  393F               	andlw	63
  8748  04AA  00F9               	movwf	??_ReadClock
  8749  04AB  0879               	movf	??_ReadClock,w
  8750  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  8751  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  8752  04AE  00A9               	movwf	ReadClock@hour1
  8753                           
  8754                           ;MCP79510.c: 61: date1 = ReadSPI();
  8755  04AF  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8756  04B4  00F9               	movwf	??_ReadClock
  8757  04B5  0879               	movf	??_ReadClock,w
  8758  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  8759  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  8760  04B8  00AC               	movwf	ReadClock@date1
  8761                           
  8762                           ;MCP79510.c: 62: date1 = ReadSPI() & 0x3F;
  8763  04B9  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8764  04BE  393F               	andlw	63
  8765  04BF  00F9               	movwf	??_ReadClock
  8766  04C0  0879               	movf	??_ReadClock,w
  8767  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  8768  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  8769  04C3  00AC               	movwf	ReadClock@date1
  8770                           
  8771                           ;MCP79510.c: 63: month1 = ReadSPI() & 0x1F;
  8772  04C4  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8773  04C9  391F               	andlw	31
  8774  04CA  00F9               	movwf	??_ReadClock
  8775  04CB  0879               	movf	??_ReadClock,w
  8776  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  8777  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  8778  04CE  00AA               	movwf	ReadClock@month1
  8779                           
  8780                           ;MCP79510.c: 64: year1 = ReadSPI();
  8781  04CF  160A  118A  2450  120A  118A  	fcall	i1_ReadSPI
  8782  04D4  00F9               	movwf	??_ReadClock
  8783  04D5  0879               	movf	??_ReadClock,w
  8784  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  8785  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  8786  04D8  00AB               	movwf	ReadClock@year1
  8787                           
  8788                           ;MCP79510.c: 66: RD4 = 1;
  8789  04D9  1608               	bsf	8,4	;volatile
  8790                           
  8791                           ;MCP79510.c: 69: sec10 = (sec1 & 0x70) >> 4;
  8792  04DA  0827               	movf	ReadClock@sec1,w
  8793  04DB  00F9               	movwf	??_ReadClock
  8794  04DC  3004               	movlw	4
  8795  04DD                     u215_25:	
  8796  04DD  1003               	clrc
  8797  04DE  0CF9               	rrf	??_ReadClock,f
  8798  04DF  3EFF               	addlw	-1
  8799  04E0  1D03               	skipz
  8800  04E1  2CDD               	goto	u215_25
  8801  04E2  0879               	movf	??_ReadClock,w
  8802  04E3  3907               	andlw	7
  8803  04E4  00FA               	movwf	??_ReadClock+1
  8804  04E5  087A               	movf	??_ReadClock+1,w
  8805  04E6  00A0               	movwf	ReadClock@sec10
  8806                           
  8807                           ;MCP79510.c: 70: sec1 = sec1 & 0x0F;
  8808  04E7  0827               	movf	ReadClock@sec1,w
  8809  04E8  390F               	andlw	15
  8810  04E9  00F9               	movwf	??_ReadClock
  8811  04EA  0879               	movf	??_ReadClock,w
  8812  04EB  00A7               	movwf	ReadClock@sec1
  8813                           
  8814                           ;MCP79510.c: 71: *seconds = sec1 + sec10 * 10;
  8815  04EC  300A               	movlw	10
  8816  04ED  00F9               	movwf	??_ReadClock
  8817  04EE  0879               	movf	??_ReadClock,w
  8818  04EF  00F0               	movwf	___bmul@multiplicand
  8819  04F0  0820               	movf	ReadClock@sec10,w
  8820  04F1  160A  118A  24A7  120A  118A  	fcall	___bmul
  8821  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  8822  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  8823  04F8  0727               	addwf	ReadClock@sec1,w
  8824  04F9  00FA               	movwf	??_ReadClock+1
  8825  04FA  0826               	movf	ReadClock@seconds,w
  8826  04FB  0084               	movwf	4
  8827  04FC  087A               	movf	??_ReadClock+1,w
  8828  04FD  1383               	bcf	3,7	;select IRP bank0
  8829  04FE  0080               	movwf	0
  8830                           
  8831                           ;MCP79510.c: 73: min10 = (min1 & 0x70) >> 4;
  8832  04FF  0828               	movf	ReadClock@min1,w
  8833  0500  00F9               	movwf	??_ReadClock
  8834  0501  3004               	movlw	4
  8835  0502                     u216_25:	
  8836  0502  1003               	clrc
  8837  0503  0CF9               	rrf	??_ReadClock,f
  8838  0504  3EFF               	addlw	-1
  8839  0505  1D03               	skipz
  8840  0506  2D02               	goto	u216_25
  8841  0507  0879               	movf	??_ReadClock,w
  8842  0508  3907               	andlw	7
  8843  0509  00FA               	movwf	??_ReadClock+1
  8844  050A  087A               	movf	??_ReadClock+1,w
  8845  050B  00A1               	movwf	ReadClock@min10
  8846                           
  8847                           ;MCP79510.c: 74: min1 = min1 & 0x0F;
  8848  050C  0828               	movf	ReadClock@min1,w
  8849  050D  390F               	andlw	15
  8850  050E  00F9               	movwf	??_ReadClock
  8851  050F  0879               	movf	??_ReadClock,w
  8852  0510  00A8               	movwf	ReadClock@min1
  8853                           
  8854                           ;MCP79510.c: 75: *minutes = min1 + min10 * 10;
  8855  0511  300A               	movlw	10
  8856  0512  00F9               	movwf	??_ReadClock
  8857  0513  0879               	movf	??_ReadClock,w
  8858  0514  00F0               	movwf	___bmul@multiplicand
  8859  0515  0821               	movf	ReadClock@min10,w
  8860  0516  160A  118A  24A7  120A  118A  	fcall	___bmul
  8861  051B  1283               	bcf	3,5	;RP0=0, select bank0
  8862  051C  1303               	bcf	3,6	;RP1=0, select bank0
  8863  051D  0728               	addwf	ReadClock@min1,w
  8864  051E  00FA               	movwf	??_ReadClock+1
  8865  051F  0874               	movf	ReadClock@minutes,w
  8866  0520  0084               	movwf	4
  8867  0521  087A               	movf	??_ReadClock+1,w
  8868  0522  1383               	bcf	3,7	;select IRP bank0
  8869  0523  0080               	movwf	0
  8870                           
  8871                           ;MCP79510.c: 77: hour10 = (hour1 & 0x30) >> 4;
  8872  0524  0829               	movf	ReadClock@hour1,w
  8873  0525  00F9               	movwf	??_ReadClock
  8874  0526  3004               	movlw	4
  8875  0527                     u217_25:	
  8876  0527  1003               	clrc
  8877  0528  0CF9               	rrf	??_ReadClock,f
  8878  0529  3EFF               	addlw	-1
  8879  052A  1D03               	skipz
  8880  052B  2D27               	goto	u217_25
  8881  052C  0879               	movf	??_ReadClock,w
  8882  052D  3903               	andlw	3
  8883  052E  00FA               	movwf	??_ReadClock+1
  8884  052F  087A               	movf	??_ReadClock+1,w
  8885  0530  00A2               	movwf	ReadClock@hour10
  8886                           
  8887                           ;MCP79510.c: 78: hour1 = hour1 & 0x0F;
  8888  0531  0829               	movf	ReadClock@hour1,w
  8889  0532  390F               	andlw	15
  8890  0533  00F9               	movwf	??_ReadClock
  8891  0534  0879               	movf	??_ReadClock,w
  8892  0535  00A9               	movwf	ReadClock@hour1
  8893                           
  8894                           ;MCP79510.c: 79: *hour = hour1 + hour10 * 10;
  8895  0536  300A               	movlw	10
  8896  0537  00F9               	movwf	??_ReadClock
  8897  0538  0879               	movf	??_ReadClock,w
  8898  0539  00F0               	movwf	___bmul@multiplicand
  8899  053A  0822               	movf	ReadClock@hour10,w
  8900  053B  160A  118A  24A7  120A  118A  	fcall	___bmul
  8901  0540  1283               	bcf	3,5	;RP0=0, select bank0
  8902  0541  1303               	bcf	3,6	;RP1=0, select bank0
  8903  0542  0729               	addwf	ReadClock@hour1,w
  8904  0543  00FA               	movwf	??_ReadClock+1
  8905  0544  0875               	movf	ReadClock@hour,w
  8906  0545  0084               	movwf	4
  8907  0546  087A               	movf	??_ReadClock+1,w
  8908  0547  1383               	bcf	3,7	;select IRP bank0
  8909  0548  0080               	movwf	0
  8910                           
  8911                           ;MCP79510.c: 81: date10 = (date1 & 0x30) >> 4;
  8912  0549  082C               	movf	ReadClock@date1,w
  8913  054A  00F9               	movwf	??_ReadClock
  8914  054B  3004               	movlw	4
  8915  054C                     u218_25:	
  8916  054C  1003               	clrc
  8917  054D  0CF9               	rrf	??_ReadClock,f
  8918  054E  3EFF               	addlw	-1
  8919  054F  1D03               	skipz
  8920  0550  2D4C               	goto	u218_25
  8921  0551  0879               	movf	??_ReadClock,w
  8922  0552  3903               	andlw	3
  8923  0553  00FA               	movwf	??_ReadClock+1
  8924  0554  087A               	movf	??_ReadClock+1,w
  8925  0555  00A3               	movwf	ReadClock@date10
  8926                           
  8927                           ;MCP79510.c: 82: date1 = date1 & 0x0F;
  8928  0556  082C               	movf	ReadClock@date1,w
  8929  0557  390F               	andlw	15
  8930  0558  00F9               	movwf	??_ReadClock
  8931  0559  0879               	movf	??_ReadClock,w
  8932  055A  00AC               	movwf	ReadClock@date1
  8933                           
  8934                           ;MCP79510.c: 83: *date = date1 + date10 * 10;
  8935  055B  300A               	movlw	10
  8936  055C  00F9               	movwf	??_ReadClock
  8937  055D  0879               	movf	??_ReadClock,w
  8938  055E  00F0               	movwf	___bmul@multiplicand
  8939  055F  0823               	movf	ReadClock@date10,w
  8940  0560  160A  118A  24A7  120A  118A  	fcall	___bmul
  8941  0565  1283               	bcf	3,5	;RP0=0, select bank0
  8942  0566  1303               	bcf	3,6	;RP1=0, select bank0
  8943  0567  072C               	addwf	ReadClock@date1,w
  8944  0568  00FA               	movwf	??_ReadClock+1
  8945  0569  0876               	movf	ReadClock@date,w
  8946  056A  0084               	movwf	4
  8947  056B  087A               	movf	??_ReadClock+1,w
  8948  056C  1383               	bcf	3,7	;select IRP bank0
  8949  056D  0080               	movwf	0
  8950                           
  8951                           ;MCP79510.c: 85: month10 = (month1 & 0x10) >> 4;
  8952  056E  082A               	movf	ReadClock@month1,w
  8953  056F  00F9               	movwf	??_ReadClock
  8954  0570  3004               	movlw	4
  8955  0571                     u219_25:	
  8956  0571  1003               	clrc
  8957  0572  0CF9               	rrf	??_ReadClock,f
  8958  0573  3EFF               	addlw	-1
  8959  0574  1D03               	skipz
  8960  0575  2D71               	goto	u219_25
  8961  0576  0879               	movf	??_ReadClock,w
  8962  0577  3901               	andlw	1
  8963  0578  00FA               	movwf	??_ReadClock+1
  8964  0579  087A               	movf	??_ReadClock+1,w
  8965  057A  00A4               	movwf	ReadClock@month10
  8966                           
  8967                           ;MCP79510.c: 86: month1 = month1 & 0x0F;
  8968  057B  082A               	movf	ReadClock@month1,w
  8969  057C  390F               	andlw	15
  8970  057D  00F9               	movwf	??_ReadClock
  8971  057E  0879               	movf	??_ReadClock,w
  8972  057F  00AA               	movwf	ReadClock@month1
  8973                           
  8974                           ;MCP79510.c: 87: *month = month1 + month10 * 10;
  8975  0580  300A               	movlw	10
  8976  0581  00F9               	movwf	??_ReadClock
  8977  0582  0879               	movf	??_ReadClock,w
  8978  0583  00F0               	movwf	___bmul@multiplicand
  8979  0584  0824               	movf	ReadClock@month10,w
  8980  0585  160A  118A  24A7  120A  118A  	fcall	___bmul
  8981  058A  1283               	bcf	3,5	;RP0=0, select bank0
  8982  058B  1303               	bcf	3,6	;RP1=0, select bank0
  8983  058C  072A               	addwf	ReadClock@month1,w
  8984  058D  00FA               	movwf	??_ReadClock+1
  8985  058E  0877               	movf	ReadClock@month,w
  8986  058F  0084               	movwf	4
  8987  0590  087A               	movf	??_ReadClock+1,w
  8988  0591  1383               	bcf	3,7	;select IRP bank0
  8989  0592  0080               	movwf	0
  8990                           
  8991                           ;MCP79510.c: 89: year10 = (year1 & 0xF0) >> 4;
  8992  0593  082B               	movf	ReadClock@year1,w
  8993  0594  00F9               	movwf	??_ReadClock
  8994  0595  3004               	movlw	4
  8995  0596                     u220_25:	
  8996  0596  1003               	clrc
  8997  0597  0CF9               	rrf	??_ReadClock,f
  8998  0598  3EFF               	addlw	-1
  8999  0599  1D03               	skipz
  9000  059A  2D96               	goto	u220_25
  9001  059B  0879               	movf	??_ReadClock,w
  9002  059C  390F               	andlw	15
  9003  059D  00FA               	movwf	??_ReadClock+1
  9004  059E  087A               	movf	??_ReadClock+1,w
  9005  059F  00A5               	movwf	ReadClock@year10
  9006                           
  9007                           ;MCP79510.c: 90: year1 = year1 & 0x0F;
  9008  05A0  082B               	movf	ReadClock@year1,w
  9009  05A1  390F               	andlw	15
  9010  05A2  00F9               	movwf	??_ReadClock
  9011  05A3  0879               	movf	??_ReadClock,w
  9012  05A4  00AB               	movwf	ReadClock@year1
  9013                           
  9014                           ;MCP79510.c: 91: *year = year1 + year10 * 10;
  9015  05A5  300A               	movlw	10
  9016  05A6  00F9               	movwf	??_ReadClock
  9017  05A7  0879               	movf	??_ReadClock,w
  9018  05A8  00F0               	movwf	___bmul@multiplicand
  9019  05A9  0825               	movf	ReadClock@year10,w
  9020  05AA  160A  118A  24A7   	fcall	___bmul
  9021  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  9022  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  9023  05AF  072B               	addwf	ReadClock@year1,w
  9024  05B0  00FA               	movwf	??_ReadClock+1
  9025  05B1  0878               	movf	ReadClock@year,w
  9026  05B2  0084               	movwf	4
  9027  05B3  087A               	movf	??_ReadClock+1,w
  9028  05B4  1383               	bcf	3,7	;select IRP bank0
  9029  05B5  0080               	movwf	0
  9030  05B6  0008               	return
  9031  05B7                     __end_of_ReadClock:	
  9032                           
  9033                           	psect	text50
  9034  1450                     __ptext50:	
  9035 ;; *************** function i1_ReadSPI *****************
  9036 ;; Defined at:
  9037 ;;		line 529 in file "functions.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      unsigned char 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0, pclath, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9051 ;;      Params:         0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0
  9054 ;;      Totals:         0       0       0       0       0
  9055 ;;Total ram usage:        0 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    1
  9058 ;; This function calls:
  9059 ;;		i1_WriteSPI
  9060 ;; This function is called by:
  9061 ;;		_ReadClock
  9062 ;;		i1_read_ram_status
  9063 ;;		i1_read_write_flash_ram
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           
  9068                           ;psect for function i1_ReadSPI
  9069  1450                     i1_ReadSPI:	
  9070                           
  9071                           ;functions.c: 531: WriteSPI(0x00);
  9072                           
  9073                           ;incstack = 0
  9074 ;; hardware stack exceeded
  9075                           ; Regs used in i1_ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  9076  1450  3000               	movlw	0
  9077  1451  160A  118A  2489   	fcall	i1_WriteSPI
  9078                           
  9079                           ;functions.c: 532: return SSPBUF;
  9080  1454  1283               	bcf	3,5	;RP0=0, select bank0
  9081  1455  1303               	bcf	3,6	;RP1=0, select bank0
  9082  1456  0813               	movf	19,w	;volatile
  9083  1457  0008               	return
  9084  1458                     __end_ofi1_ReadSPI:	
  9085                           
  9086                           	psect	text51
  9087  1489                     __ptext51:	
  9088 ;; *************** function i1_WriteSPI *****************
  9089 ;; Defined at:
  9090 ;;		line 517 in file "functions.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  databyte        1    wreg     unsigned char 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  databyte        1    2[COMMON] unsigned char 
  9095 ;;  WriteSPI        1    1[COMMON] unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9105 ;;      Params:         0       0       0       0       0
  9106 ;;      Locals:         2       0       0       0       0
  9107 ;;      Temps:          1       0       0       0       0
  9108 ;;      Totals:         3       0       0       0       0
  9109 ;;Total ram usage:        3 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_ReadClock
  9115 ;;		i1_ReadSPI
  9116 ;;		i1_read_ram_status
  9117 ;;		i1_read_write_flash_ram
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           
  9122                           ;psect for function i1_WriteSPI
  9123  1489                     i1_WriteSPI:	
  9124                           
  9125                           ;incstack = 0
  9126 ;; hardware stack exceeded
  9127                           ; Regs used in i1_WriteSPI: [wreg]
  9128                           ;i1WriteSPI@databyte stored from wreg
  9129  1489  00F2               	movwf	i1WriteSPI@databyte
  9130                           
  9131                           ;functions.c: 519: unsigned char buffer;
  9132                           ;functions.c: 520: buffer = SSPBUF;
  9133  148A  1283               	bcf	3,5	;RP0=0, select bank0
  9134  148B  1303               	bcf	3,6	;RP1=0, select bank0
  9135  148C  0813               	movf	19,w	;volatile
  9136  148D  00F0               	movwf	??i1_WriteSPI
  9137  148E  0870               	movf	??i1_WriteSPI,w
  9138  148F  00F1               	movwf	i1WriteSPI@buffer
  9139                           
  9140                           ;functions.c: 521: PIR1bits.SSPIF=0;
  9141  1490  118C               	bcf	12,3	;volatile
  9142                           
  9143                           ;functions.c: 522: SSPBUF = databyte;
  9144  1491  0872               	movf	i1WriteSPI@databyte,w
  9145  1492  0093               	movwf	19	;volatile
  9146  1493                     i1l410:	
  9147                           ;functions.c: 523: while(PIR1bits.SSPIF == 0);
  9148                           
  9149  1493  1D8C               	btfss	12,3	;volatile
  9150  1494  2C93               	goto	i1l410
  9151                           
  9152                           ;functions.c: 524: PIR1bits.SSPIF = 0;
  9153  1495  118C               	bcf	12,3	;volatile
  9154  1496  0008               	return
  9155  1497                     __end_ofi1_WriteSPI:	
  9156                           
  9157                           	psect	text52
  9158  14A7                     __ptext52:	
  9159 ;; *************** function ___bmul *****************
  9160 ;; Defined at:
  9161 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  multiplier      1    wreg     unsigned char 
  9164 ;;  multiplicand    1    0[COMMON] unsigned char 
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  multiplier      1    3[COMMON] unsigned char 
  9167 ;;  product         1    2[COMMON] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      unsigned char 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9177 ;;      Params:         1       0       0       0       0
  9178 ;;      Locals:         2       0       0       0       0
  9179 ;;      Temps:          1       0       0       0       0
  9180 ;;      Totals:         4       0       0       0       0
  9181 ;;Total ram usage:        4 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_ReadClock
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           
  9191                           ;psect for function ___bmul
  9192  14A7                     ___bmul:	
  9193                           
  9194                           ;incstack = 0
  9195 ;; hardware stack exceeded
  9196                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9197                           ;___bmul@multiplier stored from wreg
  9198  14A7  00F3               	movwf	___bmul@multiplier
  9199  14A8  01F2               	clrf	___bmul@product
  9200  14A9                     i1l2802:	
  9201  14A9  1C73               	btfss	___bmul@multiplier,0
  9202  14AA  2CAF               	goto	i1l2806
  9203  14AB  0870               	movf	___bmul@multiplicand,w
  9204  14AC  00F1               	movwf	??___bmul
  9205  14AD  0871               	movf	??___bmul,w
  9206  14AE  07F2               	addwf	___bmul@product,f
  9207  14AF                     i1l2806:	
  9208  14AF  1003               	clrc
  9209  14B0  0DF0               	rlf	___bmul@multiplicand,f
  9210  14B1  1003               	clrc
  9211  14B2  0CF3               	rrf	___bmul@multiplier,f
  9212  14B3  0873               	movf	___bmul@multiplier,w
  9213  14B4  1D03               	btfss	3,2
  9214  14B5  2CA9               	goto	i1l2802
  9215  14B6  0872               	movf	___bmul@product,w
  9216  14B7  0008               	return
  9217  14B8                     __end_of___bmul:	
  9218                           
  9219                           	psect	text53
  9220  0929                     __ptext53:	
  9221 ;; *************** function _IncreaseMemoryAdress *****************
  9222 ;; Defined at:
  9223 ;;		line 1014 in file "functions.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;		None
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  var3            1    6[COMMON] unsigned char 
  9228 ;;  var2            1    5[COMMON] unsigned char 
  9229 ;;  var1            1    4[COMMON] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9239 ;;      Params:         0       0       0       0       0
  9240 ;;      Locals:         3       0       0       0       0
  9241 ;;      Temps:          1       0       0       0       0
  9242 ;;      Totals:         4       0       0       0       0
  9243 ;;Total ram usage:        4 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    1
  9246 ;; This function calls:
  9247 ;;		i1_eeprom_read
  9248 ;;		i1_eeprom_write
  9249 ;; This function is called by:
  9250 ;;		_saveDataToFlash
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           
  9255                           ;psect for function _IncreaseMemoryAdress
  9256  0929                     _IncreaseMemoryAdress:	
  9257                           
  9258                           ;functions.c: 1016: unsigned char var1, var2, var3;
  9259                           ;functions.c: 1017: var1 = eeprom_read(3);
  9260                           
  9261                           ;incstack = 0
  9262 ;; hardware stack exceeded
  9263                           ; Regs used in _IncreaseMemoryAdress: [wreg+status,2+status,0+pclath+cstack]
  9264  0929  3003               	movlw	3
  9265  092A  160A  118A  2561  120A  158A  	fcall	i1_eeprom_read
  9266  092F  00F3               	movwf	??_IncreaseMemoryAdress
  9267  0930  0873               	movf	??_IncreaseMemoryAdress,w
  9268  0931  00F4               	movwf	IncreaseMemoryAdress@var1
  9269                           
  9270                           ;functions.c: 1018: var1++;
  9271  0932  3001               	movlw	1
  9272  0933  00F3               	movwf	??_IncreaseMemoryAdress
  9273  0934  0873               	movf	??_IncreaseMemoryAdress,w
  9274  0935  07F4               	addwf	IncreaseMemoryAdress@var1,f
  9275                           
  9276                           ;functions.c: 1019: eeprom_write(3,var1);
  9277  0936  0874               	movf	IncreaseMemoryAdress@var1,w
  9278  0937  00F3               	movwf	??_IncreaseMemoryAdress
  9279  0938  0873               	movf	??_IncreaseMemoryAdress,w
  9280  0939  00F0               	movwf	i1eeprom_write@value
  9281  093A  3003               	movlw	3
  9282  093B  160A  118A  2689  120A  158A  	fcall	i1_eeprom_write
  9283                           
  9284                           ;functions.c: 1020: if(var1 == 0)
  9285  0940  0874               	movf	IncreaseMemoryAdress@var1,w
  9286  0941  1D03               	btfss	3,2
  9287  0942  0008               	return
  9288                           
  9289                           ;functions.c: 1021: {
  9290                           ;functions.c: 1022: var2 = eeprom_read(2);
  9291  0943  3002               	movlw	2
  9292  0944  160A  118A  2561  120A  158A  	fcall	i1_eeprom_read
  9293  0949  00F3               	movwf	??_IncreaseMemoryAdress
  9294  094A  0873               	movf	??_IncreaseMemoryAdress,w
  9295  094B  00F5               	movwf	IncreaseMemoryAdress@var2
  9296                           
  9297                           ;functions.c: 1023: var2++;
  9298  094C  3001               	movlw	1
  9299  094D  00F3               	movwf	??_IncreaseMemoryAdress
  9300  094E  0873               	movf	??_IncreaseMemoryAdress,w
  9301  094F  07F5               	addwf	IncreaseMemoryAdress@var2,f
  9302                           
  9303                           ;functions.c: 1024: eeprom_write(2,var2);
  9304  0950  0875               	movf	IncreaseMemoryAdress@var2,w
  9305  0951  00F3               	movwf	??_IncreaseMemoryAdress
  9306  0952  0873               	movf	??_IncreaseMemoryAdress,w
  9307  0953  00F0               	movwf	i1eeprom_write@value
  9308  0954  3002               	movlw	2
  9309  0955  160A  118A  2689  120A  158A  	fcall	i1_eeprom_write
  9310                           
  9311                           ;functions.c: 1025: if(var2 == 0)
  9312  095A  0875               	movf	IncreaseMemoryAdress@var2,w
  9313  095B  1D03               	btfss	3,2
  9314  095C  0008               	return
  9315                           
  9316                           ;functions.c: 1026: {
  9317                           ;functions.c: 1027: var3 = eeprom_read(1);
  9318  095D  3001               	movlw	1
  9319  095E  160A  118A  2561  120A  158A  	fcall	i1_eeprom_read
  9320  0963  00F3               	movwf	??_IncreaseMemoryAdress
  9321  0964  0873               	movf	??_IncreaseMemoryAdress,w
  9322  0965  00F6               	movwf	IncreaseMemoryAdress@var3
  9323                           
  9324                           ;functions.c: 1028: var3++;
  9325  0966  3001               	movlw	1
  9326  0967  00F3               	movwf	??_IncreaseMemoryAdress
  9327  0968  0873               	movf	??_IncreaseMemoryAdress,w
  9328  0969  07F6               	addwf	IncreaseMemoryAdress@var3,f
  9329                           
  9330                           ;functions.c: 1029: if(var3 > 0x1F)
  9331  096A  3020               	movlw	32
  9332  096B  0276               	subwf	IncreaseMemoryAdress@var3,w
  9333  096C  1C03               	skipc
  9334  096D  2972               	goto	i1l3034
  9335                           
  9336                           ;functions.c: 1030: var3 = 0x1F;
  9337  096E  301F               	movlw	31
  9338  096F  00F3               	movwf	??_IncreaseMemoryAdress
  9339  0970  0873               	movf	??_IncreaseMemoryAdress,w
  9340  0971  00F6               	movwf	IncreaseMemoryAdress@var3
  9341  0972                     i1l3034:	
  9342                           
  9343                           ;functions.c: 1032: eeprom_write(1, var3);
  9344  0972  0876               	movf	IncreaseMemoryAdress@var3,w
  9345  0973  00F3               	movwf	??_IncreaseMemoryAdress
  9346  0974  0873               	movf	??_IncreaseMemoryAdress,w
  9347  0975  00F0               	movwf	i1eeprom_write@value
  9348  0976  3001               	movlw	1
  9349  0977  160A  118A  2689   	fcall	i1_eeprom_write
  9350  097A  0008               	return
  9351  097B                     __end_of_IncreaseMemoryAdress:	
  9352                           
  9353                           	psect	text54
  9354  1689                     __ptext54:	
  9355 ;; *************** function i1_eeprom_write *****************
  9356 ;; Defined at:
  9357 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eewrite.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  addr            1    wreg     unsigned char 
  9360 ;;  value           1    0[COMMON] unsigned char 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  addr            1    2[COMMON] unsigned char 
  9363 ;; Return value:  Size  Location     Type
  9364 ;;                  1    wreg      void 
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         1       0       0       0       0
  9373 ;;      Locals:         1       0       0       0       0
  9374 ;;      Temps:          1       0       0       0       0
  9375 ;;      Totals:         3       0       0       0       0
  9376 ;;Total ram usage:        3 bytes
  9377 ;; Hardware stack levels used:    1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_IncreaseMemoryAdress
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function i1_eeprom_write
  9387  1689                     i1_eeprom_write:	
  9388                           
  9389                           ;incstack = 0
  9390 ;; hardware stack exceeded
  9391                           ; Regs used in i1_eeprom_write: [wreg+status,2+status,0]
  9392                           ;i1eeprom_write@addr stored from wreg
  9393  1689  00F2               	movwf	i1eeprom_write@addr
  9394  168A                     i1l694:	
  9395  168A  1683               	bsf	3,5	;RP0=1, select bank3
  9396  168B  1703               	bsf	3,6	;RP1=1, select bank3
  9397  168C  188C               	btfsc	12,1	;volsfr
  9398  168D  2E8A               	goto	i1l694
  9399  168E  0872               	movf	i1eeprom_write@addr,w
  9400  168F  1283               	bcf	3,5	;RP0=0, select bank2
  9401  1690  1703               	bsf	3,6	;RP1=1, select bank2
  9402  1691  008D               	movwf	13	;volatile
  9403  1692  0870               	movf	i1eeprom_write@value,w
  9404  1693  008C               	movwf	12	;volatile
  9405  1694  303F               	movlw	63
  9406  1695  00F1               	movwf	??i1_eeprom_write
  9407  1696  0871               	movf	??i1_eeprom_write,w
  9408  1697  1683               	bsf	3,5	;RP0=1, select bank3
  9409  1698  1703               	bsf	3,6	;RP1=1, select bank3
  9410  1699  058C               	andwf	12,f	;volsfr
  9411  169A  1283               	bcf	3,5	;RP0=0, select bank0
  9412  169B  1303               	bcf	3,6	;RP1=0, select bank0
  9413  169C  1003               	bcf	3,0	;volatile
  9414  169D  1B8B               	btfsc	11,7	;volatile
  9415  169E  1403               	bsf	3,0	;volatile
  9416  169F  138B               	bcf	11,7	;volatile
  9417  16A0  1683               	bsf	3,5	;RP0=1, select bank3
  9418  16A1  1703               	bsf	3,6	;RP1=1, select bank3
  9419  16A2  150C               	bsf	12,2	;volsfr
  9420  16A3  3055               	movlw	85
  9421  16A4  008D               	movwf	13	;volsfr
  9422  16A5  30AA               	movlw	170
  9423  16A6  008D               	movwf	13	;volsfr
  9424  16A7  148C               	bsf	12,1	;volsfr
  9425  16A8  110C               	bcf	12,2	;volsfr
  9426  16A9  1283               	bcf	3,5	;RP0=0, select bank0
  9427  16AA  1303               	bcf	3,6	;RP1=0, select bank0
  9428  16AB  1C03               	btfss	3,0	;volatile
  9429  16AC  0008               	return
  9430  16AD  178B               	bsf	11,7	;volatile
  9431  16AE  0008               	return
  9432  16AF                     __end_ofi1_eeprom_write:	
  9433                           
  9434                           	psect	text55
  9435  1561                     __ptext55:	
  9436 ;; *************** function i1_eeprom_read *****************
  9437 ;; Defined at:
  9438 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  addr            1    wreg     unsigned char 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  addr            1    1[COMMON] unsigned char 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      unsigned char 
  9445 ;; Registers used:
  9446 ;;		wreg, status,2, status,0
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9452 ;;      Params:         0       0       0       0       0
  9453 ;;      Locals:         1       0       0       0       0
  9454 ;;      Temps:          1       0       0       0       0
  9455 ;;      Totals:         2       0       0       0       0
  9456 ;;Total ram usage:        2 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_IncreaseMemoryAdress
  9462 ;;		i1_ReadMemoryAdress
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function i1_eeprom_read
  9468  1561                     i1_eeprom_read:	
  9469                           
  9470                           ;incstack = 0
  9471 ;; hardware stack exceeded
  9472                           ; Regs used in i1_eeprom_read: [wreg+status,2+status,0]
  9473                           ;i1eeprom_read@addr stored from wreg
  9474  1561  00F1               	movwf	i1eeprom_read@addr
  9475  1562                     i1l672:	
  9476  1562  0064               	clrwdt	;# 
  9477  1563  1683               	bsf	3,5	;RP0=1, select bank3
  9478  1564  1703               	bsf	3,6	;RP1=1, select bank3
  9479  1565  188C               	btfsc	12,1	;volsfr
  9480  1566  2D62               	goto	i1l672
  9481  1567  0871               	movf	i1eeprom_read@addr,w
  9482  1568  1283               	bcf	3,5	;RP0=0, select bank2
  9483  1569  1703               	bsf	3,6	;RP1=1, select bank2
  9484  156A  008D               	movwf	13	;volatile
  9485  156B  303F               	movlw	63
  9486  156C  00F0               	movwf	??i1_eeprom_read
  9487  156D  0870               	movf	??i1_eeprom_read,w
  9488  156E  1683               	bsf	3,5	;RP0=1, select bank3
  9489  156F  1703               	bsf	3,6	;RP1=1, select bank3
  9490  1570  058C               	andwf	12,f	;volsfr
  9491  1571  140C               	bsf	12,0	;volsfr
  9492  1572  1003               	clrc
  9493  1573  180C               	btfsc	12,0	;volsfr
  9494  1574  1403               	setc
  9495  1575  3000               	movlw	0
  9496  1576  1803               	skipnc
  9497  1577  3001               	movlw	1
  9498  1578  1283               	bcf	3,5	;RP0=0, select bank2
  9499  1579  1703               	bsf	3,6	;RP1=1, select bank2
  9500  157A  080C               	movf	12,w	;volatile
  9501  157B  0008               	return
  9502  157C                     __end_ofi1_eeprom_read:	
  9503                           
  9504                           	psect	text56
  9505  0814                     __ptext56:	
  9506 ;; *************** function _TimerCounter *****************
  9507 ;; Defined at:
  9508 ;;		line 412 in file "functions.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  i               2    3[COMMON] int 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9522 ;;      Params:         0       0       0       0       0
  9523 ;;      Locals:         2       0       0       0       0
  9524 ;;      Temps:          3       0       0       0       0
  9525 ;;      Totals:         5       0       0       0       0
  9526 ;;Total ram usage:        5 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_tc_int
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function _TimerCounter
  9537  0814                     _TimerCounter:	
  9538                           
  9539                           ;functions.c: 414: for (int i = 0; i < 5; i++)
  9540                           
  9541                           ;incstack = 0
  9542 ;; hardware stack exceeded
  9543                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  9544  0814  01F3               	clrf	TimerCounter@i
  9545  0815  01F4               	clrf	TimerCounter@i+1
  9546  0816                     L6:	
  9547  0816  0874               	movf	TimerCounter@i+1,w
  9548  0817  3A80               	xorlw	128
  9549  0818  00FF               	movwf	127
  9550  0819  3080               	movlw	128
  9551  081A  027F               	subwf	127,w
  9552  081B  1D03               	skipz
  9553  081C  281F               	goto	u244_25
  9554  081D  3005               	movlw	5
  9555  081E  0273               	subwf	TimerCounter@i,w
  9556  081F                     u244_25:	
  9557  081F  1803               	btfsc	3,0
  9558  0820  0008               	return
  9559                           
  9560                           ;functions.c: 415: {
  9561                           ;functions.c: 416: if(intClockTimer[i]>0)
  9562  0821  0873               	movf	TimerCounter@i,w
  9563  0822  00F0               	movwf	??_TimerCounter
  9564  0823  0770               	addwf	??_TimerCounter,w
  9565  0824  3E43               	addlw	(low (_intClockTimer| 0))& (0+255)
  9566  0825  0084               	movwf	4
  9567  0826  1383               	bcf	3,7	;select IRP bank0
  9568  0827  0800               	movf	0,w
  9569  0828  00F1               	movwf	??_TimerCounter+1
  9570  0829  0A84               	incf	4,f
  9571  082A  0800               	movf	0,w
  9572  082B  00F2               	movwf	??_TimerCounter+2
  9573  082C  0872               	movf	??_TimerCounter+2,w
  9574  082D  3A80               	xorlw	128
  9575  082E  00FF               	movwf	127
  9576  082F  3080               	movlw	128
  9577  0830  027F               	subwf	127,w
  9578  0831  1D03               	skipz
  9579  0832  2835               	goto	u245_25
  9580  0833  3001               	movlw	1
  9581  0834  0271               	subwf	??_TimerCounter+1,w
  9582  0835                     u245_25:	
  9583  0835  1C03               	skipc
  9584  0836  2849               	goto	i1l3362
  9585                           
  9586                           ;functions.c: 417: intClockTimer[i]--;
  9587  0837  0873               	movf	TimerCounter@i,w
  9588  0838  00F0               	movwf	??_TimerCounter
  9589  0839  0770               	addwf	??_TimerCounter,w
  9590  083A  3E43               	addlw	(low (_intClockTimer| 0))& (0+255)
  9591  083B  0084               	movwf	4
  9592  083C  30FF               	movlw	255
  9593  083D  1383               	bcf	3,7	;select IRP bank0
  9594  083E  0780               	addwf	0,f
  9595  083F  0F84               	incfsz	4,f
  9596  0840  0800               	movf	0,w
  9597  0841  1803               	skipnc
  9598  0842  0A00               	incf	0,w
  9599  0843  00FF               	movwf	127
  9600  0844  30FF               	movlw	255
  9601  0845  077F               	addwf	127,w
  9602  0846  0080               	movwf	0
  9603  0847  0384               	decf	4,f
  9604  0848  284F               	goto	i1l3364
  9605  0849                     i1l3362:	
  9606                           
  9607                           ;functions.c: 418: else
  9608                           ;functions.c: 419: bTimerComplete[i] = 1;
  9609  0849  0873               	movf	TimerCounter@i,w
  9610  084A  3E4D               	addlw	(low (_bTimerComplete| 0))& (0+255)
  9611  084B  0084               	movwf	4
  9612  084C  1383               	bcf	3,7	;select IRP bank0
  9613  084D  0180               	clrf	0
  9614  084E  0A80               	incf	0,f
  9615  084F                     i1l3364:	
  9616  084F  3001               	movlw	1
  9617  0850  07F3               	addwf	TimerCounter@i,f
  9618  0851  1803               	skipnc
  9619  0852  0AF4               	incf	TimerCounter@i+1,f
  9620  0853  3000               	movlw	0
  9621  0854  07F4               	addwf	TimerCounter@i+1,f
  9622  0855  2816               	goto	L6
  9623  0856                     __end_of_TimerCounter:	
  9624  007E                     btemp	set	126	;btemp
  9625  007E                     wtemp	set	126
  9626  007E                     wtemp0	set	126
  9627  0080                     wtemp1	set	128
  9628  0082                     wtemp2	set	130
  9629  0084                     wtemp3	set	132
  9630  0086                     wtemp4	set	134
  9631  0088                     wtemp5	set	136
  9632  007F                     wtemp6	set	127
  9633  007E                     ttemp	set	126
  9634  007E                     ttemp0	set	126
  9635  0081                     ttemp1	set	129
  9636  0084                     ttemp2	set	132
  9637  0087                     ttemp3	set	135
  9638  007F                     ttemp4	set	127
  9639  007E                     ltemp	set	126
  9640  007E                     ltemp0	set	126
  9641  0082                     ltemp1	set	130
  9642  0086                     ltemp2	set	134
  9643  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    39
    Data        3
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     35      68
    BANK1            80     54      56
    BANK3            96     34      74
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransiverReadFIFO@ReceivedString(BANK3[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransiverReadFIFO@ReceivedString(BANK3[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransiverReadFIFO@ReceivedString(BANK3[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransiverReadFIFO@ReceivedString(BANK3[30]), 

    ReadClock@year	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@year(BANK0[1]), 

    ReadClock@month	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@month(BANK0[1]), 

    ReadClock@date	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@date(BANK0[1]), 

    ReadClock@hour	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@hours(BANK0[1]), 

    ReadClock@minutes	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@minutes(BANK0[1]), 

    ReadClock@seconds	PTR unsigned char  size(1) Largest target is 1
		 -> saveDataToFlash@seconds(BANK0[1]), 

    read_write_flash_ram@mem_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> SendMemoryData@value(BANK1[1]), saveDataToFlash@value(BANK0[1]), 

    ReadMemoryAdress@var1	PTR unsigned char  size(1) Largest target is 1
		 -> SendMemoryData@addr1(BANK1[1]), saveDataToFlash@addr1(BANK0[1]), 

    ReadMemoryAdress@var2	PTR unsigned char  size(1) Largest target is 1
		 -> SendMemoryData@addr2(BANK1[1]), saveDataToFlash@addr2(BANK0[1]), 

    ReadMemoryAdress@var3	PTR unsigned char  size(1) Largest target is 1
		 -> SendMemoryData@addr3(BANK1[1]), saveDataToFlash@addr3(BANK0[1]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransiverReadFIFO@ReceivedString(BANK3[30]), 

    ReceivedPacketHandler@Data	PTR unsigned char  size(1) Largest target is 30
		 -> TransiverReadFIFO@ReceivedString(BANK3[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _saveDataToFlash->i1_read_write_flash_ram
    i1_read_write_flash_ram->i1_read_ram_status
    i1_read_ram_status->i1_WriteSPI
    i1_ReadMemoryAdress->i1_eeprom_read
    i1_AnalogValue->i1_DelayDs
    _ReadClock->___bmul
    i1_ReadSPI->i1_WriteSPI
    _IncreaseMemoryAdress->i1_eeprom_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    _tc_int->_saveDataToFlash
    _saveDataToFlash->_ReadClock

Critical Paths under _main in BANK1

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_ReceivedPacketHandler
    _ReceivedPacketHandler->_SendMemoryData
    _write_ram_status->_read_ram_status
    _strstr->_strncmp
    _strncmp->_strlen
    _ram_bulk_erase->_read_ram_status
    _SendMemoryData->_TransmittPacket
    _read_write_flash_ram->_read_ram_status
    _read_ram_status->_WriteSPI
    _ReadMemoryAdress->_eeprom_read
    _ResetMemoryAdress->_eeprom_write
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittPacket
    _Mode_4->_TransmittPacket
    _TransmittPacket->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs
    _ClockInit->_WriteSPI
    _ReadSPI->_WriteSPI

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_TransiverReadFIFO

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  106013
                                             51 BANK1      3     3      0
                          _ClockInit
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_4
                             _Mode_5
                      _OperationMode
                            _PICInit
                  _ResetMemoryAdress
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                     _ram_bulk_erase
                    _read_ram_status
                   _write_ram_status
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0   12302
                                             21 BANK1      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                   36    36      0   43552
                                             49 BANK1      2     2      0
                                              0 BANK3     34    34      0
                           _ReadFIFO
              _ReceivedPacketHandler
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _ReceivedPacketHandler                                2     2      0   39441
                                             47 BANK1      2     2      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                  _ResetMemoryAdress
                     _SendMemoryData
                    _TransmittPacket
                        _eeprom_read
                       _eeprom_write
                     _ram_bulk_erase
                    _read_ram_status
                             _strstr
                   _write_ram_status
 ---------------------------------------------------------------------------------
 (1) _write_ram_status                                     1     1      0     167
                                              5 BANK1      1     1      0
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1247
                                             14 BANK1      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     379
                                              8 BANK1      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     163
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     234
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ram_bulk_erase                                       0     0      0     136
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (3) _SendMemoryData                                      20    20      0   19279
                                             27 BANK1     20    20      0
                   _ReadMemoryAdress
                    _TransmittPacket
               _read_write_flash_ram
 ---------------------------------------------------------------------------------
 (4) _read_write_flash_ram                                11     5      6    3772
                                              5 BANK1     11     5      6
                            _ReadSPI
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (2) _read_ram_status                                      2     2      0     102
                                              3 BANK1      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadMemoryAdress                                     4     2      2    1481
                                              2 BANK1      4     2      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _ResetMemoryAdress                                    0     0      0     496
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     496
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      34
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      68
                                              3 BANK1      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   12730
                                             21 BANK1      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2    1291
                                              6 BANK1      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _PICInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               1     1      0   15464
                                             27 BANK1      1     1      0
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   15464
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (3) _TransmittPacket                                      6     5      1   13356
                                             21 BANK1      6     5      1
                        _AnalogValue (ARG)
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                        _eeprom_read (ARG)
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      65
                                              3 BANK1      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    5882
                                             14 BANK1      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2873
                                             11 BANK1      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2517
                                              7 BANK1      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     167
                                              3 BANK1      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    2108
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0    1245
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    2108
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    2108
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     863
                                              0 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0    1245
                                              8 BANK1      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0    1177
                                              6 BANK1      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2    1146
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ClockInit                                            2     2      0     105
                                              3 BANK1      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadSPI                                              0     0      0      34
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             3     3      0      34
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tc_int                                              7     7      0    6156
                                             28 BANK0      7     7      0
                       _TimerCounter
                    _saveDataToFlash
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (11) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _saveDataToFlash                                    15    15      0    6021
                                             13 BANK0     15    15      0
               _IncreaseMemoryAdress
                          _ReadClock
                      i1_AnalogValue
                 i1_ReadMemoryAdress
             i1_read_write_flash_ram
 ---------------------------------------------------------------------------------
 (12) i1_read_write_flash_ram                             11     5      6    1659
                                              5 COMMON     8     2      6
                                              0 BANK0      3     3      0
                          i1_ReadSPI
                         i1_WriteSPI
                  i1_read_ram_status
 ---------------------------------------------------------------------------------
 (13) i1_read_ram_status                                   2     2      0      69
                                              3 COMMON     2     2      0
                          i1_ReadSPI
                         i1_WriteSPI
 ---------------------------------------------------------------------------------
 (12) i1_ReadMemoryAdress                                  4     2      2     608
                                              2 COMMON     4     2      2
                      i1_eeprom_read
 ---------------------------------------------------------------------------------
 (12) i1_AnalogValue                                       2     2      0     120
                                              6 COMMON     2     2      0
                          i1_DelayDs
 ---------------------------------------------------------------------------------
 (13) i1_DelayDs                                           6     4      2      98
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (12) _ReadClock                                          20    15      5    1551
                                              4 COMMON     7     2      5
                                              0 BANK0     13    13      0
                             ___bmul
                          i1_ReadSPI
                         i1_WriteSPI
 ---------------------------------------------------------------------------------
 (14) i1_ReadSPI                                           0     0      0      23
                         i1_WriteSPI
 ---------------------------------------------------------------------------------
 (14) i1_WriteSPI                                          3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (13) ___bmul                                              4     3      1     476
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (12) _IncreaseMemoryAdress                                4     4      0     283
                                              3 COMMON     4     4      0
                      i1_eeprom_read
                     i1_eeprom_write
 ---------------------------------------------------------------------------------
 (13) i1_eeprom_write                                      3     2      1     122
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (13) i1_eeprom_read                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClockInit
     _ReadSPI
       _WriteSPI
     _WriteSPI
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _OperationMode
   _PICInit
   _ResetMemoryAdress
     _eeprom_write
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _ReceivedPacketHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _ResetMemoryAdress
         _eeprom_write
       _SendMemoryData
         _ReadMemoryAdress
           _eeprom_read
         _TransmittPacket
           _AnalogValue (ARG)
             _DelayDs
           _FindChannel (ARG)
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
             _SetRFMode
               _RegisterRead
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _RegisterSet
                 _RegisterRead (ARG)
                   _ReadSPI
                     _WriteSPI
                   _WriteSPI
                 _WriteSPI (ARG)
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet (ARG)
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode (ARG)
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
           _WriteFIFO (ARG)
             _WriteSPI
           _eeprom_read (ARG)
           _timerFunction (ARG)
         _read_write_flash_ram
           _ReadSPI
             _WriteSPI
           _WriteSPI
           _read_ram_status
             _ReadSPI
               _WriteSPI
             _WriteSPI
       _TransmittPacket
         _AnalogValue (ARG)
           _DelayDs
         _FindChannel (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet (ARG)
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO (ARG)
           _WriteSPI
         _eeprom_read (ARG)
         _timerFunction (ARG)
       _eeprom_read
       _eeprom_write
       _ram_bulk_erase
         _WriteSPI
         _read_ram_status
           _ReadSPI
             _WriteSPI
           _WriteSPI
       _read_ram_status
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _write_ram_status
         _WriteSPI
         _read_ram_status
           _ReadSPI
             _WriteSPI
           _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _ram_bulk_erase
     _WriteSPI
     _read_ram_status
       _ReadSPI
         _WriteSPI
       _WriteSPI
   _read_ram_status
     _ReadSPI
       _WriteSPI
     _WriteSPI
   _write_ram_status
     _WriteSPI
     _read_ram_status
       _ReadSPI
         _WriteSPI
       _WriteSPI

 _tc_int (ROOT)
   _TimerCounter
   _saveDataToFlash
     _IncreaseMemoryAdress
       i1_eeprom_read
       i1_eeprom_write
     _ReadClock
       ___bmul
       i1_ReadSPI
         i1_WriteSPI
       i1_WriteSPI
     i1_AnalogValue
       i1_DelayDs
     i1_ReadMemoryAdress
       i1_eeprom_read
     i1_read_write_flash_ram
       i1_ReadSPI
         i1_WriteSPI
       i1_WriteSPI
       i1_read_ram_status
         i1_ReadSPI
           i1_WriteSPI
         i1_WriteSPI
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     22      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     36      38       7       70.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D3      12        0.0%
ABS                  0      0      D3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Mar 16 18:11:29 2017

                               __CFG_CP$ON 0000                   __size_of_read_ram_status 0018  
                                        pc 0002                 __size_of_TransiverReadFIFO 006E  
             i1read_write_flash_ram@offset 0079                      _bTransiverModeReceive 00D7  
                           ___bmul@product 0072                                 i1_WriteSPI 1489  
                              _SSPSTATbits 0094                                         l79 0FA2  
                                       _RD 0C60                                __CFG_CPD$ON 0000  
                                       _WR 0C61              i1read_write_flash_ram@mem_ptr 007A  
                          _saveDataToFlash 003F                                         fsr 0004  
                      ??i1_read_ram_status 0073                                        l311 02F8  
                                      l312 0313                                        l305 047D  
                                      l410 152B                                        l404 1621  
            __size_of_read_write_flash_ram 0083                                        l309 02DD  
                                      l361 1487                                        l345 0D3F  
                                      l434 0B17                                        l380 0926  
                                      l356 15D4                                        l395 09FF  
                                      l477 17F8                                        l398 0A05  
                                      l655 0CAA                                        l672 1647  
                                      l589 0BFD                                        l694 1763  
                                      _GIE 005F                                        _RA1 0029  
                                      _RB0 0030                                        _RB1 0031  
                                      _RC0 0038                                        _RA4 002C  
                                      _RC1 0039                                        _RB3 0033  
                                      _RA5 002D                                        _RC2 003A  
                                      _RB4 0034                                        _RB5 0035  
                                      _RD3 0043                                        _RD4 0044  
                    __end_of_DarknessCheck 07FD                                        fsr0 0004  
                                      indf 0000                           TransmittPacket@i 00B8  
                      __end_of_FindChannel 07D6                            ??_timerFunction 00A4  
                             __CFG_LVP$OFF 0000                                       l1156 1505  
                                     l1168 0859                                       l4110 0409  
                                     l4030 02A2                                       l4008 06CD  
                                     l4104 03F3                                       l4040 02CC  
                                     l4130 0457                                       l4114 0415  
                                     l4106 03FB                                       l4034 02B9  
                                     l4124 042E                                       l4060 0340  
                                     l4142 08ED                                       l4126 0439  
                                     l4070 0361                                       l4134 045B  
                                     l4312 0C88                                       l4152 0906  
                                     l4080 0385                                       l4322 15C5  
                                     l4170 1796                                       l4058 032E  
                                     l4092 03B7                                       l4412 0F47  
                                     l4086 039E                                       l4344 0810  
                                     l4096 03CC                                       l4360 09C6  
                                     l4338 14D8                                       l4098 03DC  
                                     l4450 0FDA                                       l4442 0FC0  
                                     l4434 0FA6                                       l3732 07B1  
                                     l3740 07D4                                       l3716 06FB  
                                     l4268 0F11                                       l3734 0789  
                                     l4358 09B3                                       l4454 0FE7  
                                     l4446 0FCD                                       l4438 0FB3  
                                     l3680 0AC9                                       l3736 07C1  
                                     l3816 0D48                                       l4392 0A94  
                                     l4384 0A73                                       l3682 0AD8  
                                     l3690 0B04                                       l3850 0B9D  
                                     l3906 150E                                       l4458 0FF1  
                                     l3684 0AE7                                       l3940 15F0  
                                     l4388 0A8D                                       l3686 0AF6  
                                     l3678 0ABC                                       l3790 0CEB  
                                     l3926 1757                __size_of_TransiverToReceive 005D  
                                     l3792 0CFE                                       l3872 0C01  
                                     l3864 0BE8                                       l3880 171C  
                                     l3952 089E                                       l3960 08D5  
                                     l3866 0BF4                                       l3890 0878  
                                     l3972 07E2                                       l3868 0BCC  
                                     l3964 08DE                                       l3878 170D  
                                     l3894 088E                                       l3958 08BC  
                                     l3976 07FB                                       l3896 0897  
                                     l3994 065A                                       STR_1 102D  
                                     STR_2 1035                                       u3113 06CB  
                                     u3105 067C                                       u3055 05DF  
                                     u3065 0605                                       u3083 0658  
                                     u3075 062B                                       u3095 0667  
                                     u2745 06F9                                       u2905 0BD2  
                                     u3545 0A63                                       u3395 17A0  
                                     u3707 0F41                                       u2765 0794  
                                     u3717 0F54                                       u2791 1645  
                                     u2775 07D2                                       u3807 0D08  
                                     u3727 0F65                                       _RBIF 0058  
                                     u2785 162B                                       u3817 0D4C  
                                     u3737 0F8B                                       u3827 0D5A  
                                     u3747 0F9C                                       u3837 06E5  
                                     u3757 0996                                       u3847 07BB  
                                     u3767 09D0                                       u3857 1633  
                                     u3777 0A9A                                       u3697 0F30  
                                     u3867 0C2F                                       u3787 0C0D  
                                     u3877 0C4D                                       u3797 0CCE  
                                     u3887 0C6B                            __end_of_PICInit 0A3C  
                                     _WREN 0C62                             ??_eeprom_write 00A1  
                     i1AnalogValue@channel 0077                     i1ReadMemoryAdress@var1 0073  
                   i1ReadMemoryAdress@var2 0072                     i1ReadMemoryAdress@var3 0075  
                __end_ofi1_read_ram_status 1502                                       _main 0F16  
                                     btemp 007E                                       ltemp 007E  
                                     start 0012                                       ttemp 007E  
                                     wtemp 007E                              __CFG_IESO$OFF 0000  
                          __end_of_DelayDs 1641           __size_of_LightWithSensController 0049  
                        ___bmul@multiplier 0073                            __end_of_ReadSPI 1460  
               SendMemoryData@finalAddress 00C4                                      ?_main 0070  
                         ReadClock@month10 0024                                      _EEADR 010D  
                            __CFG_WDTE$OFF 0000                           ReadClock@minutes 0074  
                         ReadClock@seconds 0026                                      _CARRY 0018  
                                    _ANSEL 0188                      __end_of_OperationMode 147C  
                                    _T1CON 0010                             __CFG_DEBUG$OFF 0000  
                                    i1l410 1493                                      i1l404 157E  
                                    i1l463 0DA2                                      i1l477 16D2  
                                    i1l469 0DEB                                      i1l672 1562  
                                    i1l589 0B7E                                      i1l694 168A  
                                    _TMR1H 000F                                      _TMR1L 000E  
                                    _PORTA 0005                                      _PORTB 0006  
                                    _PORTC 0007                                      _PORTD 0008  
                                    _PORTE 0009                                      _TRISA 0085  
                                    _TRISB 0086                                      _TRISC 0087  
                                    _TRISD 0088                                      _SSPIE 0463  
                                    _TRISE 0089                      read_write_flash_ram@i 00AE  
                                    _Blink 1790                         __size_ofi1_DelayDs 001E  
                                    _bDark 00D6                             __CFG_FCMEN$OFF 0000  
                       __size_ofi1_ReadSPI 0008                    ??_ReceivedPacketHandler 00CF  
                              _AnalogValue 17C7                             __CFG_BOREN$OFF 0000  
                                    pclath 000A                                      ltemp0 007E  
                                    ltemp1 0082                                      ltemp2 0086  
                                    ltemp3 0080                            ??_TransiverInit 00B5  
                                    ttemp0 007E                                      ttemp1 0081  
                                    ttemp2 0084                                      ttemp3 0087  
                                    ttemp4 007F                                      status 0003  
                            _intBlinkCycle 0056                                      wtemp0 007E  
                                    wtemp1 0080                                      wtemp2 0082  
                                    wtemp3 0084                                      wtemp4 0086  
                                    wtemp5 0088                                      wtemp6 007F  
                           WriteSPI@buffer 00A1                       ReadMemoryAdress@var1 00A3  
                     ReadMemoryAdress@var2 00A2                       ReadMemoryAdress@var3 00A5  
                         __end_of_ChannelP 1013                           __end_of_ChannelR 1020  
                         __end_of_ChannelS 102D                            __end_of_strncmp 089A  
                  __end_of_saveDataToFlash 028A                             __CFG_MCLRE$OFF 0000  
                            _intClockTimer 0043                          _intNumberOfBlinks 0061  
                          __initialization 0015                               __end_of_main 1000  
                         __end_of_ReadFIFO 14EE                                ?i1_WriteSPI 0070  
                            ReadFIFO@value 00A4                           ??_SendMemoryData 00BB  
                              _FindChannel 06D4                              ??_RegisterSet 00A8  
                                   ??_main 00D3                          ??_read_ram_status 00A3  
                       __size_of_ClockInit 009B                                     ?_Blink 00A6  
                   __size_ofi1_eeprom_read 001B                                  ??_PICInit 00A0  
                                   _ADRESH 001E                                     _EEDATA 010C  
                                   _EECON1 018C                                     _EECON2 018D  
                    __end_ofi1_AnalogValue 16DA                                     _ANSELH 0189  
                         __end_of_WriteSPI 152F                                     i1l3102 0B24  
                                   i1l3120 0B4D                                     i1l3034 0972  
                                   i1l3124 0B80                                     i1l3116 0B69  
                                   i1l3118 0B75                                     i1l3362 0849  
                                   i1l2802 14A9                                     i1l3364 084F  
                                   i1l3532 0D78                                     i1l2806 14AF  
                                   i1l3550 0DA5                                     i1l3556 0DC2  
                                   i1l3582 0E0A                                     i1l3574 0DEE  
                                   i1l3558 0DC3                                     i1l3586 0E1B  
                                   u220_25 0596                                     u215_25 04DD  
                                   u216_25 0502                                     u224_25 0B53  
                                   u217_25 0527                                     u218_25 054C  
                                   u219_25 0571                                     u244_25 081F  
                                ??_DelayDs 00A2                                     u245_25 0835  
                                   u270_25 0DF9                                     u262_25 0D94  
                                   u271_25 0E15                                     Blink@i 00A9  
                                   Blink@n 00A6                                     u266_25 0DBC  
                                   u179_25 1588                                     u267_25 0DD4  
                                   u390_27 158E                           _write_ram_status 1732  
                                   u389_27 0B8A                 __size_ofi1_read_ram_status 0014  
                         ??_ram_bulk_erase 00A5                   ??i1_read_write_flash_ram 007B  
                                   _TMR1IF 0060                                     _TMR1ON 0080  
             i1OperationMode@bracketStatus 0071              __size_of_IncreaseMemoryAdress 0052  
                       __size_of_ReadClock 0139                                     _SSPBUF 0013  
                                ??_ReadSPI 00A3                             __CFG_PWRTE$OFF 0000  
         i1read_write_flash_ram@flash_page 0078                                     _Mode_0 144C  
                                   _Mode_1 15B8                                     _Mode_2 147C  
                                   _Mode_4 14CA                                     _Mode_5 0800  
                       __size_of_SetRFMode 0071                          __end_ofi1_DelayDs 159A  
                     __size_of_eeprom_read 0024            TransiverReadFIFO@ReceivedString 01B8  
                                   ___bmul 14A7                          __end_ofi1_ReadSPI 1458  
                                   _tc_int 0D60                       __end_of_eeprom_write 1790  
                                   _strchr 1502                                     _strlen 1706  
                                   _strstr 089A                                     saved_w 007E  
                        _ResetMemoryAdress 1547                        __end_of_RegisterSet 15B8  
                            ?_RegisterRead 0070                         ?_ResetMemoryAdress 0070  
                       RegisterRead@adress 00A6                                  ??_strncmp 00AB  
                      __size_ofi1_WriteSPI 000E                         __size_of_WriteFIFO 0010  
                  __end_of__initialization 003B                            eeprom_read@addr 00A1  
                      ??_ResetMemoryAdress 00A3                          __end_of_ClockInit 0CAE  
                  _LightWithSensController 08E0                              _bChannelFound 0060  
                            i1_eeprom_read 1561                        ___bmul@multiplicand 0070  
                  i1read_ram_status@status 0074                           ?_saveDataToFlash 0070  
                            __end_of_Blink 17C7                             __pcstackCOMMON 0070  
                        ?_ReadMemoryAdress 00A2                               __pidataBANK0 07FD  
                             _channelFound 0052                         ??_ReadMemoryAdress 00A4  
                        __end_of_ReadClock 05B7                  __end_of_ResetMemoryAdress 1561  
                           _OPTION_REGbits 0081                                    ??_Blink 00A8  
                        __end_of_SetRFMode 0B1B                          eeprom_write@value 00A0  
                           ??_RegisterRead 00A3                                 __pbssBANK0 0043  
                               __pbssBANK1 00D6                                 __pbssBANK3 0190  
                 __size_ofi1_OperationMode 0009                                  ?_ReadFIFO 0070  
               timerFunction@intSetSeconds 00A2                         AnalogValue@channel 00A7  
             __end_of_read_write_flash_ram 0C13            __size_ofi1_read_write_flash_ram 0075  
                 __size_of_TransmittPacket 00B2                             ?i1_eeprom_read 0070  
                                  ?_Mode_0 0070                                    ?_Mode_1 0070  
                                  ?_Mode_2 0070                                    ?_Mode_4 0070  
                                  ?_Mode_5 0070                    __size_ofi1_eeprom_write 0026  
                               __pmaintext 0F16                __size_ofi1_ReadMemoryAdress 0024  
                                  ?___bmul 0070                                 __pintentry 0004  
                                  ?_tc_int 0070                                  ?_WriteSPI 0070  
                        __end_of_WriteFIFO 14A7                                    ?_strchr 00A0  
                                  ?_strlen 00A0                                _RegisterSet 159A  
                                  ?_strstr 00AE                                    _PICInit 09D8  
                            ?_TimerCounter 0070                 __end_of_TransiverToReceive 09D8  
                    __end_of_timerFunction 14CA                               ?_AnalogValue 0070  
                               __stringtab 1000                                 ??_ReadFIFO 00A3  
                      SendMemoryData@addr1 00CA                        SendMemoryData@addr2 00C9  
                      SendMemoryData@addr3 00C8             __size_of_ReceivedPacketHandler 01F4  
            __end_of_ReceivedPacketHandler 047E                                    _DelayDs 161D  
                ??_LightWithSensController 00AA                              ReadClock@date 0076  
                            ReadClock@min1 0028                              ReadClock@sec1 0027  
                            ReadClock@hour 0075                        SendMemoryData@value 00C3  
                            ReadClock@year 0078                                    _ReadSPI 1458  
                   __size_of_DarknessCheck 0027                            __size_of_Mode_0 0004  
                          __size_of_Mode_1 001F                            __size_of_Mode_2 000D  
                          __size_of_Mode_4 0012                            __size_of_Mode_5 0014  
               OperationMode@bracketStatus 00A1                            _read_ram_status 152F  
                    __size_of_eeprom_write 0030                            __size_of___bmul 0011  
                    read_ram_status@status 00A4                               ??i1_WriteSPI 0070  
                             ?_FindChannel 0070                                  _ANSELbits 0188  
                         i1WriteSPI@buffer 0071                   __end_of_write_ram_status 1760  
                               ??_WriteSPI 00A0                            __size_of_tc_int 00CC  
                   i1_read_write_flash_ram 0B1B                                    __ptext1 097B  
                                  __ptext2 0A3C                                    __ptext3 028A  
                                  __ptext4 1732                                    __ptext5 089A  
                                  __ptext6 0856                                    __ptext7 1706  
                                  __ptext8 1502                                    __ptext9 15D7  
                          __size_of_strchr 0015                            __size_of_strlen 002C  
               __size_of_ResetMemoryAdress 001A                                  _T1CONbits 0010  
                          __size_of_strstr 0046                             ??_TimerCounter 0070  
                     saveDataToFlash@addr1 0039                       saveDataToFlash@addr2 003A  
                     saveDataToFlash@addr3 003B  i1read_write_flash_ram@one_read_zero_write 0020  
  read_write_flash_ram@one_read_zero_write 00AD                       saveDataToFlash@hours 0034  
                     saveDataToFlash@month 0036                       saveDataToFlash@value 0038  
                                  clrloop0 1461                                    _strncmp 0856  
                     end_of_initialization 003B                            ??i1_eeprom_read 0070  
                       __end_ofi1_WriteSPI 1497                               _eeprom_write 1760  
                    __end_of_TransiverInit 0F16                       TransmittPacket@value 00B5  
                     TransmittPacket@topic 00BA                     __size_of_OperationMode 000B  
                        ??i1_OperationMode 0070                           WriteSPI@databyte 00A2  
                     __end_of_RegisterRead 1689                          ??_TransmittPacket 00B6  
                                i1_DelayDs 157C                              WriteFIFO@Data 00A3  
             __end_of_IncreaseMemoryAdress 097B                                    strlen@s 00A6  
                          _intBlinkCounter 0054                                  i1_ReadSPI 1450  
                     _read_write_flash_ram 0B90                              _DarknessCheck 07D6  
                  __end_of_read_ram_status 1547                      SendMemoryData@address 00CB  
                            ??_eeprom_read 00A0                             i1_eeprom_write 1689  
                          ReadClock@date10 0023                             __end_of_Mode_0 1450  
                           __end_of_Mode_1 15D7                             __end_of_Mode_2 1489  
                           __end_of_Mode_4 14DC                             __end_of_Mode_5 0814  
                                _ClockInit 0C13                            ReadClock@hour10 0022  
                           __end_of___bmul 14B8                            ReadClock@month1 002A  
                          ReadClock@year10 0025                                 ?i1_DelayDs 0070  
                   __size_ofi1_AnalogValue 002B                      ?_read_write_flash_ram 00A5  
                               ?i1_ReadSPI 0070                             __end_of_tc_int 0E2C  
                           ?_DarknessCheck 0070                              _OperationMode 1471  
                           __end_of_strchr 1517                             __end_of_strlen 1732  
                           __end_of_strstr 08E0                        start_initialization 0015  
                                _ReadClock 047E                  __size_of_ReadMemoryAdress 002C  
                  __size_of_SendMemoryData 011D                      _intDarkCheckIntervall 0058  
               DarknessCheck@darknessValue 00A9                                  _SetRFMode 0AAA  
                     __size_of_AnalogValue 0039                     __end_ofi1_eeprom_write 16AF  
                        __size_of_ReadFIFO 0012                   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                                 ??_Mode_0 00AA                                   ??_Mode_1 00AA  
                                 ??_Mode_2 00AA                                   ??_Mode_4 00BB  
                                 ??_Mode_5 00BB                       __end_of_TimerCounter 0856  
                                 ??___bmul 0071                                 ?_ClockInit 0070  
                      __end_of_eeprom_read 1665                              TimerCounter@i 0073  
                  __size_of_ram_bulk_erase 0022                                __pdataBANK0 0061  
                                 ??_tc_int 003C                   __size_of_saveDataToFlash 024B  
                             ?_RegisterSet 00A7                                   ??_strchr 00A2  
                                 ??_strlen 00A2                                   ??_strstr 00AF  
                           ?_OperationMode 0070                       __size_of_FindChannel 0102  
              read_write_flash_ram@mem_ptr 00AA                          RegisterRead@value 00A5  
                        __size_of_WriteSPI 0018                                  ___latbits 0002  
                                _WriteFIFO 1497                              __pcstackBANK0 0020  
                            __pcstackBANK1 00A0                              __pcstackBANK3 01B8  
                                 ?_PICInit 0070                                 ?_ReadClock 0074  
                             _ReceivedData 0190                     SetRFMode@mcparam0_read 00AD  
                               ?_SetRFMode 0070                              i1_AnalogValue 16AF  
                         eeprom_write@addr 00A2                                   ?_DelayDs 00A0  
                        RegisterSet@adress 00AA                       _IncreaseMemoryAdress 0929  
                         ?_read_ram_status 0070                            ?i1_eeprom_write 0070  
                             i1DelayDs@cnt 0070                     write_ram_status@status 00A5  
                       i1WriteSPI@databyte 0072                                   ?_ReadSPI 0070  
               __end_ofi1_ReadMemoryAdress 161D                      __size_of_RegisterRead 0024  
                       _TransiverToReceive 097B                        i1eeprom_write@value 0070  
                  ?i1_read_write_flash_ram 0075                        ?_TransiverToReceive 0070  
                              ??i1_DelayDs 0072                     ??_read_write_flash_ram 00AB  
                          ??_DarknessCheck 00A8                                  __pstrings 1000  
                              ??i1_ReadSPI 0073                          ?_write_ram_status 0070  
              timerFunction@intTimerNumber 00A0                         ??_write_ram_status 00A5  
                           __size_of_Blink 0037                                 ?_WriteFIFO 0070  
                          i1_OperationMode 1468                       ??_TransiverToReceive 00B5  
                             _RegisterRead 1665                             ?i1_AnalogValue 0070  
                                 ?_strncmp 00A8                      ?_IncreaseMemoryAdress 0070  
                      saveDataToFlash@date 0035                            _TransmittPacket 0CAE  
                        interrupt_function 0004                        saveDataToFlash@year 0037  
                                 _IOCBbits 0096                                   DelayDs@i 00A4  
                             FindChannel@i 00B3                      _ReceivedPacketHandler 028A  
                                clear_ram0 1460                                _eeprom_read 1641  
                                 _PIE1bits 008C                                   _PIR1bits 000C  
           __end_ofi1_read_write_flash_ram 0B90                                ??_ClockInit 00A3  
                             ClockInit@cnt 00A4                     __size_of_timerFunction 0012  
                   saveDataToFlash@minutes 0033                     saveDataToFlash@seconds 0032  
                          ??_OperationMode 00A0                              SetRFMode@mode 00AC  
                               _ADCON0bits 001F                                __stringbase 1005  
                               _ADCON1bits 009F                                   _WPUBbits 0095  
                                 _ChannelP 1006                                   _ChannelR 1013  
                                 _ChannelS 1020                                ??_ReadClock 0079  
                           ReadClock@date1 002C                             _SendMemoryData 05B7  
                         _ReadMemoryAdress 16DA                             ReadClock@min10 0021  
                           ReadClock@sec10 0020                          ??_saveDataToFlash 002D  
                           ReadClock@hour1 0029                           __size_of_PICInit 0064  
                 ?_LightWithSensController 0070                             ReadClock@month 0077  
                           ReadClock@year1 002B                                ??_SetRFMode 00AB  
                                 _ReadFIFO 14DC                      __size_of_TimerCounter 0042  
                         __size_of_DelayDs 0024         i1read_write_flash_ram@flash_sector 0077  
         read_write_flash_ram@flash_sector 00A7                      __end_ofi1_eeprom_read 157C  
                         __size_of_ReadSPI 0008                             _bTimerComplete 004D  
                           _ram_bulk_erase 15D7                           _intMinuteCounter 005C  
               read_write_flash_ram@offset 00A9                          _TransiverReadFIFO 0A3C  
                                 _WriteSPI 1517                         __end_of__stringtab 1006  
                         _intSecondCounter 005E                         ?_TransiverReadFIFO 0070  
                               _ANSELHbits 0189                    __end_ofi1_OperationMode 1471  
                   __end_of_SendMemoryData 06D4                     __size_of_TransiverInit 00EA  
                     __size_of_RegisterSet 001E                           RegisterSet@value 00A7  
                       i1eeprom_write@addr 0072                                ??_WriteFIFO 00A3  
                  __end_of_TransmittPacket 0D60                            ??i1_AnalogValue 0076  
                             _TimerCounter 0814                                   __ptext10 05B7  
                                 __ptext11 0B90                                   __ptext20 09D8  
                                 __ptext12 152F                                   __ptext21 0800  
                                 __ptext13 16DA                                   __ptext30 15B8  
                                 __ptext22 14CA                                   __ptext14 1547  
                                 __ptext31 144C                                   __ptext23 0CAE  
                                 __ptext15 1760                                   __ptext40 1517  
                                 __ptext32 08E0                                   __ptext24 1497  
                                 __ptext16 1471                                   __ptext41 0D60  
                                 __ptext33 14B8                                   __ptext25 06D4  
                                 __ptext17 14DC                                   __ptext50 1450  
                                 __ptext42 1468                                   __ptext34 07D6  
                                 __ptext26 0AAA                                   __ptext18 0E2C  
                                 __ptext51 1489                                   __ptext43 003F  
                                 __ptext35 1641                                   __ptext27 159A  
                                 __ptext19 1790                                   __ptext52 14A7  
                                 __ptext44 0B1B                                   __ptext36 17C7  
                                 __ptext28 1665                                   __ptext53 0929  
                                 __ptext45 14EE                                   __ptext37 161D  
                                 __ptext29 147C                                   __ptext54 1689  
                                 __ptext46 15F9                                   __ptext38 0C13  
                                 __ptext55 1561                                   __ptext47 16AF  
                                 __ptext39 1458                                   __ptext56 0814  
                                 __ptext48 157C                                   __ptext49 047E  
                      ??_TransiverReadFIFO 00D1                              _timerFunction 14B8  
                   ??_IncreaseMemoryAdress 0073                          i1eeprom_read@addr 0071  
                         __size_of_strncmp 0044                     ?_ReceivedPacketHandler 0070  
                            __size_of_main 00EA                                 strncmp@len 00A9  
                   __end_of_ram_bulk_erase 15F9                              _bValueFromPot 0063  
                __end_of_TransiverReadFIFO 0AAA                                 DelayDs@cnt 00A0  
                           FindChannel@cnt 00B1            __end_of_LightWithSensController 0929  
                     _intHalfSecondCounter 005A                            ?_SendMemoryData 0070  
                               _INTCONbits 000B             read_write_flash_ram@flash_page 00A8  
                       TransiverReadFIFO@i 01D6                         TransiverReadFIFO@j 01D8  
                         ??i1_eeprom_write 0071                             ?_timerFunction 00A0  
                            ??_AnalogValue 00A6                                   intlevel1 0000  
                               i1DelayDs@i 0074                                  strchr@chr 00A0  
                                strchr@ptr 00A2                              _TransiverInit 0E2C  
 i1read_write_flash_ram@bytes_to_readwrite 0075     read_write_flash_ram@bytes_to_readwrite 00A5  
                                strncmp@s1 00AD                                  strncmp@s2 00A8  
                                stringcode 1000                                 _OSCCONbits 008F  
                          ?_ram_bulk_erase 0070                              ??_FindChannel 00AE  
                       i1_ReadMemoryAdress 15F9                    i1read_write_flash_ram@i 0021  
                         ?i1_OperationMode 0070                                   strlen@cp 00A7  
                                 stringdir 1000                                   stringtab 1000  
                      ?i1_ReadMemoryAdress 0072                           ?_TransmittPacket 00B5  
                                 strstr@s1 00B2                                   strstr@s2 00AE  
                ReceivedPacketHandler@Data 00D0                  __size_of_write_ram_status 002E  
                            ?_eeprom_write 00A0                   IncreaseMemoryAdress@var1 0074  
                 IncreaseMemoryAdress@var2 0075                   IncreaseMemoryAdress@var3 0076  
                           ?_TransiverInit 0070                               ?_eeprom_read 0070  
                      __end_of_AnalogValue 1800                                 _SSPCONbits 0014  
                        i1_read_ram_status 14EE                       ??i1_ReadMemoryAdress 0074  
                       ?i1_read_ram_status 0070                   __end_of_ReadMemoryAdress 1706  
