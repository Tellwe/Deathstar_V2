

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Jan 12 20:40:30 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 1.40
    57                           ; Generated 01/12/2016 GMT
    58                           ; 
    59                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324                           
   325                           	psect	idataBANK0
   326  0003                     __pidataBANK0:	
   327                           
   328                           ;initializer for _bValueFromPot
   329  0003  3401               	retlw	1
   330                           
   331                           	psect	idataBANK1
   332  0D06                     __pidataBANK1:	
   333                           
   334                           ;initializer for _intNumberOfBlinks
   335  0D06  3458               	retlw	88
   336  0D07  3402               	retlw	2
   337                           
   338                           	psect	strings
   339  0800                     __pstrings:	
   340  0800                     stringtab:	
   341  0800                     __stringtab:	
   342  0800                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345  0800                     stringdir:	
   346  0800  3008               	movlw	high stringdir
   347  0801  008A               	movwf	10
   348  0802  0804               	movf	4,w
   349  0803  0A84               	incf	4,f
   350  0804  0782               	addwf	2,f
   351  0805                     __stringbase:	
   352  0805  3400               	retlw	0
   353  0806                     __end_of__stringtab:	
   354  0806                     _ChannelP:	
   355  0806  343F               	retlw	63
   356  0807  3447               	retlw	71
   357  0808  344F               	retlw	79
   358  0809  3457               	retlw	87
   359  080A  345F               	retlw	95
   360  080B  3477               	retlw	119
   361  080C  347E               	retlw	126
   362  080D  347F               	retlw	127
   363  080E  3486               	retlw	134
   364  080F  3487               	retlw	135
   365  0810  3437               	retlw	55
   366  0811  3467               	retlw	103
   367  0812  346F               	retlw	111
   368  0813                     __end_of_ChannelP:	
   369  0813                     _ChannelR:	
   370  0813  344F               	retlw	79
   371  0814  3459               	retlw	89
   372  0815  3463               	retlw	99
   373  0816  346D               	retlw	109
   374  0817  3477               	retlw	119
   375  0818  3495               	retlw	149
   376  0819  349F               	retlw	159
   377  081A  349F               	retlw	159
   378  081B  34A9               	retlw	169
   379  081C  34A9               	retlw	169
   380  081D  3445               	retlw	69
   381  081E  3481               	retlw	129
   382  081F  348B               	retlw	139
   383  0820                     __end_of_ChannelR:	
   384  0820                     _ChannelS:	
   385  0820  3418               	retlw	24
   386  0821  341B               	retlw	27
   387  0822  341E               	retlw	30
   388  0823  3421               	retlw	33
   389  0824  3424               	retlw	36
   390  0825  342D               	retlw	45
   391  0826  347B               	retlw	123
   392  0827  3430               	retlw	48
   393  0828  347E               	retlw	126
   394  0829  3433               	retlw	51
   395  082A  3415               	retlw	21
   396  082B  3427               	retlw	39
   397  082C  342A               	retlw	42
   398  082D                     __end_of_ChannelS:	
   399  001F                     _ADCON0bits	set	31
   400  001E                     _ADRESH	set	30
   401  000B                     _INTCONbits	set	11
   402  000C                     _PIR1bits	set	12
   403  0005                     _PORTA	set	5
   404  0006                     _PORTB	set	6
   405  0007                     _PORTC	set	7
   406  0008                     _PORTD	set	8
   407  0009                     _PORTE	set	9
   408  0013                     _SSPBUF	set	19
   409  0014                     _SSPCONbits	set	20
   410  0010                     _T1CON	set	16
   411  0010                     _T1CONbits	set	16
   412  000F                     _TMR1H	set	15
   413  000E                     _TMR1L	set	14
   414  005F                     _GIE	set	95
   415  0029                     _RA1	set	41
   416  002C                     _RA4	set	44
   417  002D                     _RA5	set	45
   418  0031                     _RB1	set	49
   419  0032                     _RB2	set	50
   420  0034                     _RB4	set	52
   421  0035                     _RB5	set	53
   422  0058                     _RBIF	set	88
   423  0038                     _RC0	set	56
   424  0039                     _RC1	set	57
   425  003A                     _RC2	set	58
   426  0040                     _RD0	set	64
   427  0043                     _RD3	set	67
   428  0044                     _RD4	set	68
   429  0060                     _TMR1IF	set	96
   430  0080                     _TMR1ON	set	128
   431  009F                     _ADCON1bits	set	159
   432  0096                     _IOCBbits	set	150
   433  0081                     _OPTION_REGbits	set	129
   434  008F                     _OSCCONbits	set	143
   435  008C                     _PIE1bits	set	140
   436  0094                     _SSPSTATbits	set	148
   437  0085                     _TRISA	set	133
   438  0086                     _TRISB	set	134
   439  0087                     _TRISC	set	135
   440  0088                     _TRISD	set	136
   441  0089                     _TRISE	set	137
   442  0095                     _WPUBbits	set	149
   443  0463                     _SSPIE	set	1123
   444  010D                     _EEADR	set	269
   445  010C                     _EEDATA	set	268
   446  0188                     _ANSEL	set	392
   447  0189                     _ANSELH	set	393
   448  0189                     _ANSELHbits	set	393
   449  0188                     _ANSELbits	set	392
   450  018C                     _EECON1	set	396
   451  0C60                     _RD	set	3168
   452  0C61                     _WR	set	3169
   453                           
   454                           ; #config settings
   455  0000                     
   456                           	psect	cinit
   457  0015                     start_initialization:	
   458  0015                     __initialization:	
   459                           
   460                           ; Initialize objects allocated to BANK1
   461  0015  1683               	bsf	3,5	;RP0=1, select bank1
   462  0016  1303               	bcf	3,6	;RP1=0, select bank1
   463  0017  120A  158A  2506  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   464  001C  00E3               	movwf	__pdataBANK1& (0+127)
   465  001D  120A  158A  2507  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   466  0022  00E4               	movwf	(__pdataBANK1+1)& (0+127)
   467                           
   468                           ; Initialize objects allocated to BANK0
   469  0023  1283               	bcf	3,5	;RP0=0, select bank0
   470  0024  1303               	bcf	3,6	;RP1=0, select bank0
   471  0025  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   472  002A  00EF               	movwf	__pdataBANK0& (0+127)
   473                           
   474                           ; Clear objects allocated to BANK3
   475  002B  1783               	bsf	3,7	;select IRP bank2
   476  002C  3090               	movlw	low __pbssBANK3
   477  002D  0084               	movwf	4
   478  002E  30EF               	movlw	low (__pbssBANK3+95)
   479  002F  120A  158A  2514  120A  118A  	fcall	clear_ram0
   480                           
   481                           ; Clear objects allocated to BANK2
   482  0034  3010               	movlw	low __pbssBANK2
   483  0035  0084               	movwf	4
   484  0036  306F               	movlw	low (__pbssBANK2+95)
   485  0037  120A  158A  2514  120A  118A  	fcall	clear_ram0
   486                           
   487                           ; Clear objects allocated to BANK1
   488  003C  1383               	bcf	3,7	;select IRP bank0
   489  003D  30A0               	movlw	low __pbssBANK1
   490  003E  0084               	movwf	4
   491  003F  30E3               	movlw	low (__pbssBANK1+67)
   492  0040  120A  158A  2514   	fcall	clear_ram0
   493                           
   494                           ; Clear objects allocated to BANK0
   495  0043  01E9               	clrf	__pbssBANK0& (0+127)
   496  0044  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   497  0045  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   498  0046  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   499  0047  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   500  0048  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   501                           
   502                           ; Clear objects allocated to COMMON
   503  0049  01FC               	clrf	__pbssCOMMON& (0+127)
   504  004A                     end_of_initialization:	
   505                           ;End of C runtime variable initialization code
   506                           
   507  004A                     __end_of__initialization:	
   508  004A  0183               	clrf	3
   509  004B  120A  118A  29A4   	ljmp	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMMON
   512  007C                     __pbssCOMMON:	
   513  007C                     _bChannelFound:	
   514  007C                     	ds	1
   515                           
   516                           	psect	bssBANK0
   517  0069                     __pbssBANK0:	
   518  0069                     _intBlinkCycle:	
   519  0069                     	ds	2
   520  006B                     _intSecondCounter:	
   521  006B                     	ds	2
   522  006D                     _bDark:	
   523  006D                     	ds	1
   524  006E                     _bTransiverModeReceive:	
   525  006E                     	ds	1
   526                           
   527                           	psect	dataBANK0
   528  006F                     __pdataBANK0:	
   529  006F                     _bValueFromPot:	
   530  006F                     	ds	1
   531                           
   532                           	psect	bssBANK1
   533  00A0                     __pbssBANK1:	
   534  00A0                     _ReceivedData:	
   535  00A0                     	ds	40
   536  00C8                     _intClockTimer:	
   537  00C8                     	ds	10
   538  00D2                     _bTimerComplete:	
   539  00D2                     	ds	5
   540  00D7                     _addressDarknessValue:	
   541  00D7                     	ds	2
   542  00D9                     _channelFound:	
   543  00D9                     	ds	2
   544  00DB                     _intBlinkCounter:	
   545  00DB                     	ds	2
   546  00DD                     _intDarkCheckIntervall:	
   547  00DD                     	ds	2
   548  00DF                     _intHalfSecondCounter:	
   549  00DF                     	ds	2
   550  00E1                     _intMinuteCounter:	
   551  00E1                     	ds	2
   552                           
   553                           	psect	dataBANK1
   554  00E3                     __pdataBANK1:	
   555  00E3                     _intNumberOfBlinks:	
   556  00E3                     	ds	2
   557                           
   558                           	psect	bssBANK3
   559  0190                     __pbssBANK3:	
   560  0190                     _var2:	
   561  0190                     	ds	95
   562                           
   563                           	psect	bssBANK2
   564  0110                     __pbssBANK2:	
   565  0110                     _var1:	
   566  0110                     	ds	95
   567                           
   568                           	psect	clrtext
   569  0D14                     clear_ram0:	
   570                           ;	Called with FSR containing the base address, and
   571                           ;	W with the last address+1
   572                           
   573  0D14  0064               	clrwdt	;clear the watchdog before getting into this loop
   574  0D15                     clrloop0:	
   575  0D15  0180               	clrf	0	;clear RAM location pointed to by FSR
   576  0D16  0A84               	incf	4,f	;increment pointer
   577  0D17  0604               	xorwf	4,w	;XOR with final address
   578  0D18  1903               	btfsc	3,2	;have we reached the end yet?
   579  0D19  3400               	retlw	0	;all done for this memory range, return
   580  0D1A  0604               	xorwf	4,w	;XOR again to restore value
   581  0D1B  2D15               	goto	clrloop0	;do the next byte
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:	
   585  0070                     ?_init:	
   586  0070                     ?_TransiverInit:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_read_ram_status:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_write_ram_status:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_ram_sector_erase:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_OperationMode:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Mode_0:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Mode_1:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Mode_2:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Mode_4:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_Mode_5:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_TransiverToReceive:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_TransiverReadFIFO:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_SetRFMode:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_RegisterRead:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_FindChannel:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_ReadFIFO:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_ReceivedPacketHandler:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_AnalogValue:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_eeprom_read:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_DarknessCheck:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_WriteFIFO:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LightWithSensController:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_TimerCounter:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_TimerCounter:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_WriteSPI:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_ReadSPI:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_tc_int:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?i1_OperationMode:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??i1_OperationMode:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_main:	
   674                           ; 1 bytes @ 0x0
   675                           
   676                           
   677                           ; 2 bytes @ 0x0
   678  0070                     	ds	1
   679  0071                     i1OperationMode@bracketStatus:	
   680                           
   681                           ; 1 bytes @ 0x1
   682  0071                     	ds	2
   683  0073                     TimerCounter@i:	
   684                           
   685                           ; 2 bytes @ 0x3
   686  0073                     	ds	2
   687  0075                     ??_tc_int:	
   688                           
   689                           ; 1 bytes @ 0x5
   690  0075                     	ds	7
   691                           
   692                           	psect	cstackBANK0
   693  0020                     __pcstackBANK0:	
   694  0020                     ??_init:	
   695  0020                     ??_OperationMode:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?_timerFunction:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0020                     ?_DelayDs:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ??_eeprom_read:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ??_WriteSPI:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0020                     timerFunction@intTimerNumber:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0020                     DelayDs@cnt:	
   714                           ; 2 bytes @ 0x0
   715                           
   716                           
   717                           ; 2 bytes @ 0x0
   718  0020                     	ds	1
   719  0021                     WriteSPI@buffer:	
   720  0021                     OperationMode@bracketStatus:	
   721                           ; 1 bytes @ 0x1
   722                           
   723  0021                     eeprom_read@addr:	
   724                           ; 1 bytes @ 0x1
   725                           
   726                           
   727                           ; 1 bytes @ 0x1
   728  0021                     	ds	1
   729  0022                     ??_DelayDs:	
   730  0022                     WriteSPI@databyte:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0022                     timerFunction@intSetSeconds:	
   734                           ; 1 bytes @ 0x2
   735                           
   736                           
   737                           ; 2 bytes @ 0x2
   738  0022                     	ds	1
   739  0023                     ??_read_ram_status:	
   740  0023                     ??_RegisterRead:	
   741                           ; 1 bytes @ 0x3
   742                           
   743  0023                     ??_ReadFIFO:	
   744                           ; 1 bytes @ 0x3
   745                           
   746  0023                     ??_WriteFIFO:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0023                     ??_ReadSPI:	
   750                           ; 1 bytes @ 0x3
   751                           
   752  0023                     WriteFIFO@Data:	
   753                           ; 1 bytes @ 0x3
   754                           
   755                           
   756                           ; 1 bytes @ 0x3
   757  0023                     	ds	1
   758  0024                     ??_timerFunction:	
   759  0024                     ReadFIFO@value:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0024                     read_ram_status@status:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0024                     DelayDs@i:	
   766                           ; 1 bytes @ 0x4
   767                           
   768                           
   769                           ; 2 bytes @ 0x4
   770  0024                     	ds	1
   771  0025                     ??_write_ram_status:	
   772  0025                     ??_ram_sector_erase:	
   773                           ; 1 bytes @ 0x5
   774                           
   775  0025                     ?_read_write_flash_ram:	
   776                           ; 1 bytes @ 0x5
   777                           
   778  0025                     RegisterRead@value:	
   779                           ; 1 bytes @ 0x5
   780                           
   781  0025                     ram_sector_erase@sector:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  0025                     write_ram_status@status:	
   785                           ; 1 bytes @ 0x5
   786                           
   787  0025                     read_write_flash_ram@bytes_to_readwrite:	
   788                           ; 1 bytes @ 0x5
   789                           
   790                           
   791                           ; 2 bytes @ 0x5
   792  0025                     	ds	1
   793  0026                     ??_AnalogValue:	
   794  0026                     ?_Blink:	
   795                           ; 1 bytes @ 0x6
   796                           
   797  0026                     RegisterRead@adress:	
   798                           ; 1 bytes @ 0x6
   799                           
   800  0026                     Blink@n:	
   801                           ; 1 bytes @ 0x6
   802                           
   803                           
   804                           ; 2 bytes @ 0x6
   805  0026                     	ds	1
   806  0027                     ?_RegisterSet:	
   807  0027                     RegisterSet@value:	
   808                           ; 1 bytes @ 0x7
   809                           
   810  0027                     AnalogValue@channel:	
   811                           ; 1 bytes @ 0x7
   812                           
   813  0027                     read_write_flash_ram@flash_sector:	
   814                           ; 1 bytes @ 0x7
   815                           
   816                           
   817                           ; 1 bytes @ 0x7
   818  0027                     	ds	1
   819  0028                     ??_RegisterSet:	
   820  0028                     ??_DarknessCheck:	
   821                           ; 1 bytes @ 0x8
   822                           
   823  0028                     ??_Blink:	
   824                           ; 1 bytes @ 0x8
   825                           
   826  0028                     read_write_flash_ram@flash_page:	
   827                           ; 1 bytes @ 0x8
   828                           
   829                           
   830                           ; 1 bytes @ 0x8
   831  0028                     	ds	1
   832  0029                     DarknessCheck@darknessValue:	
   833  0029                     read_write_flash_ram@offset:	
   834                           ; 1 bytes @ 0x9
   835                           
   836  0029                     Blink@i:	
   837                           ; 1 bytes @ 0x9
   838                           
   839                           
   840                           ; 2 bytes @ 0x9
   841  0029                     	ds	1
   842  002A                     ??_Mode_0:	
   843  002A                     ??_Mode_1:	
   844                           ; 1 bytes @ 0xA
   845                           
   846  002A                     ??_Mode_2:	
   847                           ; 1 bytes @ 0xA
   848                           
   849  002A                     ??_LightWithSensController:	
   850                           ; 1 bytes @ 0xA
   851                           
   852  002A                     RegisterSet@adress:	
   853                           ; 1 bytes @ 0xA
   854                           
   855  002A                     read_write_flash_ram@mem_ptr:	
   856                           ; 1 bytes @ 0xA
   857                           
   858                           
   859                           ; 2 bytes @ 0xA
   860  002A                     	ds	1
   861  002B                     ??_SetRFMode:	
   862                           
   863                           ; 1 bytes @ 0xB
   864  002B                     	ds	1
   865  002C                     ??_read_write_flash_ram:	
   866  002C                     SetRFMode@mode:	
   867                           ; 1 bytes @ 0xC
   868                           
   869                           
   870                           ; 1 bytes @ 0xC
   871  002C                     	ds	1
   872  002D                     SetRFMode@mcparam0_read:	
   873                           
   874                           ; 1 bytes @ 0xD
   875  002D                     	ds	1
   876  002E                     ??_FindChannel:	
   877                           
   878                           ; 1 bytes @ 0xE
   879  002E                     	ds	1
   880  002F                     read_write_flash_ram@one_read_zero_write:	
   881                           
   882                           ; 1 bytes @ 0xF
   883  002F                     	ds	1
   884  0030                     read_write_flash_ram@i:	
   885                           
   886                           ; 2 bytes @ 0x10
   887  0030                     	ds	1
   888  0031                     FindChannel@cnt:	
   889                           
   890                           ; 2 bytes @ 0x11
   891  0031                     	ds	2
   892  0033                     FindChannel@i:	
   893                           
   894                           ; 2 bytes @ 0x13
   895  0033                     	ds	2
   896  0035                     ??_TransiverInit:	
   897  0035                     ??_TransiverToReceive:	
   898                           ; 1 bytes @ 0x15
   899                           
   900  0035                     ?_TransmittPacket:	
   901                           ; 1 bytes @ 0x15
   902                           
   903  0035                     TransmittPacket@value:	
   904                           ; 1 bytes @ 0x15
   905                           
   906                           
   907                           ; 1 bytes @ 0x15
   908  0035                     	ds	1
   909  0036                     ??_TransmittPacket:	
   910                           
   911                           ; 1 bytes @ 0x16
   912  0036                     	ds	2
   913  0038                     TransmittPacket@i:	
   914                           
   915                           ; 2 bytes @ 0x18
   916  0038                     	ds	2
   917  003A                     TransmittPacket@topic:	
   918                           
   919                           ; 1 bytes @ 0x1A
   920  003A                     	ds	1
   921  003B                     ??_Mode_4:	
   922  003B                     ??_Mode_5:	
   923                           ; 1 bytes @ 0x1B
   924                           
   925  003B                     ??_ReceivedPacketHandler:	
   926                           ; 1 bytes @ 0x1B
   927                           
   928                           
   929                           ; 1 bytes @ 0x1B
   930  003B                     	ds	1
   931  003C                     ReceivedPacketHandler@Data:	
   932                           
   933                           ; 1 bytes @ 0x1C
   934  003C                     	ds	1
   935  003D                     ??_TransiverReadFIFO:	
   936                           
   937                           ; 1 bytes @ 0x1D
   938  003D                     	ds	2
   939  003F                     TransiverReadFIFO@ReceivedString:	
   940                           
   941                           ; 30 bytes @ 0x1F
   942  003F                     	ds	30
   943  005D                     TransiverReadFIFO@i:	
   944                           
   945                           ; 2 bytes @ 0x3D
   946  005D                     	ds	2
   947  005F                     TransiverReadFIFO@j:	
   948                           
   949                           ; 2 bytes @ 0x3F
   950  005F                     	ds	2
   951  0061                     ??_main:	
   952                           
   953                           ; 1 bytes @ 0x41
   954  0061                     	ds	3
   955  0064                     main@value:	
   956                           
   957                           ; 1 bytes @ 0x44
   958  0064                     	ds	1
   959  0065                     main@i_119:	
   960                           
   961                           ; 2 bytes @ 0x45
   962  0065                     	ds	2
   963  0067                     main@i:	
   964                           
   965                           ; 2 bytes @ 0x47
   966  0067                     	ds	2
   967                           
   968                           	psect	maintext
   969  01A4                     __pmaintext:	
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 32 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  i               2   69[BANK0 ] int 
   980 ;;  i               2   71[BANK0 ] int 
   981 ;;  value           1   68[BANK0 ] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2   80[None  ] int 
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : B00/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       5       0       0       0
   993 ;;      Temps:          0       3       0       0       0
   994 ;;      Totals:         0       8       0       0       0
   995 ;;Total ram usage:        8 bytes
   996 ;; Hardware stack levels required when called:   10
   997 ;; This function calls:
   998 ;;		_Mode_0
   999 ;;		_Mode_1
  1000 ;;		_Mode_2
  1001 ;;		_Mode_4
  1002 ;;		_Mode_5
  1003 ;;		_OperationMode
  1004 ;;		_TransiverInit
  1005 ;;		_TransiverReadFIFO
  1006 ;;		_TransiverToReceive
  1007 ;;		_init
  1008 ;;		_ram_sector_erase
  1009 ;;		_read_ram_status
  1010 ;;		_read_write_flash_ram
  1011 ;;		_write_ram_status
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _main
  1019  01A4                     _main:	
  1020                           
  1021                           ;main.c: 35: init();
  1022                           
  1023                           ;incstack = 0
  1024 ;; hardware stack exceeded
  1025                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1026  01A4  120A  118A  2792  120A  118A  	fcall	_init
  1027                           
  1028                           ;main.c: 37: TransiverInit();
  1029  01A9  120A  118A  23C8  120A  118A  	fcall	_TransiverInit
  1030                           
  1031                           ;main.c: 43: RB2 = 0;
  1032  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1033  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1034  01B0  1106               	bcf	6,2	;volatile
  1035                           
  1036                           ;main.c: 44: _delay((unsigned long)((300)*(4000000/4000.0)));
  1037  01B1  3002               	movlw	2
  1038  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1039  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1040  01B4  00E3               	movwf	??_main+2
  1041  01B5  3086               	movlw	134
  1042  01B6  00E2               	movwf	??_main+1
  1043  01B7  3098               	movlw	152
  1044  01B8  00E1               	movwf	??_main
  1045  01B9                     u1797:	
  1046  01B9  0BE1               	decfsz	??_main,f
  1047  01BA  29B9               	goto	u1797
  1048  01BB  0BE2               	decfsz	??_main+1,f
  1049  01BC  29B9               	goto	u1797
  1050  01BD  0BE3               	decfsz	??_main+2,f
  1051  01BE  29B9               	goto	u1797
  1052  01BF  0000               	nop
  1053                           
  1054                           ;main.c: 45: RB2 = 1;
  1055  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1056  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1057  01C2  1506               	bsf	6,2	;volatile
  1058                           
  1059                           ;main.c: 46: _delay((unsigned long)((300)*(4000000/4000.0)));
  1060  01C3  3002               	movlw	2
  1061  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1062  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1063  01C6  00E3               	movwf	??_main+2
  1064  01C7  3086               	movlw	134
  1065  01C8  00E2               	movwf	??_main+1
  1066  01C9  3098               	movlw	152
  1067  01CA  00E1               	movwf	??_main
  1068  01CB                     u1807:	
  1069  01CB  0BE1               	decfsz	??_main,f
  1070  01CC  29CB               	goto	u1807
  1071  01CD  0BE2               	decfsz	??_main+1,f
  1072  01CE  29CB               	goto	u1807
  1073  01CF  0BE3               	decfsz	??_main+2,f
  1074  01D0  29CB               	goto	u1807
  1075  01D1  0000               	nop
  1076  01D2                     l2426:	
  1077                           ;main.c: 51: while(1)
  1078                           
  1079                           
  1080                           ;main.c: 52: {
  1081                           ;main.c: 53: if(!RB1)
  1082  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1083  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1084  01D4  1886               	btfsc	6,1	;volatile
  1085  01D5  2A70               	goto	l2456
  1086                           
  1087                           ;main.c: 54: {
  1088                           ;main.c: 55: read_ram_status();
  1089  01D6  120A  158A  258E  120A  118A  	fcall	_read_ram_status
  1090                           
  1091                           ;main.c: 56: write_ram_status(read_ram_status() & 0b11100011);
  1092  01DB  120A  158A  258E  120A  118A  	fcall	_read_ram_status
  1093  01E0  39E3               	andlw	227
  1094  01E1  120A  158A  268D  120A  118A  	fcall	_write_ram_status
  1095                           
  1096                           ;main.c: 57: read_ram_status();
  1097  01E6  120A  158A  258E  120A  118A  	fcall	_read_ram_status
  1098                           
  1099                           ;main.c: 58: ram_sector_erase(0);
  1100  01EB  3000               	movlw	0
  1101  01EC  120A  158A  26EC  120A  118A  	fcall	_ram_sector_erase
  1102                           
  1103                           ;main.c: 60: unsigned char value;
  1104                           ;main.c: 61: for(int i = 0; i < 100; i++)
  1105  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1106  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1107  01F3  01E7               	clrf	main@i
  1108  01F4  01E8               	clrf	main@i+1
  1109  01F5  0868               	movf	main@i+1,w
  1110  01F6  3A80               	xorlw	128
  1111  01F7  00FF               	movwf	127
  1112  01F8  3080               	movlw	128
  1113  01F9  027F               	subwf	127,w
  1114  01FA  1D03               	skipz
  1115  01FB  29FE               	goto	u1525
  1116  01FC  3064               	movlw	100
  1117  01FD  0267               	subwf	main@i,w
  1118  01FE                     u1525:	
  1119  01FE  1803               	btfsc	3,0
  1120  01FF  2A2D               	goto	l2444
  1121  0200                     l2436:	
  1122                           
  1123                           ;main.c: 62: {
  1124                           ;main.c: 63: value = i;
  1125  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0202  0867               	movf	main@i,w
  1128  0203  00E1               	movwf	??_main
  1129  0204  0861               	movf	??_main,w
  1130  0205  00E4               	movwf	main@value
  1131                           
  1132                           ;main.c: 64: read_write_flash_ram(0,1,0,0,i,&value);
  1133  0206  3001               	movlw	1
  1134  0207  00A5               	movwf	read_write_flash_ram@bytes_to_readwrite
  1135  0208  3000               	movlw	0
  1136  0209  00A6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  1137  020A  01A7               	clrf	read_write_flash_ram@flash_sector
  1138  020B  01A8               	clrf	read_write_flash_ram@flash_page
  1139  020C  0867               	movf	main@i,w
  1140  020D  00E1               	movwf	??_main
  1141  020E  0861               	movf	??_main,w
  1142  020F  00A9               	movwf	read_write_flash_ram@offset
  1143  0210  3064               	movlw	(low (main@value| 0))& (0+255)
  1144  0211  00AA               	movwf	read_write_flash_ram@mem_ptr
  1145  0212  3000               	movlw	0
  1146  0213  00AB               	movwf	read_write_flash_ram@mem_ptr+1
  1147  0214  3000               	movlw	0
  1148  0215  120A  118A  262D  120A  118A  	fcall	_read_write_flash_ram
  1149  021A  3001               	movlw	1
  1150  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1151  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1152  021D  07E7               	addwf	main@i,f
  1153  021E  1803               	skipnc
  1154  021F  0AE8               	incf	main@i+1,f
  1155  0220  3000               	movlw	0
  1156  0221  07E8               	addwf	main@i+1,f
  1157  0222  0868               	movf	main@i+1,w
  1158  0223  3A80               	xorlw	128
  1159  0224  00FF               	movwf	127
  1160  0225  3080               	movlw	128
  1161  0226  027F               	subwf	127,w
  1162  0227  1D03               	skipz
  1163  0228  2A2B               	goto	u1535
  1164  0229  3064               	movlw	100
  1165  022A  0267               	subwf	main@i,w
  1166  022B                     u1535:	
  1167  022B  1C03               	skipc
  1168  022C  2A00               	goto	l2436
  1169  022D                     l2444:	
  1170                           
  1171                           ;main.c: 66: }
  1172                           ;main.c: 69: read_write_flash_ram(1,20,0,0,0,&var2);
  1173  022D  3014               	movlw	20
  1174  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1175  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0230  00A5               	movwf	read_write_flash_ram@bytes_to_readwrite
  1177  0231  3000               	movlw	0
  1178  0232  00A6               	movwf	read_write_flash_ram@bytes_to_readwrite+1
  1179  0233  01A7               	clrf	read_write_flash_ram@flash_sector
  1180  0234  01A8               	clrf	read_write_flash_ram@flash_page
  1181  0235  01A9               	clrf	read_write_flash_ram@offset
  1182  0236  3090               	movlw	(low (_var2| (0+256)))& (0+255)
  1183  0237  00AA               	movwf	read_write_flash_ram@mem_ptr
  1184  0238  3001               	movlw	1
  1185  0239  00AB               	movwf	read_write_flash_ram@mem_ptr+1
  1186  023A  3001               	movlw	1
  1187  023B  120A  118A  262D  120A  118A  	fcall	_read_write_flash_ram
  1188                           
  1189                           ;main.c: 71: for(int i = 0; i < 1; i++)
  1190  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0242  01E5               	clrf	main@i_119
  1193  0243  01E6               	clrf	main@i_119+1
  1194  0244  0866               	movf	main@i_119+1,w
  1195  0245  3A80               	xorlw	128
  1196  0246  00FF               	movwf	127
  1197  0247  3080               	movlw	128
  1198  0248  027F               	subwf	127,w
  1199  0249  1D03               	skipz
  1200  024A  2A4D               	goto	u1545
  1201  024B  3001               	movlw	1
  1202  024C  0265               	subwf	main@i_119,w
  1203  024D                     u1545:	
  1204  024D  1803               	btfsc	3,0
  1205  024E  2A6C               	goto	l87
  1206  024F                     l2452:	
  1207                           
  1208                           ;main.c: 72: {
  1209                           ;main.c: 73: _delay((unsigned long)((100)*(4000000/4000.0)));
  1210  024F  3082               	movlw	130
  1211  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0252  00E2               	movwf	??_main+1
  1214  0253  30DD               	movlw	221
  1215  0254  00E1               	movwf	??_main
  1216  0255                     u1817:	
  1217  0255  0BE1               	decfsz	??_main,f
  1218  0256  2A55               	goto	u1817
  1219  0257  0BE2               	decfsz	??_main+1,f
  1220  0258  2A55               	goto	u1817
  1221  0259  3001               	movlw	1
  1222  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1223  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1224  025C  07E5               	addwf	main@i_119,f
  1225  025D  1803               	skipnc
  1226  025E  0AE6               	incf	main@i_119+1,f
  1227  025F  3000               	movlw	0
  1228  0260  07E6               	addwf	main@i_119+1,f
  1229  0261  0866               	movf	main@i_119+1,w
  1230  0262  3A80               	xorlw	128
  1231  0263  00FF               	movwf	127
  1232  0264  3080               	movlw	128
  1233  0265  027F               	subwf	127,w
  1234  0266  1D03               	skipz
  1235  0267  2A6A               	goto	u1555
  1236  0268  3001               	movlw	1
  1237  0269  0265               	subwf	main@i_119,w
  1238  026A                     u1555:	
  1239  026A  1C03               	skipc
  1240  026B  2A4F               	goto	l2452
  1241  026C                     l87:	
  1242                           ;main.c: 75: }
  1243                           ;main.c: 77: while(!RB1);
  1244                           
  1245  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1246  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1247  026E  1C86               	btfss	6,1	;volatile
  1248  026F  2A6C               	goto	l87
  1249  0270                     l2456:	
  1250                           
  1251                           ;main.c: 80: }
  1252                           ;main.c: 82: if(OperationMode() == 0)
  1253  0270  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  1254  0275  3A00               	xorlw	0
  1255  0276  1D03               	skipz
  1256  0277  2A7D               	goto	l2460
  1257                           
  1258                           ;main.c: 83: {
  1259                           ;main.c: 84: Mode_0();
  1260  0278  120A  158A  2508  120A  118A  	fcall	_Mode_0
  1261  027D                     l2460:	
  1262                           
  1263                           ;main.c: 85: }
  1264                           ;main.c: 86: if(OperationMode() == 1)
  1265  027D  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  1266  0282  3A01               	xorlw	1
  1267  0283  1D03               	skipz
  1268  0284  2A8A               	goto	l2464
  1269                           
  1270                           ;main.c: 87: {
  1271                           ;main.c: 88: Mode_1();
  1272  0285  120A  158A  25A2  120A  118A  	fcall	_Mode_1
  1273  028A                     l2464:	
  1274                           
  1275                           ;main.c: 89: }
  1276                           ;main.c: 91: if(OperationMode() == 2)
  1277  028A  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  1278  028F  3A02               	xorlw	2
  1279  0290  1D03               	skipz
  1280  0291  2A97               	goto	l2468
  1281                           
  1282                           ;main.c: 92: {
  1283                           ;main.c: 93: Mode_2();
  1284  0292  120A  158A  2531  120A  118A  	fcall	_Mode_2
  1285  0297                     l2468:	
  1286                           
  1287                           ;main.c: 94: }
  1288                           ;main.c: 96: if(OperationMode() == 4)
  1289  0297  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  1290  029C  3A04               	xorlw	4
  1291  029D  1D03               	skipz
  1292  029E  2AA4               	goto	l2472
  1293                           
  1294                           ;main.c: 97: {
  1295                           ;main.c: 98: Mode_4();
  1296  029F  120A  158A  255A  120A  118A  	fcall	_Mode_4
  1297  02A4                     l2472:	
  1298                           
  1299                           ;main.c: 99: }
  1300                           ;main.c: 101: if(OperationMode() == 5)
  1301  02A4  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  1302  02A9  3A05               	xorlw	5
  1303  02AA  1D03               	skipz
  1304  02AB  2AB1               	goto	l2476
  1305                           
  1306                           ;main.c: 102: {
  1307                           ;main.c: 103: Mode_5();
  1308  02AC  120A  158A  257C  120A  118A  	fcall	_Mode_5
  1309  02B1                     l2476:	
  1310                           
  1311                           ;main.c: 104: }
  1312                           ;main.c: 108: if(!bTransiverModeReceive)
  1313  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1314  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1315  02B3  086E               	movf	_bTransiverModeReceive,w
  1316  02B4  1D03               	btfss	3,2
  1317  02B5  2ABB               	goto	l2480
  1318                           
  1319                           ;main.c: 109: TransiverToReceive();
  1320  02B6  120A  158A  27A4  120A  118A  	fcall	_TransiverToReceive
  1321  02BB                     l2480:	
  1322                           
  1323                           ;main.c: 110: if(RB4 && bTransiverModeReceive)
  1324  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1325  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1326  02BD  1E06               	btfss	6,4	;volatile
  1327  02BE  29D2               	goto	l2426
  1328  02BF  086E               	movf	_bTransiverModeReceive,w
  1329  02C0  1903               	btfsc	3,2
  1330  02C1  29D2               	goto	l2426
  1331                           
  1332                           ;main.c: 111: TransiverReadFIFO();
  1333  02C2  120A  118A  272B  120A  118A  	fcall	_TransiverReadFIFO
  1334  02C7  29D2               	goto	l2426
  1335  02C8                     __end_of_main:	
  1336                           
  1337                           	psect	text1
  1338  0E8D                     __ptext1:	
  1339 ;; *************** function _write_ram_status *****************
  1340 ;; Defined at:
  1341 ;;		line 230 in file "m25p16.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  status          1    wreg     unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  status          1    5[BANK0 ] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       1       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       1       0       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    5
  1362 ;; This function calls:
  1363 ;;		_WriteSPI
  1364 ;;		_read_ram_status
  1365 ;; This function is called by:
  1366 ;;		_main
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           
  1371                           ;psect for function _write_ram_status
  1372  0E8D                     _write_ram_status:	
  1373                           
  1374                           ;incstack = 0
  1375                           ; Regs used in _write_ram_status: [wreg+status,2+status,0+pclath+cstack]
  1376                           ;write_ram_status@status stored from wreg
  1377  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0E8F  00A5               	movwf	write_ram_status@status
  1380                           
  1381                           ;m25p16.c: 245: RD3 = 0;
  1382  0E90  1188               	bcf	8,3	;volatile
  1383                           
  1384                           ;m25p16.c: 246: WriteSPI(0x06);
  1385  0E91  3006               	movlw	6
  1386  0E92  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1387                           
  1388                           ;m25p16.c: 247: RD3 = 1;
  1389  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0E99  1588               	bsf	8,3	;volatile
  1392                           
  1393                           ;m25p16.c: 248: _delay((unsigned long)((2)*(4000000/4000000.0)));
  1394  0E9A  2E9B               	nop2	;2 cycle nop
  1395                           
  1396                           ;m25p16.c: 249: RD3 = 0;
  1397  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0E9D  1188               	bcf	8,3	;volatile
  1400                           
  1401                           ;m25p16.c: 250: WriteSPI(0x01);
  1402  0E9E  3001               	movlw	1
  1403  0E9F  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1404                           
  1405                           ;m25p16.c: 251: WriteSPI(status);
  1406  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0EA6  0825               	movf	write_ram_status@status,w
  1409  0EA7  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1410                           
  1411                           ;m25p16.c: 252: RD3 = 1;
  1412  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0EAE  1588               	bsf	8,3	;volatile
  1415                           
  1416                           ;m25p16.c: 253: _delay((unsigned long)((2)*(4000000/4000000.0)));
  1417  0EAF  2EB0               	nop2	;2 cycle nop
  1418  0EB0                     l2260:	
  1419                           ;m25p16.c: 254: while (read_ram_status() & 0x01);
  1420                           
  1421  0EB0  120A  158A  258E  120A  158A  	fcall	_read_ram_status
  1422  0EB5  3901               	andlw	1
  1423  0EB6  1903               	btfsc	3,2
  1424  0EB7  0008               	return
  1425  0EB8  2EB0               	goto	l2260
  1426  0EB9                     __end_of_write_ram_status:	
  1427                           
  1428                           	psect	text2
  1429  062D                     __ptext2:	
  1430 ;; *************** function _read_write_flash_ram *****************
  1431 ;; Defined at:
  1432 ;;		line 140 in file "m25p16.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  one_read_zer    1    wreg     unsigned char 
  1435 ;;  bytes_to_rea    2    5[BANK0 ] unsigned short 
  1436 ;;  flash_sector    1    7[BANK0 ] unsigned char 
  1437 ;;  flash_page      1    8[BANK0 ] unsigned char 
  1438 ;;  offset          1    9[BANK0 ] unsigned char 
  1439 ;;  mem_ptr         2   10[BANK0 ] PTR unsigned char 
  1440 ;;		 -> var2(95), main@value(1), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  one_read_zer    1   15[BANK0 ] unsigned char 
  1443 ;;  i               2   16[BANK0 ] unsigned short 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       7       0       0       0
  1454 ;;      Locals:         0       3       0       0       0
  1455 ;;      Temps:          0       3       0       0       0
  1456 ;;      Totals:         0      13       0       0       0
  1457 ;;Total ram usage:       13 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    5
  1460 ;; This function calls:
  1461 ;;		_ReadSPI
  1462 ;;		_WriteSPI
  1463 ;;		_read_ram_status
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;;		_write_flash_page
  1467 ;;		_read_flash_page
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _read_write_flash_ram
  1473  062D                     _read_write_flash_ram:	
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _read_write_flash_ram: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1477                           ;read_write_flash_ram@one_read_zero_write stored from wreg
  1478  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1479  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1480  062F  00AF               	movwf	read_write_flash_ram@one_read_zero_write
  1481                           
  1482                           ;m25p16.c: 155: unsigned short int i;
  1483                           ;m25p16.c: 187: RD3 = 0;
  1484  0630  1188               	bcf	8,3	;volatile
  1485                           
  1486                           ;m25p16.c: 188: if(one_read_zero_write)
  1487  0631  082F               	movf	read_write_flash_ram@one_read_zero_write,w
  1488  0632  1903               	btfsc	3,2
  1489  0633  2E36               	goto	l2282
  1490                           
  1491                           ;m25p16.c: 189: {
  1492                           ;m25p16.c: 190: WriteSPI(0x03);
  1493  0634  3003               	movlw	3
  1494  0635  2E44               	goto	L1
  1495  0636                     l2282:	
  1496                           ;m25p16.c: 191: }
  1497                           
  1498                           
  1499                           ;m25p16.c: 192: else
  1500                           ;m25p16.c: 193: {
  1501                           ;m25p16.c: 194: WriteSPI(0x06);
  1502  0636  3006               	movlw	6
  1503  0637  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1504                           
  1505                           ;m25p16.c: 195: RD3 = 1;
  1506  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1507  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1508  063E  1588               	bsf	8,3	;volatile
  1509                           
  1510                           ;m25p16.c: 196: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1511  063F  0000               	nop
  1512                           
  1513                           ;m25p16.c: 197: RD3 = 0;
  1514  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0642  1188               	bcf	8,3	;volatile
  1517                           
  1518                           ;m25p16.c: 198: WriteSPI(0x02);
  1519  0643  3002               	movlw	2
  1520  0644                     L1:	
  1521  0644  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1522                           
  1523                           ;m25p16.c: 200: }
  1524                           ;m25p16.c: 202: WriteSPI(flash_sector);
  1525  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1526  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1527  064B  0827               	movf	read_write_flash_ram@flash_sector,w
  1528  064C  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1529                           
  1530                           ;m25p16.c: 203: WriteSPI(flash_page);
  1531  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0653  0828               	movf	read_write_flash_ram@flash_page,w
  1534  0654  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1535                           
  1536                           ;m25p16.c: 204: WriteSPI(offset);
  1537  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1538  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1539  065B  0829               	movf	read_write_flash_ram@offset,w
  1540  065C  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1541                           
  1542                           ;m25p16.c: 206: for (i=0;i<bytes_to_readwrite;i++)
  1543  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0663  01B0               	clrf	read_write_flash_ram@i
  1546  0664  01B1               	clrf	read_write_flash_ram@i+1
  1547  0665                     l2300:	
  1548  0665  0826               	movf	read_write_flash_ram@bytes_to_readwrite+1,w
  1549  0666  0231               	subwf	read_write_flash_ram@i+1,w
  1550  0667  1D03               	skipz
  1551  0668  2E6B               	goto	u1335
  1552  0669  0825               	movf	read_write_flash_ram@bytes_to_readwrite,w
  1553  066A  0230               	subwf	read_write_flash_ram@i,w
  1554  066B                     u1335:	
  1555  066B  1803               	btfsc	3,0
  1556  066C  2EA2               	goto	l549
  1557                           
  1558                           ;m25p16.c: 207: {
  1559                           ;m25p16.c: 208: if (one_read_zero_write)
  1560  066D  082F               	movf	read_write_flash_ram@one_read_zero_write,w
  1561  066E  1903               	btfsc	3,2
  1562  066F  2E87               	goto	l2296
  1563                           
  1564                           ;m25p16.c: 209: {
  1565                           ;m25p16.c: 210: mem_ptr[i] = ReadSPI();
  1566  0670  120A  158A  250C  120A  118A  	fcall	_ReadSPI
  1567  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0677  00AC               	movwf	??_read_write_flash_ram
  1570  0678  0830               	movf	read_write_flash_ram@i,w
  1571  0679  072A               	addwf	read_write_flash_ram@mem_ptr,w
  1572  067A  00AD               	movwf	??_read_write_flash_ram+1
  1573  067B  082B               	movf	read_write_flash_ram@mem_ptr+1,w
  1574  067C  1803               	skipnc
  1575  067D  3E01               	addlw	1
  1576  067E  00AE               	movwf	??_read_write_flash_ram+2
  1577  067F  082D               	movf	??_read_write_flash_ram+1,w
  1578  0680  0084               	movwf	4
  1579  0681  1383               	bcf	3,7
  1580  0682  182E               	btfsc	??_read_write_flash_ram+2,0
  1581  0683  1783               	bsf	3,7
  1582  0684  082C               	movf	??_read_write_flash_ram,w
  1583  0685  0080               	movwf	0
  1584                           
  1585                           ;m25p16.c: 211: }
  1586  0686  2E99               	goto	l2298
  1587  0687                     l2296:	
  1588                           
  1589                           ;m25p16.c: 212: else
  1590                           ;m25p16.c: 213: {
  1591                           ;m25p16.c: 214: WriteSPI(mem_ptr[i]);
  1592  0687  0830               	movf	read_write_flash_ram@i,w
  1593  0688  072A               	addwf	read_write_flash_ram@mem_ptr,w
  1594  0689  00AC               	movwf	??_read_write_flash_ram
  1595  068A  082B               	movf	read_write_flash_ram@mem_ptr+1,w
  1596  068B  1803               	skipnc
  1597  068C  3E01               	addlw	1
  1598  068D  00AD               	movwf	??_read_write_flash_ram+1
  1599  068E  082C               	movf	??_read_write_flash_ram,w
  1600  068F  0084               	movwf	4
  1601  0690  1783               	bsf	3,7
  1602  0691  1C2D               	btfss	??_read_write_flash_ram+1,0
  1603  0692  1383               	bcf	3,7
  1604  0693  0800               	movf	0,w
  1605  0694  120A  158A  253E  120A  118A  	fcall	_WriteSPI
  1606  0699                     l2298:	
  1607  0699  3001               	movlw	1
  1608  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1609  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1610  069C  07B0               	addwf	read_write_flash_ram@i,f
  1611  069D  1803               	skipnc
  1612  069E  0AB1               	incf	read_write_flash_ram@i+1,f
  1613  069F  3000               	movlw	0
  1614  06A0  07B1               	addwf	read_write_flash_ram@i+1,f
  1615  06A1  2E65               	goto	l2300
  1616  06A2                     l549:	
  1617                           
  1618                           ;m25p16.c: 215: }
  1619                           ;m25p16.c: 216: }
  1620                           ;m25p16.c: 218: RD3 = 1;
  1621  06A2  1588               	bsf	8,3	;volatile
  1622                           
  1623                           ;m25p16.c: 220: _delay((unsigned long)((1)*(4000000/4000.0)));
  1624  06A3  30C7               	movlw	199
  1625  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1626  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1627  06A6  00AC               	movwf	??_read_write_flash_ram
  1628  06A7                     u1827:	
  1629  06A7  2EA8               	nop2
  1630  06A8  0BAC               	decfsz	??_read_write_flash_ram,f
  1631  06A9  2EA7               	goto	u1827
  1632  06AA  2EAB               	nop2
  1633  06AB                     l2306:	
  1634                           ;m25p16.c: 221: while (read_ram_status() & 0b00000011) {
  1635                           
  1636  06AB  120A  158A  258E  120A  118A  	fcall	_read_ram_status
  1637  06B0  3903               	andlw	3
  1638  06B1  1903               	btfsc	3,2
  1639  06B2  0008               	return
  1640                           
  1641                           ;m25p16.c: 222: _delay((unsigned long)((1)*(4000000/4000.0)));
  1642  06B3  30C7               	movlw	199
  1643  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1644  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1645  06B6  00AC               	movwf	??_read_write_flash_ram
  1646  06B7                     u1837:	
  1647  06B7  2EB8               	nop2
  1648  06B8  0BAC               	decfsz	??_read_write_flash_ram,f
  1649  06B9  2EB7               	goto	u1837
  1650  06BA  2EBB               	nop2
  1651  06BB  2EAB               	goto	l2306
  1652  06BC                     __end_of_read_write_flash_ram:	
  1653                           
  1654                           	psect	text3
  1655  0EEC                     __ptext3:	
  1656 ;; *************** function _ram_sector_erase *****************
  1657 ;; Defined at:
  1658 ;;		line 101 in file "m25p16.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  sector          1    wreg     unsigned char 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  sector          1    5[BANK0 ] unsigned char 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, status,0, pclath, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         0       1       0       0       0
  1674 ;;      Temps:          0       0       0       0       0
  1675 ;;      Totals:         0       1       0       0       0
  1676 ;;Total ram usage:        1 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    5
  1679 ;; This function calls:
  1680 ;;		_WriteSPI
  1681 ;;		_read_ram_status
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _ram_sector_erase
  1689  0EEC                     _ram_sector_erase:	
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _ram_sector_erase: [wreg+status,2+status,0+pclath+cstack]
  1693                           ;ram_sector_erase@sector stored from wreg
  1694  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0EEE  00A5               	movwf	ram_sector_erase@sector
  1697                           
  1698                           ;m25p16.c: 117: RD3 = 0;
  1699  0EEF  1188               	bcf	8,3	;volatile
  1700                           
  1701                           ;m25p16.c: 118: WriteSPI(0x06);
  1702  0EF0  3006               	movlw	6
  1703  0EF1  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1704                           
  1705                           ;m25p16.c: 119: RD3 = 1;
  1706  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0EF8  1588               	bsf	8,3	;volatile
  1709                           
  1710                           ;m25p16.c: 120: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1711  0EF9  0000               	nop
  1712                           
  1713                           ;m25p16.c: 121: RD3 = 0;
  1714  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0EFC  1188               	bcf	8,3	;volatile
  1717                           
  1718                           ;m25p16.c: 122: WriteSPI(0xD8);
  1719  0EFD  30D8               	movlw	216
  1720  0EFE  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1721                           
  1722                           ;m25p16.c: 123: WriteSPI(sector);
  1723  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0F05  0825               	movf	ram_sector_erase@sector,w
  1726  0F06  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1727                           
  1728                           ;m25p16.c: 124: WriteSPI(0x00);
  1729  0F0B  3000               	movlw	0
  1730  0F0C  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1731                           
  1732                           ;m25p16.c: 125: WriteSPI(0x00);
  1733  0F11  3000               	movlw	0
  1734  0F12  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1735                           
  1736                           ;m25p16.c: 126: RD3 = 1;
  1737  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0F19  1588               	bsf	8,3	;volatile
  1740  0F1A                     l2274:	
  1741                           ;m25p16.c: 127: while(read_ram_status());
  1742                           
  1743  0F1A  120A  158A  258E  120A  158A  	fcall	_read_ram_status
  1744  0F1F  3A00               	xorlw	0
  1745  0F20  1903               	btfsc	3,2
  1746  0F21  0008               	return
  1747  0F22  2F1A               	goto	l2274
  1748  0F23                     __end_of_ram_sector_erase:	
  1749                           
  1750                           	psect	text4
  1751  0D8E                     __ptext4:	
  1752 ;; *************** function _read_ram_status *****************
  1753 ;; Defined at:
  1754 ;;		line 57 in file "m25p16.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  status          1    4[BANK0 ] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      unsigned char 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, pclath, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       1       0       0       0
  1770 ;;      Temps:          0       1       0       0       0
  1771 ;;      Totals:         0       2       0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    4
  1775 ;; This function calls:
  1776 ;;		_ReadSPI
  1777 ;;		_WriteSPI
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;;		_ram_sector_erase
  1781 ;;		_read_write_flash_ram
  1782 ;;		_write_ram_status
  1783 ;;		_ram_bulk_erase
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _read_ram_status
  1789  0D8E                     _read_ram_status:	
  1790                           
  1791                           ;m25p16.c: 59: unsigned char status;
  1792                           ;m25p16.c: 68: RD3 = 0;
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _read_ram_status: [wreg+status,2+status,0+pclath+cstack]
  1796  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0D90  1188               	bcf	8,3	;volatile
  1799                           
  1800                           ;m25p16.c: 69: WriteSPI(0x05);
  1801  0D91  3005               	movlw	5
  1802  0D92  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  1803                           
  1804                           ;m25p16.c: 70: status = ReadSPI();
  1805  0D97  120A  158A  250C   	fcall	_ReadSPI
  1806  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0D9C  00A3               	movwf	??_read_ram_status
  1809  0D9D  0823               	movf	??_read_ram_status,w
  1810  0D9E  00A4               	movwf	read_ram_status@status
  1811                           
  1812                           ;m25p16.c: 71: RD3 = 1;
  1813  0D9F  1588               	bsf	8,3	;volatile
  1814                           
  1815                           ;m25p16.c: 72: return status;
  1816  0DA0  0824               	movf	read_ram_status@status,w
  1817  0DA1  0008               	return
  1818  0DA2                     __end_of_read_ram_status:	
  1819                           
  1820                           	psect	text5
  1821  0792                     __ptext5:	
  1822 ;; *************** function _init *****************
  1823 ;; Defined at:
  1824 ;;		line 387 in file "functions.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    2
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _init
  1854  0792                     _init:	
  1855                           
  1856                           ;functions.c: 390: OSCCONbits.IRCF2 = 1;
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _init: [wreg+status,2+status,0]
  1860  0792  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0793  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0794  170F               	bsf	15,6	;volatile
  1863                           
  1864                           ;functions.c: 391: OSCCONbits.IRCF1 = 1;
  1865  0795  168F               	bsf	15,5	;volatile
  1866                           
  1867                           ;functions.c: 392: OSCCONbits.IRCF0 = 0;
  1868  0796  120F               	bcf	15,4	;volatile
  1869                           
  1870                           ;functions.c: 393: OSCCONbits.SCS = 1;
  1871  0797  140F               	bsf	15,0	;volatile
  1872                           
  1873                           ;functions.c: 396: PORTA = 0x00;
  1874  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1876  079A  0185               	clrf	5	;volatile
  1877                           
  1878                           ;functions.c: 397: PORTB = 0x00;
  1879  079B  0186               	clrf	6	;volatile
  1880                           
  1881                           ;functions.c: 398: PORTC = 0x00;
  1882  079C  0187               	clrf	7	;volatile
  1883                           
  1884                           ;functions.c: 399: PORTD = 0x00;
  1885  079D  0188               	clrf	8	;volatile
  1886                           
  1887                           ;functions.c: 400: PORTE = 0x00;
  1888  079E  0189               	clrf	9	;volatile
  1889                           
  1890                           ;functions.c: 402: TRISA = 0b00001011;
  1891  079F  300B               	movlw	11
  1892  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  1893  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  1894  07A2  0085               	movwf	5	;volatile
  1895                           
  1896                           ;functions.c: 403: TRISB = 0b00110010;
  1897  07A3  3032               	movlw	50
  1898  07A4  0086               	movwf	6	;volatile
  1899                           
  1900                           ;functions.c: 404: TRISC = 0b00010000;
  1901  07A5  3010               	movlw	16
  1902  07A6  0087               	movwf	7	;volatile
  1903                           
  1904                           ;functions.c: 405: TRISD = 0b00000111;
  1905  07A7  3007               	movlw	7
  1906  07A8  0088               	movwf	8	;volatile
  1907                           
  1908                           ;functions.c: 406: TRISE = 0b00000111;
  1909  07A9  3007               	movlw	7
  1910  07AA  0089               	movwf	9	;volatile
  1911                           
  1912                           ;functions.c: 408: ANSEL = 0b00000000;
  1913  07AB  1683               	bsf	3,5	;RP0=1, select bank3
  1914  07AC  1703               	bsf	3,6	;RP1=1, select bank3
  1915  07AD  0188               	clrf	8	;volatile
  1916                           
  1917                           ;functions.c: 409: ANSELH = 0b00000000;
  1918  07AE  0189               	clrf	9	;volatile
  1919                           
  1920                           ;functions.c: 410: ANSELbits.ANS0 = 1;
  1921  07AF  1408               	bsf	8,0	;volatile
  1922                           
  1923                           ;functions.c: 411: ANSELbits.ANS3 = 1;
  1924  07B0  1588               	bsf	8,3	;volatile
  1925                           
  1926                           ;functions.c: 412: ANSELbits.ANS5 = 1;
  1927  07B1  1688               	bsf	8,5	;volatile
  1928                           
  1929                           ;functions.c: 413: ANSELbits.ANS6 = 1;
  1930  07B2  1708               	bsf	8,6	;volatile
  1931                           
  1932                           ;functions.c: 414: ANSELbits.ANS7 = 1;
  1933  07B3  1788               	bsf	8,7	;volatile
  1934                           
  1935                           ;functions.c: 415: ANSELHbits.ANS9 = 1;
  1936  07B4  1489               	bsf	9,1	;volatile
  1937                           
  1938                           ;functions.c: 417: OPTION_REGbits.nRBPU = 0;
  1939  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  1940  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  1941  07B7  1381               	bcf	1,7	;volatile
  1942                           
  1943                           ;functions.c: 418: WPUBbits.WPUB1 = 1;
  1944  07B8  1495               	bsf	21,1	;volatile
  1945  07B9                     l376:	
  1946                           ;functions.c: 419: while(!RB1);
  1947                           
  1948  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  1949  07BA  1C86               	btfss	6,1	;volatile
  1950  07BB  2FB9               	goto	l376
  1951                           
  1952                           ;functions.c: 420: WPUBbits.WPUB5 = 1;
  1953  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  1954  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  1955  07BE  1695               	bsf	21,5	;volatile
  1956  07BF                     l379:	
  1957                           ;functions.c: 421: while(!RB5);
  1958                           
  1959  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1960  07C0  1E86               	btfss	6,5	;volatile
  1961  07C1  2FBF               	goto	l379
  1962                           
  1963                           ;functions.c: 424: SSPCONbits.SSPM=0x00;
  1964  07C2  30F0               	movlw	-16
  1965  07C3  0594               	andwf	20,f	;volatile
  1966                           
  1967                           ;functions.c: 425: SSPCONbits.CKP=0;
  1968  07C4  1214               	bcf	20,4	;volatile
  1969                           
  1970                           ;functions.c: 426: SSPSTATbits.CKE=1;
  1971  07C5  1683               	bsf	3,5	;RP0=1, select bank1
  1972  07C6  1303               	bcf	3,6	;RP1=0, select bank1
  1973  07C7  1714               	bsf	20,6	;volatile
  1974                           
  1975                           ;functions.c: 427: SSPSTATbits.SMP=0;
  1976  07C8  1394               	bcf	20,7	;volatile
  1977                           
  1978                           ;functions.c: 428: SSPCONbits.SSPEN=0x01;
  1979  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1980  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1981  07CB  1694               	bsf	20,5	;volatile
  1982                           
  1983                           ;functions.c: 429: SSPIE = 0;
  1984  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  1985  07CD  1303               	bcf	3,6	;RP1=0, select bank1
  1986  07CE  118C               	bcf	12,3	;volatile
  1987                           
  1988                           ;functions.c: 432: RA5 = 1;
  1989  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1990  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1991  07D1  1685               	bsf	5,5	;volatile
  1992                           
  1993                           ;functions.c: 433: RA4 = 1;
  1994  07D2  1605               	bsf	5,4	;volatile
  1995                           
  1996                           ;functions.c: 434: RD4 = 1;
  1997  07D3  1608               	bsf	8,4	;volatile
  1998                           
  1999                           ;functions.c: 435: RD3 = 1;
  2000  07D4  1588               	bsf	8,3	;volatile
  2001                           
  2002                           ;functions.c: 437: RB2 = 1;
  2003  07D5  1506               	bsf	6,2	;volatile
  2004                           
  2005                           ;functions.c: 442: INTCONbits.RBIE = 1;
  2006  07D6  158B               	bsf	11,3	;volatile
  2007                           
  2008                           ;functions.c: 443: INTCONbits.PEIE = 1;
  2009  07D7  170B               	bsf	11,6	;volatile
  2010                           
  2011                           ;functions.c: 444: PIE1bits.TMR1IE = 1;
  2012  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  2013  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  2014  07DA  140C               	bsf	12,0	;volatile
  2015                           
  2016                           ;functions.c: 446: IOCBbits.IOCB5 = 1;
  2017  07DB  1696               	bsf	22,5	;volatile
  2018                           
  2019                           ;functions.c: 449: T1CON = 0b00110000;
  2020  07DC  3030               	movlw	48
  2021  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  2022  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  2023  07DF  0090               	movwf	16	;volatile
  2024                           
  2025                           ;functions.c: 450: TMR1H = 0x0B;
  2026  07E0  300B               	movlw	11
  2027  07E1  008F               	movwf	15	;volatile
  2028                           
  2029                           ;functions.c: 451: TMR1L = 0xDB;
  2030  07E2  30DB               	movlw	219
  2031  07E3  008E               	movwf	14	;volatile
  2032                           
  2033                           ;functions.c: 452: T1CONbits.TMR1ON = 1;
  2034  07E4  1410               	bsf	16,0	;volatile
  2035                           
  2036                           ;functions.c: 455: ADCON0bits.ADCS0 = 0;
  2037  07E5  131F               	bcf	31,6	;volatile
  2038                           
  2039                           ;functions.c: 456: ADCON0bits.ADCS1 = 0;
  2040  07E6  139F               	bcf	31,7	;volatile
  2041                           
  2042                           ;functions.c: 457: ADCON1bits.ADFM = 0;
  2043  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  2044  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  2045  07E9  139F               	bcf	31,7	;volatile
  2046                           
  2047                           ;functions.c: 458: ADCON1bits.VCFG1 = 0;
  2048  07EA  129F               	bcf	31,5	;volatile
  2049                           
  2050                           ;functions.c: 459: ADCON1bits.VCFG0 = 0;
  2051  07EB  121F               	bcf	31,4	;volatile
  2052                           
  2053                           ;functions.c: 462: intSecondCounter = 0;
  2054  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2055  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2056  07EE  01EB               	clrf	_intSecondCounter
  2057  07EF  01EC               	clrf	_intSecondCounter+1
  2058                           
  2059                           ;functions.c: 463: intHalfSecondCounter = 0;
  2060  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  2061  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  2062  07F2  01DF               	clrf	_intHalfSecondCounter^(0+128)
  2063  07F3  01E0               	clrf	(_intHalfSecondCounter+1)^(0+128)
  2064                           
  2065                           ;functions.c: 464: intMinuteCounter = 0;
  2066  07F4  01E1               	clrf	_intMinuteCounter^(0+128)
  2067  07F5  01E2               	clrf	(_intMinuteCounter+1)^(0+128)
  2068  07F6  0008               	return
  2069  07F7                     __end_of_init:	
  2070                           
  2071                           	psect	text6
  2072  0FA4                     __ptext6:	
  2073 ;; *************** function _TransiverToReceive *****************
  2074 ;; Defined at:
  2075 ;;		line 15 in file "functions.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          0       2       0       0       0
  2092 ;;      Totals:         0       2       0       0       0
  2093 ;;Total ram usage:        2 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    7
  2096 ;; This function calls:
  2097 ;;		_FindChannel
  2098 ;;		_RegisterRead
  2099 ;;		_RegisterSet
  2100 ;;		_SetRFMode
  2101 ;;		_timerFunction
  2102 ;; This function is called by:
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           
  2108                           ;psect for function _TransiverToReceive
  2109  0FA4                     _TransiverToReceive:	
  2110                           
  2111                           ;functions.c: 17: timerFunction(2, 5);
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2115  0FA4  3002               	movlw	2
  2116  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0FA7  00A0               	movwf	timerFunction@intTimerNumber
  2119  0FA8  3000               	movlw	0
  2120  0FA9  00A1               	movwf	timerFunction@intTimerNumber+1
  2121  0FAA  3005               	movlw	5
  2122  0FAB  00A2               	movwf	timerFunction@intSetSeconds
  2123  0FAC  3000               	movlw	0
  2124  0FAD  00A3               	movwf	timerFunction@intSetSeconds+1
  2125  0FAE  120A  158A  256A  120A  158A  	fcall	_timerFunction
  2126                           
  2127                           ;functions.c: 21: SetRFMode(0x20);
  2128  0FB3  3020               	movlw	32
  2129  0FB4  120A  118A  26BC  120A  158A  	fcall	_SetRFMode
  2130                           
  2131                           ;functions.c: 22: _delay((unsigned long)((10)*(4000000/4000.0)));
  2132  0FB9  300D               	movlw	13
  2133  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0FBC  00B6               	movwf	??_TransiverToReceive+1
  2136  0FBD  30FB               	movlw	251
  2137  0FBE  00B5               	movwf	??_TransiverToReceive
  2138  0FBF                     u1847:	
  2139  0FBF  0BB5               	decfsz	??_TransiverToReceive,f
  2140  0FC0  2FBF               	goto	u1847
  2141  0FC1  0BB6               	decfsz	??_TransiverToReceive+1,f
  2142  0FC2  2FBF               	goto	u1847
  2143                           
  2144                           ;functions.c: 23: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  2145  0FC3  300E               	movlw	14
  2146  0FC4  120A  158A  25D6  120A  158A  	fcall	_RegisterRead
  2147  0FC9  3802               	iorlw	2
  2148  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0FCC  00B5               	movwf	??_TransiverToReceive
  2151  0FCD  0835               	movf	??_TransiverToReceive,w
  2152  0FCE  00A7               	movwf	RegisterSet@value
  2153  0FCF  300E               	movlw	14
  2154  0FD0  120A  158A  25BC  120A  158A  	fcall	_RegisterSet
  2155                           
  2156                           ;functions.c: 24: SetRFMode(0x40);
  2157  0FD5  3040               	movlw	64
  2158  0FD6  120A  118A  26BC  120A  158A  	fcall	_SetRFMode
  2159  0FDB                     l2352:	
  2160                           ;functions.c: 25: while((RegisterRead(0x0E) & 0b00000010) == 0)
  2161                           
  2162  0FDB  300E               	movlw	14
  2163  0FDC  120A  158A  25D6  120A  158A  	fcall	_RegisterRead
  2164  0FE1  3902               	andlw	2
  2165  0FE2  1D03               	btfss	3,2
  2166  0FE3  2FEE               	goto	l2354
  2167                           
  2168                           ;functions.c: 26: {
  2169                           ;functions.c: 27: if(bTimerComplete[2])
  2170  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0FE6  0854               	movf	(_bTimerComplete^(0+128)+2),w
  2173  0FE7  1903               	btfsc	3,2
  2174  0FE8  2FDB               	goto	l2352
  2175                           
  2176                           ;functions.c: 28: {
  2177                           ;functions.c: 29: FindChannel();
  2178  0FE9  120A  118A  22C8  120A  158A  	fcall	_FindChannel
  2179  0FEE                     l2354:	
  2180                           ;functions.c: 30: break;
  2181                           
  2182                           
  2183                           ;functions.c: 31: }
  2184                           ;functions.c: 32: }
  2185                           ;functions.c: 34: SetRFMode(0x60);
  2186  0FEE  3060               	movlw	96
  2187  0FEF  120A  118A  26BC  120A  158A  	fcall	_SetRFMode
  2188                           
  2189                           ;functions.c: 35: _delay((unsigned long)((500)*(4000000/4000000.0)));
  2190  0FF4  30A5               	movlw	165
  2191  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0FF7  00B5               	movwf	??_TransiverToReceive
  2194  0FF8                     u1857:	
  2195  0FF8  0BB5               	decfsz	??_TransiverToReceive,f
  2196  0FF9  2FF8               	goto	u1857
  2197  0FFA  2FFB               	nop2
  2198                           
  2199                           ;functions.c: 36: bTransiverModeReceive = 1;
  2200  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0FFD  01EE               	clrf	_bTransiverModeReceive
  2203  0FFE  0AEE               	incf	_bTransiverModeReceive,f
  2204  0FFF  0008               	return
  2205  1000                     __end_of_TransiverToReceive:	
  2206                           
  2207                           	psect	text7
  2208  072B                     __ptext7:	
  2209 ;; *************** function _TransiverReadFIFO *****************
  2210 ;; Defined at:
  2211 ;;		line 41 in file "functions.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  j               2   63[BANK0 ] int 
  2216 ;;  ReceivedStri   30   31[BANK0 ] unsigned char [30]
  2217 ;;  i               2   61[BANK0 ] int 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         0      34       0       0       0
  2229 ;;      Temps:          0       2       0       0       0
  2230 ;;      Totals:         0      36       0       0       0
  2231 ;;Total ram usage:       36 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    9
  2234 ;; This function calls:
  2235 ;;		_ReadFIFO
  2236 ;;		_ReceivedPacketHandler
  2237 ;;		_SetRFMode
  2238 ;;		_timerFunction
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _TransiverReadFIFO
  2246  072B                     _TransiverReadFIFO:	
  2247                           
  2248                           ;functions.c: 43: unsigned char ReceivedString[30];
  2249                           ;functions.c: 44: timerFunction(3, 5);
  2250                           
  2251                           ;incstack = 0
  2252 ;; hardware stack exceeded
  2253                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2254  072B  3003               	movlw	3
  2255  072C  1283               	bcf	3,5	;RP0=0, select bank0
  2256  072D  1303               	bcf	3,6	;RP1=0, select bank0
  2257  072E  00A0               	movwf	timerFunction@intTimerNumber
  2258  072F  3000               	movlw	0
  2259  0730  00A1               	movwf	timerFunction@intTimerNumber+1
  2260  0731  3005               	movlw	5
  2261  0732  00A2               	movwf	timerFunction@intSetSeconds
  2262  0733  3000               	movlw	0
  2263  0734  00A3               	movwf	timerFunction@intSetSeconds+1
  2264  0735  120A  158A  256A  120A  118A  	fcall	_timerFunction
  2265                           
  2266                           ;functions.c: 46: SetRFMode(0x20);
  2267  073A  3020               	movlw	32
  2268  073B  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  2269                           
  2270                           ;functions.c: 47: bTransiverModeReceive = 0;
  2271  0740  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0741  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0742  01EE               	clrf	_bTransiverModeReceive
  2274                           
  2275                           ;functions.c: 48: int i = 0;
  2276  0743  01DD               	clrf	TransiverReadFIFO@i
  2277  0744  01DE               	clrf	TransiverReadFIFO@i+1
  2278                           
  2279                           ;functions.c: 49: for (int j = 0; j < 30; ++j)
  2280  0745  01DF               	clrf	TransiverReadFIFO@j
  2281  0746  01E0               	clrf	TransiverReadFIFO@j+1
  2282  0747                     L2:	
  2283  0747  0860               	movf	TransiverReadFIFO@j+1,w
  2284  0748  3A80               	xorlw	128
  2285  0749  00FF               	movwf	127
  2286  074A  3080               	movlw	128
  2287  074B  027F               	subwf	127,w
  2288  074C  1D03               	skipz
  2289  074D  2F50               	goto	u1445
  2290  074E  301E               	movlw	30
  2291  074F  025F               	subwf	TransiverReadFIFO@j,w
  2292  0750                     u1445:	
  2293  0750  1803               	btfsc	3,0
  2294  0751  2F74               	goto	l2382
  2295                           
  2296                           ;functions.c: 50: {
  2297                           ;functions.c: 51: ReceivedString[j] = 0;
  2298  0752  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0753  1303               	bcf	3,6	;RP1=0, select bank0
  2300  0754  085F               	movf	TransiverReadFIFO@j,w
  2301  0755  3E3F               	addlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  2302  0756  0084               	movwf	4
  2303  0757  1383               	bcf	3,7	;select IRP bank0
  2304  0758  0180               	clrf	0
  2305  0759  3001               	movlw	1
  2306  075A  07DF               	addwf	TransiverReadFIFO@j,f
  2307  075B  1803               	skipnc
  2308  075C  0AE0               	incf	TransiverReadFIFO@j+1,f
  2309  075D  3000               	movlw	0
  2310  075E  07E0               	addwf	TransiverReadFIFO@j+1,f
  2311  075F  2F47               	goto	L2
  2312  0760                     l2378:	
  2313                           ;functions.c: 52: }
  2314                           ;functions.c: 53: while((RD0)&&(!bTimerComplete[3]))
  2315                           
  2316                           
  2317                           ;functions.c: 54: {
  2318                           ;functions.c: 55: ReceivedString[i] = ReadFIFO();
  2319  0760  120A  158A  254C  120A  118A  	fcall	_ReadFIFO
  2320  0765  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0766  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0767  00BD               	movwf	??_TransiverReadFIFO
  2323  0768  085D               	movf	TransiverReadFIFO@i,w
  2324  0769  3E3F               	addlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  2325  076A  0084               	movwf	4
  2326  076B  083D               	movf	??_TransiverReadFIFO,w
  2327  076C  1383               	bcf	3,7	;select IRP bank0
  2328  076D  0080               	movwf	0
  2329                           
  2330                           ;functions.c: 56: i++;
  2331  076E  3001               	movlw	1
  2332  076F  07DD               	addwf	TransiverReadFIFO@i,f
  2333  0770  1803               	skipnc
  2334  0771  0ADE               	incf	TransiverReadFIFO@i+1,f
  2335  0772  3000               	movlw	0
  2336  0773  07DE               	addwf	TransiverReadFIFO@i+1,f
  2337  0774                     l2382:	
  2338  0774  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0775  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0776  1C08               	btfss	8,0	;volatile
  2341  0777  2F7D               	goto	l2386
  2342  0778  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0779  1303               	bcf	3,6	;RP1=0, select bank1
  2344  077A  0855               	movf	(_bTimerComplete^(0+128)+3),w
  2345  077B  1903               	btfsc	3,2
  2346  077C  2F60               	goto	l2378
  2347  077D                     l2386:	
  2348                           
  2349                           ;functions.c: 57: }
  2350                           ;functions.c: 59: _delay((unsigned long)((10)*(4000000/4000.0)));
  2351  077D  300D               	movlw	13
  2352  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2353  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0780  00BE               	movwf	??_TransiverReadFIFO+1
  2355  0781  30FB               	movlw	251
  2356  0782  00BD               	movwf	??_TransiverReadFIFO
  2357  0783                     u1867:	
  2358  0783  0BBD               	decfsz	??_TransiverReadFIFO,f
  2359  0784  2F83               	goto	u1867
  2360  0785  0BBE               	decfsz	??_TransiverReadFIFO+1,f
  2361  0786  2F83               	goto	u1867
  2362                           
  2363                           ;functions.c: 60: SetRFMode(0x00);
  2364  0787  3000               	movlw	0
  2365  0788  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  2366                           
  2367                           ;functions.c: 62: ReceivedPacketHandler(ReceivedString);
  2368  078D  303F               	movlw	(low (TransiverReadFIFO@ReceivedString| 0))& (0+255)
  2369  078E  120A  118A  204E   	fcall	_ReceivedPacketHandler
  2370  0791  0008               	return
  2371  0792                     __end_of_TransiverReadFIFO:	
  2372                           
  2373                           	psect	text8
  2374  004E                     __ptext8:	
  2375 ;; *************** function _ReceivedPacketHandler *****************
  2376 ;; Defined at:
  2377 ;;		line 72 in file "functions.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  Data            1    wreg     PTR unsigned char 
  2380 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  Data            1   28[BANK0 ] PTR unsigned char 
  2383 ;;		 -> TransiverReadFIFO@ReceivedString(30), 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         0       1       0       0       0
  2395 ;;      Temps:          0       1       0       0       0
  2396 ;;      Totals:         0       2       0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    8
  2400 ;; This function calls:
  2401 ;;		_AnalogValue
  2402 ;;		_DarknessCheck
  2403 ;;		_DelayDs
  2404 ;;		_OperationMode
  2405 ;;		_TransmittPacket
  2406 ;;		_eeprom_read
  2407 ;; This function is called by:
  2408 ;;		_TransiverReadFIFO
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _ReceivedPacketHandler
  2414  004E                     _ReceivedPacketHandler:	
  2415                           
  2416                           ;incstack = 0
  2417 ;; hardware stack exceeded
  2418                           ; Regs used in _ReceivedPacketHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2419                           ;ReceivedPacketHandler@Data stored from wreg
  2420  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2421  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0050  00BC               	movwf	ReceivedPacketHandler@Data
  2423                           
  2424                           ;functions.c: 74: if(Data[0] != 44 || Data[3] != 55)
  2425  0051  083C               	movf	ReceivedPacketHandler@Data,w
  2426  0052  0084               	movwf	4
  2427  0053  302C               	movlw	44
  2428  0054  1383               	bcf	3,7	;select IRP bank0
  2429  0055  0600               	xorwf	0,w
  2430  0056  1D03               	btfss	3,2
  2431  0057  0008               	return
  2432  0058  083C               	movf	ReceivedPacketHandler@Data,w
  2433  0059  3E03               	addlw	3
  2434  005A  0084               	movwf	4
  2435  005B  3037               	movlw	55
  2436  005C  0600               	xorwf	0,w
  2437  005D  1D03               	btfss	3,2
  2438  005E  0008               	return
  2439  005F  2987               	goto	l2112
  2440  0060                     l296:	
  2441                           ;functions.c: 81: {
  2442                           ;functions.c: 82: case 1:
  2443                           
  2444                           ;functions.c: 80: switch (Data[2])
  2445                           
  2446                           ;functions.c: 78: {
  2447                           ;functions.c: 79: case 1:
  2448                           
  2449                           ;functions.c: 77: switch (Data[1])
  2450                           
  2451                           ;functions.c: 75: return;
  2452                           
  2453                           
  2454                           ;functions.c: 83: RC2 = 1;
  2455  0060  1507               	bsf	7,2	;volatile
  2456                           
  2457                           ;functions.c: 84: DelayDs(10);
  2458  0061  300A               	movlw	10
  2459  0062  00A0               	movwf	DelayDs@cnt
  2460  0063  3000               	movlw	0
  2461  0064  00A1               	movwf	DelayDs@cnt+1
  2462  0065  120A  158A  25F2  120A  118A  	fcall	_DelayDs
  2463                           
  2464                           ;functions.c: 85: RC2 = 0;
  2465  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2466  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2467  006C  1107               	bcf	7,2	;volatile
  2468                           
  2469                           ;functions.c: 86: DelayDs(5);
  2470  006D  3005               	movlw	5
  2471  006E  00A0               	movwf	DelayDs@cnt
  2472  006F  3000               	movlw	0
  2473  0070  00A1               	movwf	DelayDs@cnt+1
  2474  0071  120A  158A  25F2   	fcall	_DelayDs
  2475                           
  2476                           ;functions.c: 87: break;
  2477  0074  0008               	return
  2478  0075                     l298:	
  2479                           ;functions.c: 89: case 2:
  2480                           
  2481                           
  2482                           ;functions.c: 90: RC1 = 1;
  2483  0075  1487               	bsf	7,1	;volatile
  2484                           
  2485                           ;functions.c: 91: DelayDs(10);
  2486  0076  300A               	movlw	10
  2487  0077  00A0               	movwf	DelayDs@cnt
  2488  0078  3000               	movlw	0
  2489  0079  00A1               	movwf	DelayDs@cnt+1
  2490  007A  120A  158A  25F2  120A  118A  	fcall	_DelayDs
  2491                           
  2492                           ;functions.c: 92: RC1 = 0;
  2493  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0081  1087               	bcf	7,1	;volatile
  2496                           
  2497                           ;functions.c: 93: DelayDs(5);
  2498  0082  3005               	movlw	5
  2499  0083  00A0               	movwf	DelayDs@cnt
  2500  0084  3000               	movlw	0
  2501  0085  00A1               	movwf	DelayDs@cnt+1
  2502  0086  120A  158A  25F2   	fcall	_DelayDs
  2503                           
  2504                           ;functions.c: 94: break;
  2505  0089  0008               	return
  2506  008A                     l299:	
  2507                           ;functions.c: 96: case 3:
  2508                           
  2509                           
  2510                           ;functions.c: 97: RB2 = 0;
  2511  008A  1106               	bcf	6,2	;volatile
  2512                           
  2513                           ;functions.c: 98: DelayDs(10);
  2514  008B  300A               	movlw	10
  2515  008C  00A0               	movwf	DelayDs@cnt
  2516  008D  3000               	movlw	0
  2517  008E  00A1               	movwf	DelayDs@cnt+1
  2518  008F  120A  158A  25F2  120A  118A  	fcall	_DelayDs
  2519                           
  2520                           ;functions.c: 99: RB2 = 1;
  2521  0094  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0095  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0096  1506               	bsf	6,2	;volatile
  2524                           
  2525                           ;functions.c: 100: DelayDs(5);
  2526  0097  3005               	movlw	5
  2527  0098  00A0               	movwf	DelayDs@cnt
  2528  0099  3000               	movlw	0
  2529  009A  00A1               	movwf	DelayDs@cnt+1
  2530  009B  120A  158A  25F2   	fcall	_DelayDs
  2531                           
  2532                           ;functions.c: 106: }
  2533                           
  2534                           ;functions.c: 104: break;
  2535                           
  2536                           ;functions.c: 103: default:
  2537                           
  2538                           ;functions.c: 101: break;
  2539  009E  0008               	return
  2540  009F                     l2048:	
  2541  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2542  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2543  00A1  083C               	movf	ReceivedPacketHandler@Data,w
  2544  00A2  3E02               	addlw	2
  2545  00A3  0084               	movwf	4
  2546  00A4  1383               	bcf	3,7	;select IRP bank0
  2547  00A5  0800               	movf	0,w
  2548                           
  2549                           ; Switch size 1, requested type "space"
  2550                           ; Number of cases is 3, Range of values is 1 to 3
  2551                           ; switch strategies available:
  2552                           ; Name         Instructions Cycles
  2553                           ; simple_byte           10     6 (average)
  2554                           ; direct_byte           20    11 (fixed)
  2555                           ; jumptable            263     9 (fixed)
  2556                           ;	Chosen strategy is simple_byte
  2557  00A6  3A01               	xorlw	1	; case 1
  2558  00A7  1903               	skipnz
  2559  00A8  2860               	goto	l296
  2560  00A9  3A03               	xorlw	3	; case 2
  2561  00AA  1903               	skipnz
  2562  00AB  2875               	goto	l298
  2563  00AC  3A01               	xorlw	1	; case 3
  2564  00AD  1903               	skipnz
  2565  00AE  288A               	goto	l299
  2566  00AF  29A3               	goto	l292
  2567                           
  2568                           ;functions.c: 107: break;
  2569  00B0  0008               	return
  2570  00B1                     l2050:	
  2571                           ;functions.c: 108: case 2:
  2572                           
  2573                           
  2574                           ;functions.c: 109: if(Data[2] == 1 && OperationMode() == 6)
  2575  00B1  083C               	movf	ReceivedPacketHandler@Data,w
  2576  00B2  3E02               	addlw	2
  2577  00B3  0084               	movwf	4
  2578  00B4  0300               	decf	0,w
  2579  00B5  1D03               	btfss	3,2
  2580  00B6  28D4               	goto	l2060
  2581  00B7  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  2582  00BC  3A06               	xorlw	6
  2583  00BD  1D03               	skipz
  2584  00BE  28D4               	goto	l2060
  2585                           
  2586                           ;functions.c: 110: {
  2587                           ;functions.c: 111: intBlinkCycle = 1;
  2588  00BF  3001               	movlw	1
  2589  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2590  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2591  00C2  00E9               	movwf	_intBlinkCycle
  2592  00C3  3000               	movlw	0
  2593  00C4  00EA               	movwf	_intBlinkCycle+1
  2594                           
  2595                           ;functions.c: 112: intBlinkCounter = 0;
  2596  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2597  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  2598  00C7  01DB               	clrf	_intBlinkCounter^(0+128)
  2599  00C8  01DC               	clrf	(_intBlinkCounter+1)^(0+128)
  2600                           
  2601                           ;functions.c: 113: DelayDs(100);
  2602  00C9  3064               	movlw	100
  2603  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  2604  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  2605  00CC  00A0               	movwf	DelayDs@cnt
  2606  00CD  3000               	movlw	0
  2607  00CE  00A1               	movwf	DelayDs@cnt+1
  2608  00CF  120A  158A  25F2  120A  118A  	fcall	_DelayDs
  2609  00D4                     l2060:	
  2610                           
  2611                           ;functions.c: 114: }
  2612                           ;functions.c: 115: if(Data[2] == 2 && OperationMode() == 7)
  2613  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2614  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2615  00D6  083C               	movf	ReceivedPacketHandler@Data,w
  2616  00D7  3E02               	addlw	2
  2617  00D8  0084               	movwf	4
  2618  00D9  3002               	movlw	2
  2619  00DA  1383               	bcf	3,7	;select IRP bank0
  2620  00DB  0600               	xorwf	0,w
  2621  00DC  1D03               	btfss	3,2
  2622  00DD  0008               	return
  2623  00DE  120A  118A  27F7  120A  118A  	fcall	_OperationMode
  2624  00E3  3A07               	xorlw	7
  2625  00E4  1D03               	skipz
  2626  00E5  0008               	return
  2627                           
  2628                           ;functions.c: 116: {
  2629                           ;functions.c: 117: intBlinkCycle = 1;
  2630  00E6  3001               	movlw	1
  2631  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2632  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  2633  00E9  00E9               	movwf	_intBlinkCycle
  2634  00EA  3000               	movlw	0
  2635  00EB  00EA               	movwf	_intBlinkCycle+1
  2636                           
  2637                           ;functions.c: 118: intBlinkCounter = 0;
  2638  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2639  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  2640  00EE  01DB               	clrf	_intBlinkCounter^(0+128)
  2641  00EF  01DC               	clrf	(_intBlinkCounter+1)^(0+128)
  2642                           
  2643                           ;functions.c: 119: DelayDs(100);
  2644  00F0  3064               	movlw	100
  2645  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2646  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2647  00F3  00A0               	movwf	DelayDs@cnt
  2648  00F4  3000               	movlw	0
  2649  00F5  00A1               	movwf	DelayDs@cnt+1
  2650  00F6  120A  158A  25F2   	fcall	_DelayDs
  2651                           
  2652                           ;functions.c: 120: }
  2653                           ;functions.c: 121: break;
  2654  00F9  0008               	return
  2655  00FA                     l2070:	
  2656                           ;functions.c: 123: case 3:
  2657                           
  2658                           
  2659                           ;functions.c: 124: if(Data[2] != 0)
  2660  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  2661  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  2662  00FC  083C               	movf	ReceivedPacketHandler@Data,w
  2663  00FD  3E02               	addlw	2
  2664  00FE  0084               	movwf	4
  2665  00FF  1383               	bcf	3,7	;select IRP bank0
  2666  0100  0800               	movf	0,w
  2667  0101  1D03               	btfss	3,2
  2668  0102  0008               	return
  2669                           
  2670                           ;functions.c: 126: TransmittPacket(3, AnalogValue(0));
  2671                           
  2672                           ;functions.c: 125: break;
  2673  0103  3000               	movlw	0
  2674  0104  120A  158A  2639  120A  118A  	fcall	_AnalogValue
  2675  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2676  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2677  010B  00BB               	movwf	??_ReceivedPacketHandler
  2678  010C  083B               	movf	??_ReceivedPacketHandler,w
  2679  010D  00B5               	movwf	TransmittPacket@value
  2680  010E  3003               	movlw	3
  2681  010F  120A  118A  257E   	fcall	_TransmittPacket
  2682                           
  2683                           ;functions.c: 127: break;
  2684  0112  0008               	return
  2685  0113                     l2076:	
  2686                           ;functions.c: 129: case 4:
  2687                           
  2688                           
  2689                           ;functions.c: 130: if(Data[2] != 0)
  2690  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0114  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0115  083C               	movf	ReceivedPacketHandler@Data,w
  2693  0116  3E02               	addlw	2
  2694  0117  0084               	movwf	4
  2695  0118  1383               	bcf	3,7	;select IRP bank0
  2696  0119  0800               	movf	0,w
  2697  011A  1D03               	btfss	3,2
  2698  011B  0008               	return
  2699                           
  2700                           ;functions.c: 132: TransmittPacket(4, AnalogValue(3));
  2701                           
  2702                           ;functions.c: 131: break;
  2703  011C  3003               	movlw	3
  2704  011D  120A  158A  2639  120A  118A  	fcall	_AnalogValue
  2705  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0124  00BB               	movwf	??_ReceivedPacketHandler
  2708  0125  083B               	movf	??_ReceivedPacketHandler,w
  2709  0126  00B5               	movwf	TransmittPacket@value
  2710  0127  3004               	movlw	4
  2711  0128  120A  118A  257E   	fcall	_TransmittPacket
  2712                           
  2713                           ;functions.c: 133: break;
  2714  012B  0008               	return
  2715  012C                     l2082:	
  2716                           ;functions.c: 135: case 5:
  2717                           
  2718                           
  2719                           ;functions.c: 136: if(Data[2] != 0)
  2720  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2721  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2722  012E  083C               	movf	ReceivedPacketHandler@Data,w
  2723  012F  3E02               	addlw	2
  2724  0130  0084               	movwf	4
  2725  0131  1383               	bcf	3,7	;select IRP bank0
  2726  0132  0800               	movf	0,w
  2727  0133  1D03               	btfss	3,2
  2728  0134  0008               	return
  2729                           
  2730                           ;functions.c: 138: TransmittPacket(5, eeprom_read(addressDarknessValue));
  2731                           
  2732                           ;functions.c: 137: break;
  2733  0135  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0136  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0137  0857               	movf	_addressDarknessValue^(0+128),w
  2736  0138  120A  158A  2615  120A  118A  	fcall	_eeprom_read
  2737  013D  1283               	bcf	3,5	;RP0=0, select bank0
  2738  013E  1303               	bcf	3,6	;RP1=0, select bank0
  2739  013F  00BB               	movwf	??_ReceivedPacketHandler
  2740  0140  083B               	movf	??_ReceivedPacketHandler,w
  2741  0141  00B5               	movwf	TransmittPacket@value
  2742  0142  3005               	movlw	5
  2743  0143  120A  118A  257E   	fcall	_TransmittPacket
  2744                           
  2745                           ;functions.c: 139: break;
  2746  0146  0008               	return
  2747  0147                     l2088:	
  2748                           ;functions.c: 141: case 6:
  2749                           
  2750                           
  2751                           ;functions.c: 142: if(Data[2] != 0)
  2752  0147  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0148  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0149  083C               	movf	ReceivedPacketHandler@Data,w
  2755  014A  3E02               	addlw	2
  2756  014B  0084               	movwf	4
  2757  014C  1383               	bcf	3,7	;select IRP bank0
  2758  014D  0800               	movf	0,w
  2759  014E  1D03               	btfss	3,2
  2760  014F  0008               	return
  2761                           
  2762                           ;functions.c: 144: if(bValueFromPot == TRUE)
  2763                           
  2764                           ;functions.c: 143: break;
  2765  0150  036F               	decf	_bValueFromPot,w
  2766  0151  1D03               	btfss	3,2
  2767  0152  295A               	goto	l2096
  2768                           
  2769                           ;functions.c: 145: TransmittPacket(6, 1);
  2770  0153  01B5               	clrf	TransmittPacket@value
  2771  0154  0AB5               	incf	TransmittPacket@value,f
  2772  0155  3006               	movlw	6
  2773  0156  120A  118A  257E   	fcall	_TransmittPacket
  2774  0159  0008               	return
  2775  015A                     l2096:	
  2776                           
  2777                           ;functions.c: 146: else
  2778                           ;functions.c: 147: TransmittPacket(6, 0);
  2779  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2780  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2781  015C  01B5               	clrf	TransmittPacket@value
  2782  015D  3006               	movlw	6
  2783  015E  120A  118A  257E   	fcall	_TransmittPacket
  2784                           
  2785                           ;functions.c: 148: break;
  2786  0161  0008               	return
  2787  0162                     l2098:	
  2788                           ;functions.c: 150: case 7:
  2789                           
  2790                           
  2791                           ;functions.c: 151: if(Data[2] != 0)
  2792  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0164  083C               	movf	ReceivedPacketHandler@Data,w
  2795  0165  3E02               	addlw	2
  2796  0166  0084               	movwf	4
  2797  0167  1383               	bcf	3,7	;select IRP bank0
  2798  0168  0800               	movf	0,w
  2799  0169  1D03               	btfss	3,2
  2800  016A  0008               	return
  2801                           
  2802                           ;functions.c: 153: DarknessCheck();
  2803                           
  2804                           ;functions.c: 152: break;
  2805  016B  120A  158A  2662  120A  118A  	fcall	_DarknessCheck
  2806                           
  2807                           ;functions.c: 154: if(bDark)
  2808  0170  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0171  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0172  086D               	movf	_bDark,w
  2811  0173  1903               	btfsc	3,2
  2812  0174  297C               	goto	l2108
  2813                           
  2814                           ;functions.c: 155: TransmittPacket(7, 1);
  2815  0175  01B5               	clrf	TransmittPacket@value
  2816  0176  0AB5               	incf	TransmittPacket@value,f
  2817  0177  3007               	movlw	7
  2818  0178  120A  118A  257E   	fcall	_TransmittPacket
  2819  017B  0008               	return
  2820  017C                     l2108:	
  2821                           
  2822                           ;functions.c: 156: else
  2823                           ;functions.c: 157: TransmittPacket(7, 2);
  2824  017C  3002               	movlw	2
  2825  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2826  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2827  017F  00BB               	movwf	??_ReceivedPacketHandler
  2828  0180  083B               	movf	??_ReceivedPacketHandler,w
  2829  0181  00B5               	movwf	TransmittPacket@value
  2830  0182  3007               	movlw	7
  2831  0183  120A  118A  257E   	fcall	_TransmittPacket
  2832                           
  2833                           ;functions.c: 162: }
  2834                           
  2835                           ;functions.c: 161: break;
  2836                           
  2837                           ;functions.c: 160: default:
  2838                           
  2839                           ;functions.c: 158: break;
  2840  0186  0008               	return
  2841  0187                     l2112:	
  2842  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0189  0A3C               	incf	ReceivedPacketHandler@Data,w
  2845  018A  0084               	movwf	4
  2846  018B  1383               	bcf	3,7	;select IRP bank0
  2847  018C  0800               	movf	0,w
  2848                           
  2849                           ; Switch size 1, requested type "space"
  2850                           ; Number of cases is 7, Range of values is 1 to 7
  2851                           ; switch strategies available:
  2852                           ; Name         Instructions Cycles
  2853                           ; simple_byte           22    12 (average)
  2854                           ; direct_byte           32    11 (fixed)
  2855                           ; jumptable            263     9 (fixed)
  2856                           ;	Chosen strategy is simple_byte
  2857  018D  3A01               	xorlw	1	; case 1
  2858  018E  1903               	skipnz
  2859  018F  289F               	goto	l2048
  2860  0190  3A03               	xorlw	3	; case 2
  2861  0191  1903               	skipnz
  2862  0192  28B1               	goto	l2050
  2863  0193  3A01               	xorlw	1	; case 3
  2864  0194  1903               	skipnz
  2865  0195  28FA               	goto	l2070
  2866  0196  3A07               	xorlw	7	; case 4
  2867  0197  1903               	skipnz
  2868  0198  2913               	goto	l2076
  2869  0199  3A01               	xorlw	1	; case 5
  2870  019A  1903               	skipnz
  2871  019B  292C               	goto	l2082
  2872  019C  3A03               	xorlw	3	; case 6
  2873  019D  1903               	skipnz
  2874  019E  2947               	goto	l2088
  2875  019F  3A01               	xorlw	1	; case 7
  2876  01A0  1903               	skipnz
  2877  01A1  2962               	goto	l2098
  2878  01A2  29A3               	goto	l292
  2879  01A3                     l292:	
  2880  01A3  0008               	return
  2881  01A4                     __end_of_ReceivedPacketHandler:	
  2882                           
  2883                           	psect	text9
  2884  07F7                     __ptext9:	
  2885 ;; *************** function _OperationMode *****************
  2886 ;; Defined at:
  2887 ;;		line 915 in file "functions.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      unsigned char 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         0       0       0       0       0
  2902 ;;      Locals:         0       1       0       0       0
  2903 ;;      Temps:          0       1       0       0       0
  2904 ;;      Totals:         0       2       0       0       0
  2905 ;;Total ram usage:        2 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    2
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;;		_ReceivedPacketHandler
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _OperationMode
  2918  07F7                     _OperationMode:	
  2919                           
  2920                           ;functions.c: 917: unsigned char bracketStatus;
  2921                           ;functions.c: 918: bracketStatus = ((~PORTB) & 0b00000111) ;
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _OperationMode: [wreg+status,2]
  2925  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2926  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2927  07F9  0906               	comf	6,w	;volatile
  2928  07FA  3907               	andlw	7
  2929  07FB  00A0               	movwf	??_OperationMode
  2930  07FC  0820               	movf	??_OperationMode,w
  2931  07FD  00A1               	movwf	OperationMode@bracketStatus
  2932                           
  2933                           ;functions.c: 920: return 6;
  2934  07FE  3006               	movlw	6
  2935  07FF  0008               	return
  2936  0800                     __end_of_OperationMode:	
  2937                           
  2938                           	psect	text10
  2939  0D4C                     __ptext10:	
  2940 ;; *************** function _ReadFIFO *****************
  2941 ;; Defined at:
  2942 ;;		line 733 in file "functions.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  value           1    4[BANK0 ] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         0       1       0       0       0
  2958 ;;      Temps:          0       1       0       0       0
  2959 ;;      Totals:         0       2       0       0       0
  2960 ;;Total ram usage:        2 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    4
  2963 ;; This function calls:
  2964 ;;		_ReadSPI
  2965 ;; This function is called by:
  2966 ;;		_TransiverReadFIFO
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _ReadFIFO
  2972  0D4C                     _ReadFIFO:	
  2973                           
  2974                           ;functions.c: 735: BYTE value;
  2975                           ;functions.c: 736: RA5 = 0;
  2976                           
  2977                           ;incstack = 0
  2978                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  2979  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0D4E  1285               	bcf	5,5	;volatile
  2982                           
  2983                           ;functions.c: 737: value = ReadSPI();
  2984  0D4F  120A  158A  250C   	fcall	_ReadSPI
  2985  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0D54  00A3               	movwf	??_ReadFIFO
  2988  0D55  0823               	movf	??_ReadFIFO,w
  2989  0D56  00A4               	movwf	ReadFIFO@value
  2990                           
  2991                           ;functions.c: 738: RA5 = 1;
  2992  0D57  1685               	bsf	5,5	;volatile
  2993                           
  2994                           ;functions.c: 739: return value;
  2995  0D58  0824               	movf	ReadFIFO@value,w
  2996  0D59  0008               	return
  2997  0D5A                     __end_of_ReadFIFO:	
  2998                           
  2999                           	psect	text11
  3000  03C8                     __ptext11:	
  3001 ;; *************** function _TransiverInit *****************
  3002 ;; Defined at:
  3003 ;;		line 498 in file "functions.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0
  3019 ;;      Temps:          0       1       0       0       0
  3020 ;;      Totals:         0       1       0       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    7
  3024 ;; This function calls:
  3025 ;;		_Blink
  3026 ;;		_FindChannel
  3027 ;;		_RegisterRead
  3028 ;;		_RegisterSet
  3029 ;;		_SetRFMode
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _TransiverInit
  3037  03C8                     _TransiverInit:	
  3038                           
  3039                           ;functions.c: 501: RegisterSet(0x00, 0x30);
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3043  03C8  3030               	movlw	48
  3044  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3045  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3046  03CB  00B5               	movwf	??_TransiverInit
  3047  03CC  0835               	movf	??_TransiverInit,w
  3048  03CD  00A7               	movwf	RegisterSet@value
  3049  03CE  3000               	movlw	0
  3050  03CF  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3051                           
  3052                           ;functions.c: 502: RegisterSet(0x01,(0xA8));
  3053  03D4  30A8               	movlw	168
  3054  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  3055  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  3056  03D7  00B5               	movwf	??_TransiverInit
  3057  03D8  0835               	movf	??_TransiverInit,w
  3058  03D9  00A7               	movwf	RegisterSet@value
  3059  03DA  3001               	movlw	1
  3060  03DB  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3061                           
  3062                           ;functions.c: 503: RegisterSet(0x02, 0x09);
  3063  03E0  3009               	movlw	9
  3064  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3065  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3066  03E3  00B5               	movwf	??_TransiverInit
  3067  03E4  0835               	movf	??_TransiverInit,w
  3068  03E5  00A7               	movwf	RegisterSet@value
  3069  03E6  3002               	movlw	2
  3070  03E7  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3071                           
  3072                           ;functions.c: 504: RegisterSet(0x03, 0x07);
  3073  03EC  3007               	movlw	7
  3074  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3075  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3076  03EF  00B5               	movwf	??_TransiverInit
  3077  03F0  0835               	movf	??_TransiverInit,w
  3078  03F1  00A7               	movwf	RegisterSet@value
  3079  03F2  3003               	movlw	3
  3080  03F3  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3081                           
  3082                           ;functions.c: 505: RegisterSet(0x05,(0x0A));
  3083  03F8  300A               	movlw	10
  3084  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  3085  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  3086  03FB  00B5               	movwf	??_TransiverInit
  3087  03FC  0835               	movf	??_TransiverInit,w
  3088  03FD  00A7               	movwf	RegisterSet@value
  3089  03FE  3005               	movlw	5
  3090  03FF  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3091                           
  3092                           ;functions.c: 506: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3093  0404  30B9               	movlw	185
  3094  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0407  00B5               	movwf	??_TransiverInit
  3097  0408  0835               	movf	??_TransiverInit,w
  3098  0409  00A7               	movwf	RegisterSet@value
  3099  040A  300D               	movlw	13
  3100  040B  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3101                           
  3102                           ;functions.c: 507: RegisterSet(0x0E,(0x01|0x10|0x01));
  3103  0410  3011               	movlw	17
  3104  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3105  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0413  00B5               	movwf	??_TransiverInit
  3107  0414  0835               	movf	??_TransiverInit,w
  3108  0415  00A7               	movwf	RegisterSet@value
  3109  0416  300E               	movlw	14
  3110  0417  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3111                           
  3112                           ;functions.c: 508: RegisterSet(0x10, 0xA3);
  3113  041C  30A3               	movlw	163
  3114  041D  1283               	bcf	3,5	;RP0=0, select bank0
  3115  041E  1303               	bcf	3,6	;RP1=0, select bank0
  3116  041F  00B5               	movwf	??_TransiverInit
  3117  0420  0835               	movf	??_TransiverInit,w
  3118  0421  00A7               	movwf	RegisterSet@value
  3119  0422  3010               	movlw	16
  3120  0423  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3121                           
  3122                           ;functions.c: 509: RegisterSet(0x12,(0x18|0x20|0x06));
  3123  0428  303E               	movlw	62
  3124  0429  1283               	bcf	3,5	;RP0=0, select bank0
  3125  042A  1303               	bcf	3,6	;RP1=0, select bank0
  3126  042B  00B5               	movwf	??_TransiverInit
  3127  042C  0835               	movf	??_TransiverInit,w
  3128  042D  00A7               	movwf	RegisterSet@value
  3129  042E  3012               	movlw	18
  3130  042F  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3131                           
  3132                           ;functions.c: 510: RegisterSet(0x16,('S'));
  3133  0434  3053               	movlw	83
  3134  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0437  00B5               	movwf	??_TransiverInit
  3137  0438  0835               	movf	??_TransiverInit,w
  3138  0439  00A7               	movwf	RegisterSet@value
  3139  043A  3016               	movlw	22
  3140  043B  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3141                           
  3142                           ;functions.c: 511: RegisterSet(0x17,('Y'));
  3143  0440  3059               	movlw	89
  3144  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0443  00B5               	movwf	??_TransiverInit
  3147  0444  0835               	movf	??_TransiverInit,w
  3148  0445  00A7               	movwf	RegisterSet@value
  3149  0446  3017               	movlw	23
  3150  0447  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3151                           
  3152                           ;functions.c: 512: RegisterSet(0x18,('N'));
  3153  044C  304E               	movlw	78
  3154  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3155  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3156  044F  00B5               	movwf	??_TransiverInit
  3157  0450  0835               	movf	??_TransiverInit,w
  3158  0451  00A7               	movwf	RegisterSet@value
  3159  0452  3018               	movlw	24
  3160  0453  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3161                           
  3162                           ;functions.c: 513: RegisterSet(0x19,('C'));
  3163  0458  3043               	movlw	67
  3164  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3165  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3166  045B  00B5               	movwf	??_TransiverInit
  3167  045C  0835               	movf	??_TransiverInit,w
  3168  045D  00A7               	movwf	RegisterSet@value
  3169  045E  3019               	movlw	25
  3170  045F  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3171                           
  3172                           ;functions.c: 514: RegisterSet(0x1A, 0x72);
  3173  0464  3072               	movlw	114
  3174  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3175  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0467  00B5               	movwf	??_TransiverInit
  3177  0468  0835               	movf	??_TransiverInit,w
  3178  0469  00A7               	movwf	RegisterSet@value
  3179  046A  301A               	movlw	26
  3180  046B  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3181                           
  3182                           ;functions.c: 515: RegisterSet(0x1B, 0x3C);
  3183  0470  303C               	movlw	60
  3184  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3185  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3186  0473  00B5               	movwf	??_TransiverInit
  3187  0474  0835               	movf	??_TransiverInit,w
  3188  0475  00A7               	movwf	RegisterSet@value
  3189  0476  301B               	movlw	27
  3190  0477  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3191                           
  3192                           ;functions.c: 516: RegisterSet(0x1F, 0x80);
  3193  047C  3080               	movlw	128
  3194  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3195  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3196  047F  00B5               	movwf	??_TransiverInit
  3197  0480  0835               	movf	??_TransiverInit,w
  3198  0481  00A7               	movwf	RegisterSet@value
  3199  0482  301F               	movlw	31
  3200  0483  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3201                           
  3202                           ;functions.c: 517: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3203  0488  3000               	movlw	0
  3204  0489  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  3205  048E  3801               	iorlw	1
  3206  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0491  00B5               	movwf	??_TransiverInit
  3209  0492  0835               	movf	??_TransiverInit,w
  3210  0493  00A7               	movwf	RegisterSet@value
  3211  0494  3000               	movlw	0
  3212  0495  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3213                           
  3214                           ;functions.c: 519: if(FindChannel() == 1)
  3215  049A  120A  118A  22C8  120A  118A  	fcall	_FindChannel
  3216  049F  3A01               	xorlw	1
  3217  04A0  1D03               	skipz
  3218  04A1  2CAD               	goto	l2244
  3219                           
  3220                           ;functions.c: 520: Blink(1);
  3221  04A2  3001               	movlw	1
  3222  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3223  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3224  04A5  00A6               	movwf	Blink@n
  3225  04A6  3000               	movlw	0
  3226  04A7  00A7               	movwf	Blink@n+1
  3227  04A8  120A  158A  26B9  120A  118A  	fcall	_Blink
  3228  04AD                     l2244:	
  3229                           
  3230                           ;functions.c: 521: SetRFMode(0x00);
  3231  04AD  3000               	movlw	0
  3232  04AE  120A  118A  26BC   	fcall	_SetRFMode
  3233  04B1  0008               	return
  3234  04B2                     __end_of_TransiverInit:	
  3235                           
  3236                           	psect	text12
  3237  0EB9                     __ptext12:	
  3238 ;; *************** function _Blink *****************
  3239 ;; Defined at:
  3240 ;;		line 646 in file "functions.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  n               2    6[BANK0 ] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  i               2    9[BANK0 ] int 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       2       0       0       0
  3255 ;;      Locals:         0       2       0       0       0
  3256 ;;      Temps:          0       1       0       0       0
  3257 ;;      Totals:         0       5       0       0       0
  3258 ;;Total ram usage:        5 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    3
  3261 ;; This function calls:
  3262 ;;		_DelayDs
  3263 ;; This function is called by:
  3264 ;;		_TransiverInit
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _Blink
  3270  0EB9                     _Blink:	
  3271                           
  3272                           ;functions.c: 648: for(int i = 1;i<=n;i++)
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3276  0EB9  3001               	movlw	1
  3277  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0EBC  00A9               	movwf	Blink@i
  3280  0EBD  3000               	movlw	0
  3281  0EBE  00AA               	movwf	Blink@i+1
  3282  0EBF                     l2148:	
  3283  0EBF  0827               	movf	Blink@n+1,w
  3284  0EC0  3A80               	xorlw	128
  3285  0EC1  00A8               	movwf	??_Blink
  3286  0EC2  082A               	movf	Blink@i+1,w
  3287  0EC3  3A80               	xorlw	128
  3288  0EC4  0228               	subwf	??_Blink,w
  3289  0EC5  1D03               	skipz
  3290  0EC6  2EC9               	goto	u1255
  3291  0EC7  0829               	movf	Blink@i,w
  3292  0EC8  0226               	subwf	Blink@n,w
  3293  0EC9                     u1255:	
  3294  0EC9  1C03               	btfss	3,0
  3295  0ECA  0008               	return
  3296                           
  3297                           ;functions.c: 649: {
  3298                           ;functions.c: 650: RC1 = 1;
  3299  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  3301  0ECD  1487               	bsf	7,1	;volatile
  3302                           
  3303                           ;functions.c: 651: DelayDs(2);
  3304  0ECE  3002               	movlw	2
  3305  0ECF  00A0               	movwf	DelayDs@cnt
  3306  0ED0  3000               	movlw	0
  3307  0ED1  00A1               	movwf	DelayDs@cnt+1
  3308  0ED2  120A  158A  25F2  120A  158A  	fcall	_DelayDs
  3309                           
  3310                           ;functions.c: 652: RC1 = 0;
  3311  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3312  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3313  0ED9  1087               	bcf	7,1	;volatile
  3314                           
  3315                           ;functions.c: 653: DelayDs(6);
  3316  0EDA  3006               	movlw	6
  3317  0EDB  00A0               	movwf	DelayDs@cnt
  3318  0EDC  3000               	movlw	0
  3319  0EDD  00A1               	movwf	DelayDs@cnt+1
  3320  0EDE  120A  158A  25F2  120A  158A  	fcall	_DelayDs
  3321  0EE3  3001               	movlw	1
  3322  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0EE6  07A9               	addwf	Blink@i,f
  3325  0EE7  1803               	skipnc
  3326  0EE8  0AAA               	incf	Blink@i+1,f
  3327  0EE9  3000               	movlw	0
  3328  0EEA  07AA               	addwf	Blink@i+1,f
  3329  0EEB  2EBF               	goto	l2148
  3330  0EEC                     __end_of_Blink:	
  3331                           
  3332                           	psect	text13
  3333  0D7C                     __ptext13:	
  3334 ;; *************** function _Mode_5 *****************
  3335 ;; Defined at:
  3336 ;;		line 288 in file "functions.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0
  3352 ;;      Temps:          0       1       0       0       0
  3353 ;;      Totals:         0       1       0       0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    8
  3357 ;; This function calls:
  3358 ;;		_LightWithSensController
  3359 ;;		_TransmittPacket
  3360 ;; This function is called by:
  3361 ;;		_main
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _Mode_5
  3367  0D7C                     _Mode_5:	
  3368                           
  3369                           ;functions.c: 290: if(!RB5)
  3370                           
  3371                           ;incstack = 0
  3372 ;; hardware stack exceeded
  3373                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3374  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0D7E  1A86               	btfsc	6,5	;volatile
  3377  0D7F  2D8A               	goto	l2338
  3378                           
  3379                           ;functions.c: 291: {
  3380                           ;functions.c: 292: TransmittPacket(2, 2);
  3381  0D80  3002               	movlw	2
  3382  0D81  00BB               	movwf	??_Mode_5
  3383  0D82  083B               	movf	??_Mode_5,w
  3384  0D83  00B5               	movwf	TransmittPacket@value
  3385  0D84  3002               	movlw	2
  3386  0D85  120A  118A  257E  120A  158A  	fcall	_TransmittPacket
  3387  0D8A                     l2338:	
  3388                           
  3389                           ;functions.c: 293: }
  3390                           ;functions.c: 294: LightWithSensController();
  3391  0D8A  120A  158A  2723   	fcall	_LightWithSensController
  3392  0D8D  0008               	return
  3393  0D8E                     __end_of_Mode_5:	
  3394                           
  3395                           	psect	text14
  3396  0D5A                     __ptext14:	
  3397 ;; *************** function _Mode_4 *****************
  3398 ;; Defined at:
  3399 ;;		line 276 in file "functions.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;		None
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         0       0       0       0       0
  3414 ;;      Locals:         0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         0       0       0       0       0
  3417 ;;Total ram usage:        0 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    8
  3420 ;; This function calls:
  3421 ;;		_LightWithSensController
  3422 ;;		_TransmittPacket
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _Mode_4
  3430  0D5A                     _Mode_4:	
  3431                           
  3432                           ;functions.c: 278: if(!RB5)
  3433                           
  3434                           ;incstack = 0
  3435 ;; hardware stack exceeded
  3436                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3437  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0D5C  1A86               	btfsc	6,5	;volatile
  3440  0D5D  2D66               	goto	l2332
  3441                           
  3442                           ;functions.c: 279: {
  3443                           ;functions.c: 280: TransmittPacket(2, 1);
  3444  0D5E  01B5               	clrf	TransmittPacket@value
  3445  0D5F  0AB5               	incf	TransmittPacket@value,f
  3446  0D60  3002               	movlw	2
  3447  0D61  120A  118A  257E  120A  158A  	fcall	_TransmittPacket
  3448  0D66                     l2332:	
  3449                           
  3450                           ;functions.c: 281: }
  3451                           ;functions.c: 282: LightWithSensController();
  3452  0D66  120A  158A  2723   	fcall	_LightWithSensController
  3453  0D69  0008               	return
  3454  0D6A                     __end_of_Mode_4:	
  3455                           
  3456                           	psect	text15
  3457  057E                     __ptext15:	
  3458 ;; *************** function _TransmittPacket *****************
  3459 ;; Defined at:
  3460 ;;		line 183 in file "functions.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  topic           1    wreg     unsigned char 
  3463 ;;  value           1   21[BANK0 ] unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  topic           1   26[BANK0 ] unsigned char 
  3466 ;;  i               2   24[BANK0 ] int 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       1       0       0       0
  3477 ;;      Locals:         0       3       0       0       0
  3478 ;;      Temps:          0       2       0       0       0
  3479 ;;      Totals:         0       6       0       0       0
  3480 ;;Total ram usage:        6 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    7
  3483 ;; This function calls:
  3484 ;;		_FindChannel
  3485 ;;		_RegisterRead
  3486 ;;		_RegisterSet
  3487 ;;		_SetRFMode
  3488 ;;		_WriteFIFO
  3489 ;;		_timerFunction
  3490 ;; This function is called by:
  3491 ;;		_ReceivedPacketHandler
  3492 ;;		_Mode_4
  3493 ;;		_Mode_5
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _TransmittPacket
  3499  057E                     _TransmittPacket:	
  3500                           
  3501                           ;incstack = 0
  3502 ;; hardware stack exceeded
  3503                           ; Regs used in _TransmittPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3504                           ;TransmittPacket@topic stored from wreg
  3505  057E  1283               	bcf	3,5	;RP0=0, select bank0
  3506  057F  1303               	bcf	3,6	;RP1=0, select bank0
  3507  0580  00BA               	movwf	TransmittPacket@topic
  3508                           
  3509                           ;functions.c: 185: timerFunction(4, 5);
  3510  0581  3004               	movlw	4
  3511  0582  00A0               	movwf	timerFunction@intTimerNumber
  3512  0583  3000               	movlw	0
  3513  0584  00A1               	movwf	timerFunction@intTimerNumber+1
  3514  0585  3005               	movlw	5
  3515  0586  00A2               	movwf	timerFunction@intSetSeconds
  3516  0587  3000               	movlw	0
  3517  0588  00A3               	movwf	timerFunction@intSetSeconds+1
  3518  0589  120A  158A  256A  120A  118A  	fcall	_timerFunction
  3519                           
  3520                           ;functions.c: 187: int i = 0;
  3521  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3522  058F  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0590  01B8               	clrf	TransmittPacket@i
  3524  0591  01B9               	clrf	TransmittPacket@i+1
  3525                           
  3526                           ;functions.c: 190: SetRFMode(0x20);
  3527  0592  3020               	movlw	32
  3528  0593  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  3529                           
  3530                           ;functions.c: 191: _delay((unsigned long)((10)*(4000000/4000.0)));
  3531  0598  300D               	movlw	13
  3532  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3533  059A  1303               	bcf	3,6	;RP1=0, select bank0
  3534  059B  00B7               	movwf	??_TransmittPacket+1
  3535  059C  30FB               	movlw	251
  3536  059D  00B6               	movwf	??_TransmittPacket
  3537  059E                     u1877:	
  3538  059E  0BB6               	decfsz	??_TransmittPacket,f
  3539  059F  2D9E               	goto	u1877
  3540  05A0  0BB7               	decfsz	??_TransmittPacket+1,f
  3541  05A1  2D9E               	goto	u1877
  3542                           
  3543                           ;functions.c: 192: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3544  05A2  300E               	movlw	14
  3545  05A3  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  3546  05A8  3802               	iorlw	2
  3547  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3548  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3549  05AB  00B6               	movwf	??_TransmittPacket
  3550  05AC  0836               	movf	??_TransmittPacket,w
  3551  05AD  00A7               	movwf	RegisterSet@value
  3552  05AE  300E               	movlw	14
  3553  05AF  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3554                           
  3555                           ;functions.c: 193: SetRFMode(0x40);
  3556  05B4  3040               	movlw	64
  3557  05B5  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  3558  05BA                     l1964:	
  3559                           ;functions.c: 194: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3560                           
  3561  05BA  300E               	movlw	14
  3562  05BB  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  3563  05C0  3902               	andlw	2
  3564  05C1  1D03               	btfss	3,2
  3565  05C2  2DCD               	goto	l1966
  3566                           
  3567                           ;functions.c: 195: {
  3568                           ;functions.c: 196: if(bTimerComplete[4])
  3569  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  3570  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  3571  05C5  0856               	movf	(_bTimerComplete^(0+128)+4),w
  3572  05C6  1903               	btfsc	3,2
  3573  05C7  2DBA               	goto	l1964
  3574                           
  3575                           ;functions.c: 197: {
  3576                           ;functions.c: 198: FindChannel();
  3577  05C8  120A  118A  22C8  120A  118A  	fcall	_FindChannel
  3578  05CD                     l1966:	
  3579                           ;functions.c: 199: break;
  3580                           
  3581                           
  3582                           ;functions.c: 200: }
  3583                           ;functions.c: 202: }
  3584                           ;functions.c: 203: SetRFMode(0x80);
  3585  05CD  3080               	movlw	128
  3586  05CE  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  3587                           
  3588                           ;functions.c: 204: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3589  05D3  30A5               	movlw	165
  3590  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3591  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3592  05D6  00B6               	movwf	??_TransmittPacket
  3593  05D7                     u1887:	
  3594  05D7  0BB6               	decfsz	??_TransmittPacket,f
  3595  05D8  2DD7               	goto	u1887
  3596  05D9  2DDA               	nop2
  3597                           
  3598                           ;functions.c: 207: WriteFIFO('S');
  3599  05DA  3053               	movlw	83
  3600  05DB  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3601                           
  3602                           ;functions.c: 208: WriteFIFO('Y');
  3603  05E0  3059               	movlw	89
  3604  05E1  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3605                           
  3606                           ;functions.c: 209: WriteFIFO('N');
  3607  05E6  304E               	movlw	78
  3608  05E7  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3609                           
  3610                           ;functions.c: 210: WriteFIFO('C');
  3611  05EC  3043               	movlw	67
  3612  05ED  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3613                           
  3614                           ;functions.c: 213: WriteFIFO(44);
  3615  05F2  302C               	movlw	44
  3616  05F3  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3617                           
  3618                           ;functions.c: 214: WriteFIFO(topic);
  3619  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3620  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3621  05FA  083A               	movf	TransmittPacket@topic,w
  3622  05FB  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3623                           
  3624                           ;functions.c: 215: WriteFIFO(value);
  3625  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0602  0835               	movf	TransmittPacket@value,w
  3628  0603  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3629                           
  3630                           ;functions.c: 216: WriteFIFO(55);
  3631  0608  3037               	movlw	55
  3632  0609  120A  158A  2525  120A  118A  	fcall	_WriteFIFO
  3633  060E                     l326:	
  3634                           ;functions.c: 219: while(!RB4)
  3635                           
  3636  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3637  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0610  1A06               	btfsc	6,4	;volatile
  3639  0611  2E17               	goto	l1990
  3640                           
  3641                           ;functions.c: 220: {
  3642                           ;functions.c: 221: if(bTimerComplete[4])
  3643  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3644  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3645  0614  0856               	movf	(_bTimerComplete^(0+128)+4),w
  3646  0615  1903               	btfsc	3,2
  3647  0616  2E0E               	goto	l326
  3648  0617                     l1990:	
  3649                           ;functions.c: 222: break;
  3650                           
  3651                           
  3652                           ;functions.c: 223: }
  3653                           ;functions.c: 224: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3654  0617  3002               	movlw	2
  3655  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3657  061A  00B6               	movwf	??_TransmittPacket
  3658  061B                     u1897:	
  3659  061B  0BB6               	decfsz	??_TransmittPacket,f
  3660  061C  2E1B               	goto	u1897
  3661  061D  0000               	nop
  3662                           
  3663                           ;functions.c: 225: SetRFMode(0x00);
  3664  061E  3000               	movlw	0
  3665  061F  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  3666                           
  3667                           ;functions.c: 226: _delay((unsigned long)((1)*(4000000/4000.0)));
  3668  0624  30C7               	movlw	199
  3669  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3671  0627  00B6               	movwf	??_TransmittPacket
  3672  0628                     u1907:	
  3673  0628  2E29               	nop2
  3674  0629  0BB6               	decfsz	??_TransmittPacket,f
  3675  062A  2E28               	goto	u1907
  3676  062B  2E2C               	nop2
  3677  062C  0008               	return
  3678  062D                     __end_of_TransmittPacket:	
  3679                           
  3680                           	psect	text16
  3681  0D25                     __ptext16:	
  3682 ;; *************** function _WriteFIFO *****************
  3683 ;; Defined at:
  3684 ;;		line 760 in file "functions.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  Data            1    wreg     unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  Data            1    3[BANK0 ] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0, pclath, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         0       0       0       0       0
  3699 ;;      Locals:         0       1       0       0       0
  3700 ;;      Temps:          0       0       0       0       0
  3701 ;;      Totals:         0       1       0       0       0
  3702 ;;Total ram usage:        1 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    3
  3705 ;; This function calls:
  3706 ;;		_WriteSPI
  3707 ;; This function is called by:
  3708 ;;		_TransmittPacket
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           
  3713                           ;psect for function _WriteFIFO
  3714  0D25                     _WriteFIFO:	
  3715                           
  3716                           ;incstack = 0
  3717                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3718                           ;WriteFIFO@Data stored from wreg
  3719  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0D27  00A3               	movwf	WriteFIFO@Data
  3722                           
  3723                           ;functions.c: 762: RA5 = 0;
  3724  0D28  1285               	bcf	5,5	;volatile
  3725                           
  3726                           ;functions.c: 763: WriteSPI(Data);
  3727  0D29  0823               	movf	WriteFIFO@Data,w
  3728  0D2A  120A  158A  253E   	fcall	_WriteSPI
  3729                           
  3730                           ;functions.c: 764: RA5 = 1;
  3731  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0D2F  1685               	bsf	5,5	;volatile
  3734  0D30  0008               	return
  3735  0D31                     __end_of_WriteFIFO:	
  3736                           
  3737                           	psect	text17
  3738  02C8                     __ptext17:	
  3739 ;; *************** function _FindChannel *****************
  3740 ;; Defined at:
  3741 ;;		line 543 in file "functions.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  i               2   19[BANK0 ] int 
  3746 ;;  cnt             2   17[BANK0 ] int 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      unsigned char 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       0       0       0
  3757 ;;      Locals:         0       4       0       0       0
  3758 ;;      Temps:          0       3       0       0       0
  3759 ;;      Totals:         0       7       0       0       0
  3760 ;;Total ram usage:        7 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    6
  3763 ;; This function calls:
  3764 ;;		_RegisterRead
  3765 ;;		_RegisterSet
  3766 ;;		_SetRFMode
  3767 ;; This function is called by:
  3768 ;;		_TransiverToReceive
  3769 ;;		_TransmittPacket
  3770 ;;		_TransiverInit
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _FindChannel
  3776  02C8                     _FindChannel:	
  3777                           
  3778                           ;functions.c: 545: int cnt = 0;
  3779                           
  3780                           ;incstack = 0
  3781 ;; using string table level
  3782                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3783  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3784  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3785  02CA  01B1               	clrf	FindChannel@cnt
  3786  02CB  01B2               	clrf	FindChannel@cnt+1
  3787                           
  3788                           ;functions.c: 546: bChannelFound = 0;
  3789  02CC  01FC               	clrf	_bChannelFound
  3790                           
  3791                           ;functions.c: 547: channelFound = 0;
  3792  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  3793  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  3794  02CF  01D9               	clrf	_channelFound^(0+128)
  3795  02D0  01DA               	clrf	(_channelFound+1)^(0+128)
  3796                           
  3797                           ;functions.c: 549: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3798  02D1  3006               	movlw	6
  3799  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3800  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3801  02D4  00B0               	movwf	??_FindChannel+2
  3802  02D5  3013               	movlw	19
  3803  02D6  00AF               	movwf	??_FindChannel+1
  3804  02D7  30AD               	movlw	173
  3805  02D8  00AE               	movwf	??_FindChannel
  3806  02D9                     u1917:	
  3807  02D9  0BAE               	decfsz	??_FindChannel,f
  3808  02DA  2AD9               	goto	u1917
  3809  02DB  0BAF               	decfsz	??_FindChannel+1,f
  3810  02DC  2AD9               	goto	u1917
  3811  02DD  0BB0               	decfsz	??_FindChannel+2,f
  3812  02DE  2AD9               	goto	u1917
  3813                           
  3814                           ;functions.c: 550: for (int i = 0; i < 13; i++)
  3815  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3816  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3817  02E1  01B3               	clrf	FindChannel@i
  3818  02E2  01B4               	clrf	FindChannel@i+1
  3819  02E3  0834               	movf	FindChannel@i+1,w
  3820  02E4  3A80               	xorlw	128
  3821  02E5  00FF               	movwf	127
  3822  02E6  3080               	movlw	128
  3823  02E7  027F               	subwf	127,w
  3824  02E8  1D03               	skipz
  3825  02E9  2AEC               	goto	u925
  3826  02EA  300D               	movlw	13
  3827  02EB  0233               	subwf	FindChannel@i,w
  3828  02EC                     u925:	
  3829  02EC  1803               	btfsc	3,0
  3830  02ED  2BC6               	goto	l1914
  3831  02EE                     l1890:	
  3832                           
  3833                           ;functions.c: 551: {
  3834                           ;functions.c: 552: RegisterSet(0x06,ChannelR[i]);
  3835  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3836  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3837  02F0  0833               	movf	FindChannel@i,w
  3838  02F1  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3839  02F2  0084               	movwf	4
  3840  02F3  120A  158A  2000  120A  118A  	fcall	stringdir
  3841  02F8  00AE               	movwf	??_FindChannel
  3842  02F9  082E               	movf	??_FindChannel,w
  3843  02FA  00A7               	movwf	RegisterSet@value
  3844  02FB  3006               	movlw	6
  3845  02FC  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3846                           
  3847                           ;functions.c: 553: RegisterSet(0x07,ChannelP[i]);
  3848  0301  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0302  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0303  0833               	movf	FindChannel@i,w
  3851  0304  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3852  0305  0084               	movwf	4
  3853  0306  120A  158A  2000  120A  118A  	fcall	stringdir
  3854  030B  00AE               	movwf	??_FindChannel
  3855  030C  082E               	movf	??_FindChannel,w
  3856  030D  00A7               	movwf	RegisterSet@value
  3857  030E  3007               	movlw	7
  3858  030F  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3859                           
  3860                           ;functions.c: 554: RegisterSet(0x08,ChannelS[i]);
  3861  0314  1283               	bcf	3,5	;RP0=0, select bank0
  3862  0315  1303               	bcf	3,6	;RP1=0, select bank0
  3863  0316  0833               	movf	FindChannel@i,w
  3864  0317  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  3865  0318  0084               	movwf	4
  3866  0319  120A  158A  2000  120A  118A  	fcall	stringdir
  3867  031E  00AE               	movwf	??_FindChannel
  3868  031F  082E               	movf	??_FindChannel,w
  3869  0320  00A7               	movwf	RegisterSet@value
  3870  0321  3008               	movlw	8
  3871  0322  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3872                           
  3873                           ;functions.c: 555: RegisterSet(0x09,ChannelR[i]);
  3874  0327  1283               	bcf	3,5	;RP0=0, select bank0
  3875  0328  1303               	bcf	3,6	;RP1=0, select bank0
  3876  0329  0833               	movf	FindChannel@i,w
  3877  032A  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3878  032B  0084               	movwf	4
  3879  032C  120A  158A  2000  120A  118A  	fcall	stringdir
  3880  0331  00AE               	movwf	??_FindChannel
  3881  0332  082E               	movf	??_FindChannel,w
  3882  0333  00A7               	movwf	RegisterSet@value
  3883  0334  3009               	movlw	9
  3884  0335  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3885                           
  3886                           ;functions.c: 556: RegisterSet(0x0A,ChannelP[i]);
  3887  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3888  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3889  033C  0833               	movf	FindChannel@i,w
  3890  033D  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3891  033E  0084               	movwf	4
  3892  033F  120A  158A  2000  120A  118A  	fcall	stringdir
  3893  0344  00AE               	movwf	??_FindChannel
  3894  0345  082E               	movf	??_FindChannel,w
  3895  0346  00A7               	movwf	RegisterSet@value
  3896  0347  300A               	movlw	10
  3897  0348  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3898                           
  3899                           ;functions.c: 557: RegisterSet(0x0B,ChannelS[i]);
  3900  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3901  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3902  034F  0833               	movf	FindChannel@i,w
  3903  0350  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  3904  0351  0084               	movwf	4
  3905  0352  120A  158A  2000  120A  118A  	fcall	stringdir
  3906  0357  00AE               	movwf	??_FindChannel
  3907  0358  082E               	movf	??_FindChannel,w
  3908  0359  00A7               	movwf	RegisterSet@value
  3909  035A  300B               	movlw	11
  3910  035B  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3911                           
  3912                           ;functions.c: 558: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3913  0360  300E               	movlw	14
  3914  0361  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  3915  0366  3802               	iorlw	2
  3916  0367  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0368  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0369  00AE               	movwf	??_FindChannel
  3919  036A  082E               	movf	??_FindChannel,w
  3920  036B  00A7               	movwf	RegisterSet@value
  3921  036C  300E               	movlw	14
  3922  036D  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  3923                           
  3924                           ;functions.c: 559: SetRFMode(0x40);
  3925  0372  3040               	movlw	64
  3926  0373  120A  118A  26BC  120A  118A  	fcall	_SetRFMode
  3927                           
  3928                           ;functions.c: 560: cnt = 0;
  3929  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3930  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3931  037A  01B1               	clrf	FindChannel@cnt
  3932  037B  01B2               	clrf	FindChannel@cnt+1
  3933  037C                     l1908:	
  3934                           ;functions.c: 561: while(cnt < 5)
  3935                           
  3936  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3937  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3938  037E  0832               	movf	FindChannel@cnt+1,w
  3939  037F  3A80               	xorlw	128
  3940  0380  00FF               	movwf	127
  3941  0381  3080               	movlw	128
  3942  0382  027F               	subwf	127,w
  3943  0383  1D03               	skipz
  3944  0384  2B87               	goto	u945
  3945  0385  3005               	movlw	5
  3946  0386  0231               	subwf	FindChannel@cnt,w
  3947  0387                     u945:	
  3948  0387  1803               	btfsc	3,0
  3949  0388  2BB3               	goto	l1910
  3950                           
  3951                           ;functions.c: 562: {
  3952                           ;functions.c: 564: if((RegisterRead(0x0E) & 0b00000010) != 0)
  3953  0389  300E               	movlw	14
  3954  038A  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  3955  038F  3902               	andlw	2
  3956  0390  1903               	btfsc	3,2
  3957  0391  2BA2               	goto	l1906
  3958                           
  3959                           ;functions.c: 565: {
  3960                           ;functions.c: 566: bChannelFound = 1;
  3961  0392  01FC               	clrf	_bChannelFound
  3962  0393  0AFC               	incf	_bChannelFound,f
  3963                           
  3964                           ;functions.c: 567: channelFound = i;
  3965  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0396  0834               	movf	FindChannel@i+1,w
  3968  0397  1683               	bsf	3,5	;RP0=1, select bank1
  3969  0398  1303               	bcf	3,6	;RP1=0, select bank1
  3970  0399  00DA               	movwf	(_channelFound+1)^(0+128)
  3971  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3972  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3973  039C  0833               	movf	FindChannel@i,w
  3974  039D  1683               	bsf	3,5	;RP0=1, select bank1
  3975  039E  1303               	bcf	3,6	;RP1=0, select bank1
  3976  039F  00D9               	movwf	_channelFound^(0+128)
  3977                           
  3978                           ;functions.c: 568: return 1;
  3979  03A0  3001               	movlw	1
  3980  03A1  0008               	return
  3981  03A2                     l1906:	
  3982                           
  3983                           ;functions.c: 569: }
  3984                           ;functions.c: 570: cnt++;
  3985  03A2  3001               	movlw	1
  3986  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  3987  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  3988  03A5  07B1               	addwf	FindChannel@cnt,f
  3989  03A6  1803               	skipnc
  3990  03A7  0AB2               	incf	FindChannel@cnt+1,f
  3991  03A8  3000               	movlw	0
  3992  03A9  07B2               	addwf	FindChannel@cnt+1,f
  3993                           
  3994                           ;functions.c: 571: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  3995  03AA  30C7               	movlw	199
  3996  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3997  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3998  03AD  00AE               	movwf	??_FindChannel
  3999  03AE                     u1927:	
  4000  03AE  2BAF               	nop2
  4001  03AF  0BAE               	decfsz	??_FindChannel,f
  4002  03B0  2BAE               	goto	u1927
  4003  03B1  2BB2               	nop2
  4004  03B2  2B7C               	goto	l1908
  4005  03B3                     l1910:	
  4006  03B3  3001               	movlw	1
  4007  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  4008  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  4009  03B6  07B3               	addwf	FindChannel@i,f
  4010  03B7  1803               	skipnc
  4011  03B8  0AB4               	incf	FindChannel@i+1,f
  4012  03B9  3000               	movlw	0
  4013  03BA  07B4               	addwf	FindChannel@i+1,f
  4014  03BB  0834               	movf	FindChannel@i+1,w
  4015  03BC  3A80               	xorlw	128
  4016  03BD  00FF               	movwf	127
  4017  03BE  3080               	movlw	128
  4018  03BF  027F               	subwf	127,w
  4019  03C0  1D03               	skipz
  4020  03C1  2BC4               	goto	u955
  4021  03C2  300D               	movlw	13
  4022  03C3  0233               	subwf	FindChannel@i,w
  4023  03C4                     u955:	
  4024  03C4  1C03               	skipc
  4025  03C5  2AEE               	goto	l1890
  4026  03C6                     l1914:	
  4027                           
  4028                           ;functions.c: 572: }
  4029                           ;functions.c: 575: }
  4030                           ;functions.c: 576: return 0;
  4031  03C6  3000               	movlw	0
  4032  03C7  0008               	return
  4033  03C8                     __end_of_FindChannel:	
  4034                           
  4035                           	psect	text18
  4036  06BC                     __ptext18:	
  4037 ;; *************** function _SetRFMode *****************
  4038 ;; Defined at:
  4039 ;;		line 598 in file "functions.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  mode            1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  mode            1   12[BANK0 ] unsigned char 
  4044 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4054 ;;      Params:         0       0       0       0       0
  4055 ;;      Locals:         0       2       0       0       0
  4056 ;;      Temps:          0       1       0       0       0
  4057 ;;      Totals:         0       3       0       0       0
  4058 ;;Total ram usage:        3 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    5
  4061 ;; This function calls:
  4062 ;;		_RegisterRead
  4063 ;;		_RegisterSet
  4064 ;; This function is called by:
  4065 ;;		_TransiverToReceive
  4066 ;;		_TransiverReadFIFO
  4067 ;;		_TransmittPacket
  4068 ;;		_TransiverInit
  4069 ;;		_FindChannel
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function _SetRFMode
  4075  06BC                     _SetRFMode:	
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4079                           ;SetRFMode@mode stored from wreg
  4080  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4081  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  4082  06BE  00AC               	movwf	SetRFMode@mode
  4083                           
  4084                           ;functions.c: 600: RA4 = 0;
  4085  06BF  1205               	bcf	5,4	;volatile
  4086                           
  4087                           ;functions.c: 601: BYTE mcparam0_read;
  4088                           ;functions.c: 602: mcparam0_read = RegisterRead(0);
  4089  06C0  3000               	movlw	0
  4090  06C1  120A  158A  25D6  120A  118A  	fcall	_RegisterRead
  4091  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4092  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4093  06C8  00AB               	movwf	??_SetRFMode
  4094  06C9  082B               	movf	??_SetRFMode,w
  4095  06CA  00AD               	movwf	SetRFMode@mcparam0_read
  4096                           
  4097                           ;functions.c: 603: switch (mode) {
  4098  06CB  2F14               	goto	l1870
  4099  06CC                     l1858:	
  4100                           ;functions.c: 604: case 0x80:
  4101                           
  4102                           
  4103                           ;functions.c: 605: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4104  06CC  082D               	movf	SetRFMode@mcparam0_read,w
  4105  06CD  391F               	andlw	31
  4106  06CE  3880               	iorlw	128
  4107  06CF  00AB               	movwf	??_SetRFMode
  4108  06D0  082B               	movf	??_SetRFMode,w
  4109  06D1  00A7               	movwf	RegisterSet@value
  4110  06D2  3000               	movlw	0
  4111  06D3  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  4112                           
  4113                           ;functions.c: 607: break;
  4114  06D8  2F27               	goto	l415
  4115  06D9                     l1860:	
  4116                           ;functions.c: 608: case 0x60:
  4117                           
  4118                           
  4119                           ;functions.c: 609: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4120  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  4121  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  4122  06DB  082D               	movf	SetRFMode@mcparam0_read,w
  4123  06DC  391F               	andlw	31
  4124  06DD  3860               	iorlw	96
  4125  06DE  00AB               	movwf	??_SetRFMode
  4126  06DF  082B               	movf	??_SetRFMode,w
  4127  06E0  00A7               	movwf	RegisterSet@value
  4128  06E1  3000               	movlw	0
  4129  06E2  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  4130                           
  4131                           ;functions.c: 611: break;
  4132  06E7  2F27               	goto	l415
  4133  06E8                     l1862:	
  4134                           ;functions.c: 612: case 0x40:
  4135                           
  4136                           
  4137                           ;functions.c: 613: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4138  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  4139  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  4140  06EA  082D               	movf	SetRFMode@mcparam0_read,w
  4141  06EB  391F               	andlw	31
  4142  06EC  3840               	iorlw	64
  4143  06ED  00AB               	movwf	??_SetRFMode
  4144  06EE  082B               	movf	??_SetRFMode,w
  4145  06EF  00A7               	movwf	RegisterSet@value
  4146  06F0  3000               	movlw	0
  4147  06F1  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  4148                           
  4149                           ;functions.c: 615: break;
  4150  06F6  2F27               	goto	l415
  4151  06F7                     l1864:	
  4152                           ;functions.c: 616: case 0x20:
  4153                           
  4154                           
  4155                           ;functions.c: 617: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4156  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4157  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4158  06F9  082D               	movf	SetRFMode@mcparam0_read,w
  4159  06FA  391F               	andlw	31
  4160  06FB  3820               	iorlw	32
  4161  06FC  00AB               	movwf	??_SetRFMode
  4162  06FD  082B               	movf	??_SetRFMode,w
  4163  06FE  00A7               	movwf	RegisterSet@value
  4164  06FF  3000               	movlw	0
  4165  0700  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  4166                           
  4167                           ;functions.c: 619: break;
  4168  0705  2F27               	goto	l415
  4169  0706                     l1866:	
  4170                           ;functions.c: 620: case 0x00:
  4171                           
  4172                           
  4173                           ;functions.c: 621: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4174  0706  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0707  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0708  082D               	movf	SetRFMode@mcparam0_read,w
  4177  0709  391F               	andlw	31
  4178  070A  00AB               	movwf	??_SetRFMode
  4179  070B  082B               	movf	??_SetRFMode,w
  4180  070C  00A7               	movwf	RegisterSet@value
  4181  070D  3000               	movlw	0
  4182  070E  120A  158A  25BC  120A  118A  	fcall	_RegisterSet
  4183                           
  4184                           ;functions.c: 624: }
  4185                           
  4186                           ;functions.c: 623: break;
  4187  0713  2F27               	goto	l415
  4188  0714                     l1870:	
  4189  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0716  082C               	movf	SetRFMode@mode,w
  4192                           
  4193                           ; Switch size 1, requested type "space"
  4194                           ; Number of cases is 5, Range of values is 0 to 128
  4195                           ; switch strategies available:
  4196                           ; Name         Instructions Cycles
  4197                           ; simple_byte           16     9 (average)
  4198                           ; jumptable            260     6 (fixed)
  4199                           ;	Chosen strategy is simple_byte
  4200  0717  3A00               	xorlw	0	; case 0
  4201  0718  1903               	skipnz
  4202  0719  2F06               	goto	l1866
  4203  071A  3A20               	xorlw	32	; case 32
  4204  071B  1903               	skipnz
  4205  071C  2EF7               	goto	l1864
  4206  071D  3A60               	xorlw	96	; case 64
  4207  071E  1903               	skipnz
  4208  071F  2EE8               	goto	l1862
  4209  0720  3A20               	xorlw	32	; case 96
  4210  0721  1903               	skipnz
  4211  0722  2ED9               	goto	l1860
  4212  0723  3AE0               	xorlw	224	; case 128
  4213  0724  1903               	skipnz
  4214  0725  2ECC               	goto	l1858
  4215  0726  2F27               	goto	l415
  4216  0727                     l415:	
  4217                           
  4218                           ;functions.c: 625: RA4 = 1;
  4219  0727  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0728  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0729  1605               	bsf	5,4	;volatile
  4222  072A  0008               	return
  4223  072B                     __end_of_SetRFMode:	
  4224                           
  4225                           	psect	text19
  4226  0DBC                     __ptext19:	
  4227 ;; *************** function _RegisterSet *****************
  4228 ;; Defined at:
  4229 ;;		line 707 in file "functions.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  adress          1    wreg     unsigned char 
  4232 ;;  value           1    7[BANK0 ] unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  adress          1   10[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       1       0       0       0
  4245 ;;      Locals:         0       1       0       0       0
  4246 ;;      Temps:          0       2       0       0       0
  4247 ;;      Totals:         0       4       0       0       0
  4248 ;;Total ram usage:        4 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		_WriteSPI
  4253 ;; This function is called by:
  4254 ;;		_TransiverToReceive
  4255 ;;		_TransmittPacket
  4256 ;;		_TransiverInit
  4257 ;;		_FindChannel
  4258 ;;		_SetRFMode
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _RegisterSet
  4264  0DBC                     _RegisterSet:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4268                           ;RegisterSet@adress stored from wreg
  4269  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0DBE  00AA               	movwf	RegisterSet@adress
  4272                           
  4273                           ;functions.c: 709: RA4 = 0;
  4274  0DBF  1205               	bcf	5,4	;volatile
  4275                           
  4276                           ;functions.c: 710: adress = (adress<<1);
  4277  0DC0  082A               	movf	RegisterSet@adress,w
  4278  0DC1  00A8               	movwf	??_RegisterSet
  4279  0DC2  0728               	addwf	??_RegisterSet,w
  4280  0DC3  00A9               	movwf	??_RegisterSet+1
  4281  0DC4  0829               	movf	??_RegisterSet+1,w
  4282  0DC5  00AA               	movwf	RegisterSet@adress
  4283                           
  4284                           ;functions.c: 711: WriteSPI(adress);
  4285  0DC6  082A               	movf	RegisterSet@adress,w
  4286  0DC7  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  4287                           
  4288                           ;functions.c: 712: WriteSPI(value);
  4289  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0DCE  0827               	movf	RegisterSet@value,w
  4292  0DCF  120A  158A  253E   	fcall	_WriteSPI
  4293                           
  4294                           ;functions.c: 713: RA4 = 1;
  4295  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0DD4  1605               	bsf	5,4	;volatile
  4298  0DD5  0008               	return
  4299  0DD6                     __end_of_RegisterSet:	
  4300                           
  4301                           	psect	text20
  4302  0DD6                     __ptext20:	
  4303 ;; *************** function _RegisterRead *****************
  4304 ;; Defined at:
  4305 ;;		line 677 in file "functions.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  adress          1    wreg     unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  adress          1    6[BANK0 ] unsigned char 
  4310 ;;  value           1    5[BANK0 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      unsigned char 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         0       0       0       0       0
  4321 ;;      Locals:         0       2       0       0       0
  4322 ;;      Temps:          0       2       0       0       0
  4323 ;;      Totals:         0       4       0       0       0
  4324 ;;Total ram usage:        4 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    4
  4327 ;; This function calls:
  4328 ;;		_ReadSPI
  4329 ;;		_WriteSPI
  4330 ;; This function is called by:
  4331 ;;		_TransiverToReceive
  4332 ;;		_TransmittPacket
  4333 ;;		_TransiverInit
  4334 ;;		_FindChannel
  4335 ;;		_SetRFMode
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _RegisterRead
  4341  0DD6                     _RegisterRead:	
  4342                           
  4343                           ;incstack = 0
  4344                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4345                           ;RegisterRead@adress stored from wreg
  4346  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0DD8  00A6               	movwf	RegisterRead@adress
  4349                           
  4350                           ;functions.c: 679: BYTE value;
  4351                           ;functions.c: 680: RA4 = 0;
  4352  0DD9  1205               	bcf	5,4	;volatile
  4353                           
  4354                           ;functions.c: 681: adress = ((adress<<1)|0x40);
  4355  0DDA  0826               	movf	RegisterRead@adress,w
  4356  0DDB  00A3               	movwf	??_RegisterRead
  4357  0DDC  0723               	addwf	??_RegisterRead,w
  4358  0DDD  3840               	iorlw	64
  4359  0DDE  00A4               	movwf	??_RegisterRead+1
  4360  0DDF  0824               	movf	??_RegisterRead+1,w
  4361  0DE0  00A6               	movwf	RegisterRead@adress
  4362                           
  4363                           ;functions.c: 682: WriteSPI(adress);
  4364  0DE1  0826               	movf	RegisterRead@adress,w
  4365  0DE2  120A  158A  253E  120A  158A  	fcall	_WriteSPI
  4366                           
  4367                           ;functions.c: 683: value = ReadSPI();
  4368  0DE7  120A  158A  250C   	fcall	_ReadSPI
  4369  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0DEC  00A3               	movwf	??_RegisterRead
  4372  0DED  0823               	movf	??_RegisterRead,w
  4373  0DEE  00A5               	movwf	RegisterRead@value
  4374                           
  4375                           ;functions.c: 684: RA4 = 1;
  4376  0DEF  1605               	bsf	5,4	;volatile
  4377                           
  4378                           ;functions.c: 685: return value;
  4379  0DF0  0825               	movf	RegisterRead@value,w
  4380  0DF1  0008               	return
  4381  0DF2                     __end_of_RegisterRead:	
  4382                           
  4383                           	psect	text21
  4384  0D0C                     __ptext21:	
  4385 ;; *************** function _ReadSPI *****************
  4386 ;; Defined at:
  4387 ;;		line 490 in file "functions.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      unsigned char 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0
  4404 ;;      Totals:         0       0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    3
  4408 ;; This function calls:
  4409 ;;		_WriteSPI
  4410 ;; This function is called by:
  4411 ;;		_RegisterRead
  4412 ;;		_ReadFIFO
  4413 ;;		_read_ram_status
  4414 ;;		_read_write_flash_ram
  4415 ;;		_read_ram_id
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _ReadSPI
  4421  0D0C                     _ReadSPI:	
  4422                           
  4423                           ;functions.c: 492: WriteSPI(0x00);
  4424                           
  4425                           ;incstack = 0
  4426                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4427  0D0C  3000               	movlw	0
  4428  0D0D  120A  158A  253E   	fcall	_WriteSPI
  4429                           
  4430                           ;functions.c: 493: return SSPBUF;
  4431  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  4432  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  4433  0D12  0813               	movf	19,w	;volatile
  4434  0D13  0008               	return
  4435  0D14                     __end_of_ReadSPI:	
  4436                           
  4437                           	psect	text22
  4438  0D3E                     __ptext22:	
  4439 ;; *************** function _WriteSPI *****************
  4440 ;; Defined at:
  4441 ;;		line 478 in file "functions.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  databyte        1    wreg     unsigned char 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  databyte        1    2[BANK0 ] unsigned char 
  4446 ;;  buffer          1    1[BANK0 ] unsigned char 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         0       0       0       0       0
  4457 ;;      Locals:         0       2       0       0       0
  4458 ;;      Temps:          0       1       0       0       0
  4459 ;;      Totals:         0       3       0       0       0
  4460 ;;Total ram usage:        3 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    2
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_ReadSPI
  4467 ;;		_RegisterRead
  4468 ;;		_RegisterSet
  4469 ;;		_WriteFIFO
  4470 ;;		_read_ram_status
  4471 ;;		_ram_sector_erase
  4472 ;;		_read_write_flash_ram
  4473 ;;		_write_ram_status
  4474 ;;		_read_ram_id
  4475 ;;		_ram_bulk_erase
  4476 ;;		_power_up_flash_ram
  4477 ;;		_power_down_flash_ram
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _WriteSPI
  4483  0D3E                     _WriteSPI:	
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in _WriteSPI: [wreg]
  4487                           ;WriteSPI@databyte stored from wreg
  4488  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0D40  00A2               	movwf	WriteSPI@databyte
  4491                           
  4492                           ;functions.c: 480: unsigned char buffer;
  4493                           ;functions.c: 481: buffer = SSPBUF;
  4494  0D41  0813               	movf	19,w	;volatile
  4495  0D42  00A0               	movwf	??_WriteSPI
  4496  0D43  0820               	movf	??_WriteSPI,w
  4497  0D44  00A1               	movwf	WriteSPI@buffer
  4498                           
  4499                           ;functions.c: 482: PIR1bits.SSPIF=0;
  4500  0D45  118C               	bcf	12,3	;volatile
  4501                           
  4502                           ;functions.c: 483: SSPBUF = databyte;
  4503  0D46  0822               	movf	WriteSPI@databyte,w
  4504  0D47  0093               	movwf	19	;volatile
  4505  0D48                     l391:	
  4506                           ;functions.c: 484: while(PIR1bits.SSPIF == 0);
  4507                           
  4508  0D48  1D8C               	btfss	12,3	;volatile
  4509  0D49  2D48               	goto	l391
  4510                           
  4511                           ;functions.c: 485: PIR1bits.SSPIF = 0;
  4512  0D4A  118C               	bcf	12,3	;volatile
  4513  0D4B  0008               	return
  4514  0D4C                     __end_of_WriteSPI:	
  4515                           
  4516                           	psect	text23
  4517  0D31                     __ptext23:	
  4518 ;; *************** function _Mode_2 *****************
  4519 ;; Defined at:
  4520 ;;		line 257 in file "functions.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4534 ;;      Params:         0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    6
  4541 ;; This function calls:
  4542 ;;		_LightWithSensController
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           
  4549                           ;psect for function _Mode_2
  4550  0D31                     _Mode_2:	
  4551                           
  4552                           ;functions.c: 259: LightWithSensController();
  4553                           
  4554                           ;incstack = 0
  4555                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4556  0D31  120A  158A  2723  120A  158A  	fcall	_LightWithSensController
  4557                           
  4558                           ;functions.c: 260: if(RC2)
  4559  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4560  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4561  0D38  1D07               	btfss	7,2	;volatile
  4562  0D39  2D3C               	goto	l342
  4563                           
  4564                           ;functions.c: 261: RC1 = 1;
  4565  0D3A  1487               	bsf	7,1	;volatile
  4566  0D3B  0008               	return
  4567  0D3C                     l342:	
  4568                           
  4569                           ;functions.c: 262: else
  4570                           ;functions.c: 263: RC1 = 0;
  4571  0D3C  1087               	bcf	7,1	;volatile
  4572  0D3D  0008               	return
  4573  0D3E                     __end_of_Mode_2:	
  4574                           
  4575                           	psect	text24
  4576  0DA2                     __ptext24:	
  4577 ;; *************** function _Mode_1 *****************
  4578 ;; Defined at:
  4579 ;;		line 243 in file "functions.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       0       0       0       0
  4594 ;;      Locals:         0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         0       0       0       0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    5
  4600 ;; This function calls:
  4601 ;;		_DarknessCheck
  4602 ;; This function is called by:
  4603 ;;		_main
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _Mode_1
  4609  0DA2                     _Mode_1:	
  4610                           
  4611                           ;functions.c: 246: if((intSecondCounter == 30)&&(!RC2))
  4612                           
  4613                           ;incstack = 0
  4614                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4615  0DA2  301E               	movlw	30
  4616  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  4618  0DA5  066B               	xorwf	_intSecondCounter,w
  4619  0DA6  046C               	iorwf	_intSecondCounter+1,w
  4620  0DA7  1903               	btfsc	3,2
  4621  0DA8  1907               	btfsc	7,2	;volatile
  4622  0DA9  2DAF               	goto	l2316
  4623                           
  4624                           ;functions.c: 247: DarknessCheck();
  4625  0DAA  120A  158A  2662  120A  158A  	fcall	_DarknessCheck
  4626  0DAF                     l2316:	
  4627                           
  4628                           ;functions.c: 248: if((intBlinkCycle == 1)&&(bDark == 1))
  4629  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0DB1  0369               	decf	_intBlinkCycle,w
  4632  0DB2  046A               	iorwf	_intBlinkCycle+1,w
  4633  0DB3  1D03               	btfss	3,2
  4634  0DB4  2DBA               	goto	l337
  4635  0DB5  036D               	decf	_bDark,w
  4636  0DB6  1D03               	btfss	3,2
  4637  0DB7  2DBA               	goto	l337
  4638                           
  4639                           ;functions.c: 249: RC2 = 1;
  4640  0DB8  1507               	bsf	7,2	;volatile
  4641  0DB9  0008               	return
  4642  0DBA                     l337:	
  4643                           
  4644                           ;functions.c: 250: else
  4645                           ;functions.c: 251: RC2 = 0;
  4646  0DBA  1107               	bcf	7,2	;volatile
  4647  0DBB  0008               	return
  4648  0DBC                     __end_of_Mode_1:	
  4649                           
  4650                           	psect	text25
  4651  0D08                     __ptext25:	
  4652 ;; *************** function _Mode_0 *****************
  4653 ;; Defined at:
  4654 ;;		line 235 in file "functions.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4668 ;;      Params:         0       0       0       0       0
  4669 ;;      Locals:         0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0
  4671 ;;      Totals:         0       0       0       0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; Hardware stack levels required when called:    6
  4675 ;; This function calls:
  4676 ;;		_LightWithSensController
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _Mode_0
  4684  0D08                     _Mode_0:	
  4685                           
  4686                           ;functions.c: 237: LightWithSensController();
  4687                           
  4688                           ;incstack = 0
  4689                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4690  0D08  120A  158A  2723   	fcall	_LightWithSensController
  4691  0D0B  0008               	return
  4692  0D0C                     __end_of_Mode_0:	
  4693                           
  4694                           	psect	text26
  4695  0F23                     __ptext26:	
  4696 ;; *************** function _LightWithSensController *****************
  4697 ;; Defined at:
  4698 ;;		line 301 in file "functions.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    5
  4719 ;; This function calls:
  4720 ;;		_DarknessCheck
  4721 ;;		_timerFunction
  4722 ;; This function is called by:
  4723 ;;		_Mode_0
  4724 ;;		_Mode_2
  4725 ;;		_Mode_4
  4726 ;;		_Mode_5
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           
  4731                           ;psect for function _LightWithSensController
  4732  0F23                     _LightWithSensController:	
  4733                           
  4734                           ;functions.c: 305: if((intSecondCounter == 30)&&(!RC2))
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4738  0F23  301E               	movlw	30
  4739  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  4740  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  4741  0F26  066B               	xorwf	_intSecondCounter,w
  4742  0F27  046C               	iorwf	_intSecondCounter+1,w
  4743  0F28  1903               	btfsc	3,2
  4744  0F29  1907               	btfsc	7,2	;volatile
  4745  0F2A  2F30               	goto	l2120
  4746                           
  4747                           ;functions.c: 306: DarknessCheck();
  4748  0F2B  120A  158A  2662  120A  158A  	fcall	_DarknessCheck
  4749  0F30                     l2120:	
  4750                           
  4751                           ;functions.c: 310: if((bDark == 1)&&(RA1)&&(!RC2))
  4752  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  4753  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  4754  0F32  036D               	decf	_bDark,w
  4755  0F33  1903               	btfsc	3,2
  4756  0F34  1C85               	btfss	5,1	;volatile
  4757  0F35  2F45               	goto	l2130
  4758  0F36  1907               	btfsc	7,2	;volatile
  4759  0F37  2F45               	goto	l2130
  4760                           
  4761                           ;functions.c: 311: {
  4762                           ;functions.c: 313: RC2 = 1;
  4763  0F38  1507               	bsf	7,2	;volatile
  4764                           
  4765                           ;functions.c: 315: timerFunction(0,120);
  4766  0F39  3000               	movlw	0
  4767  0F3A  00A0               	movwf	timerFunction@intTimerNumber
  4768  0F3B  00A1               	movwf	timerFunction@intTimerNumber+1
  4769  0F3C  3078               	movlw	120
  4770  0F3D  00A2               	movwf	timerFunction@intSetSeconds
  4771  0F3E  3000               	movlw	0
  4772  0F3F  00A3               	movwf	timerFunction@intSetSeconds+1
  4773  0F40  120A  158A  256A  120A  158A  	fcall	_timerFunction
  4774  0F45                     l2130:	
  4775                           
  4776                           ;functions.c: 316: }
  4777                           ;functions.c: 319: if(bTimerComplete[0])
  4778  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  4779  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  4780  0F47  0852               	movf	_bTimerComplete^(0+128),w
  4781  0F48  1903               	btfsc	3,2
  4782  0F49  0008               	return
  4783                           
  4784                           ;functions.c: 320: {
  4785                           ;functions.c: 321: DarknessCheck();
  4786  0F4A  120A  158A  2662  120A  158A  	fcall	_DarknessCheck
  4787                           
  4788                           ;functions.c: 322: if((bDark)&&(RA1))
  4789  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0F51  086D               	movf	_bDark,w
  4792  0F52  1D03               	btfss	3,2
  4793  0F53  1C85               	btfss	5,1	;volatile
  4794  0F54  2F60               	goto	l361
  4795                           
  4796                           ;functions.c: 323: {
  4797                           ;functions.c: 324: timerFunction(0,120);
  4798  0F55  3000               	movlw	0
  4799  0F56  00A0               	movwf	timerFunction@intTimerNumber
  4800  0F57  00A1               	movwf	timerFunction@intTimerNumber+1
  4801  0F58  3078               	movlw	120
  4802  0F59  00A2               	movwf	timerFunction@intSetSeconds
  4803  0F5A  3000               	movlw	0
  4804  0F5B  00A3               	movwf	timerFunction@intSetSeconds+1
  4805  0F5C  120A  158A  256A   	fcall	_timerFunction
  4806                           
  4807                           ;functions.c: 325: }
  4808  0F5F  0008               	return
  4809  0F60                     l361:	
  4810                           
  4811                           ;functions.c: 326: else
  4812                           ;functions.c: 327: RC2 = 0;
  4813  0F60  1107               	bcf	7,2	;volatile
  4814  0F61  0008               	return
  4815  0F62                     __end_of_LightWithSensController:	
  4816                           
  4817                           	psect	text27
  4818  0D6A                     __ptext27:	
  4819 ;; *************** function _timerFunction *****************
  4820 ;; Defined at:
  4821 ;;		line 352 in file "functions.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  intTimerNumb    2    0[BANK0 ] int 
  4824 ;;  intSetSecond    2    2[BANK0 ] int 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      unsigned char 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4836 ;;      Params:         0       4       0       0       0
  4837 ;;      Locals:         0       0       0       0       0
  4838 ;;      Temps:          0       1       0       0       0
  4839 ;;      Totals:         0       5       0       0       0
  4840 ;;Total ram usage:        5 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_TransiverToReceive
  4847 ;;		_TransiverReadFIFO
  4848 ;;		_TransmittPacket
  4849 ;;		_LightWithSensController
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           
  4854                           ;psect for function _timerFunction
  4855  0D6A                     _timerFunction:	
  4856                           
  4857                           ;functions.c: 354: intClockTimer[intTimerNumber] = intSetSeconds;
  4858                           
  4859                           ;incstack = 0
  4860                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  4861  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  4863  0D6C  0820               	movf	timerFunction@intTimerNumber,w
  4864  0D6D  00A4               	movwf	??_timerFunction
  4865  0D6E  0724               	addwf	??_timerFunction,w
  4866  0D6F  3EC8               	addlw	(low (_intClockTimer| 0))& (0+255)
  4867  0D70  0084               	movwf	4
  4868  0D71  0822               	movf	timerFunction@intSetSeconds,w
  4869  0D72  1383               	bcf	3,7	;select IRP bank1
  4870  0D73  0080               	movwf	0
  4871  0D74  0A84               	incf	4,f
  4872  0D75  0823               	movf	timerFunction@intSetSeconds+1,w
  4873  0D76  0080               	movwf	0
  4874                           
  4875                           ;functions.c: 355: bTimerComplete[intTimerNumber] = 0;
  4876  0D77  0820               	movf	timerFunction@intTimerNumber,w
  4877  0D78  3ED2               	addlw	(low (_bTimerComplete| 0))& (0+255)
  4878  0D79  0084               	movwf	4
  4879  0D7A  0180               	clrf	0
  4880  0D7B  0008               	return
  4881  0D7C                     __end_of_timerFunction:	
  4882                           ;functions.c: 356: return 1;
  4883                           ;	Return value of _timerFunction is never used
  4884                           
  4885                           
  4886                           	psect	text28
  4887  0E62                     __ptext28:	
  4888 ;; *************** function _DarknessCheck *****************
  4889 ;; Defined at:
  4890 ;;		line 881 in file "functions.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         0       1       0       0       0
  4906 ;;      Temps:          0       1       0       0       0
  4907 ;;      Totals:         0       2       0       0       0
  4908 ;;Total ram usage:        2 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    4
  4911 ;; This function calls:
  4912 ;;		_AnalogValue
  4913 ;;		_eeprom_read
  4914 ;; This function is called by:
  4915 ;;		_ReceivedPacketHandler
  4916 ;;		_Mode_1
  4917 ;;		_LightWithSensController
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function _DarknessCheck
  4923  0E62                     _DarknessCheck:	
  4924                           
  4925                           ;functions.c: 883: unsigned char darknessValue;
  4926                           ;functions.c: 884: RC0 = 0;
  4927                           
  4928                           ;incstack = 0
  4929                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  4930  0E62  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0E63  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0E64  1007               	bcf	7,0	;volatile
  4933                           
  4934                           ;functions.c: 886: if(bValueFromPot == TRUE)
  4935  0E65  036F               	decf	_bValueFromPot,w
  4936  0E66  1D03               	btfss	3,2
  4937  0E67  2E6F               	goto	l2002
  4938                           
  4939                           ;functions.c: 887: darknessValue= AnalogValue(3);
  4940  0E68  3003               	movlw	3
  4941  0E69  120A  158A  2639  120A  158A  	fcall	_AnalogValue
  4942  0E6E  2E77               	goto	L3
  4943  0E6F                     l2002:	
  4944                           
  4945                           ;functions.c: 888: else
  4946                           ;functions.c: 889: darknessValue=eeprom_read(addressDarknessValue);
  4947  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  4948  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  4949  0E71  0857               	movf	_addressDarknessValue^(0+128),w
  4950  0E72  120A  158A  2615  120A  158A  	fcall	_eeprom_read
  4951  0E77                     L3:	
  4952  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4953  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4954  0E79  00A8               	movwf	??_DarknessCheck
  4955  0E7A  0828               	movf	??_DarknessCheck,w
  4956  0E7B  00A9               	movwf	DarknessCheck@darknessValue
  4957                           
  4958                           ;functions.c: 891: if(AnalogValue(0)>darknessValue)
  4959  0E7C  3000               	movlw	0
  4960  0E7D  120A  158A  2639  120A  158A  	fcall	_AnalogValue
  4961  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0E84  0229               	subwf	DarknessCheck@darknessValue,w
  4964  0E85  1803               	skipnc
  4965  0E86  2E8A               	goto	l2006
  4966                           
  4967                           ;functions.c: 892: bDark = 1;
  4968  0E87  01ED               	clrf	_bDark
  4969  0E88  0AED               	incf	_bDark,f
  4970  0E89  2E8B               	goto	l2008
  4971  0E8A                     l2006:	
  4972                           
  4973                           ;functions.c: 893: else
  4974                           ;functions.c: 894: bDark = 0;
  4975  0E8A  01ED               	clrf	_bDark
  4976  0E8B                     l2008:	
  4977                           
  4978                           ;functions.c: 895: RC0 = 0;
  4979  0E8B  1007               	bcf	7,0	;volatile
  4980  0E8C  0008               	return
  4981  0E8D                     __end_of_DarknessCheck:	
  4982                           
  4983                           	psect	text29
  4984  0E15                     __ptext29:	
  4985 ;; *************** function _eeprom_read *****************
  4986 ;; Defined at:
  4987 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  addr            1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  addr            1    1[BANK0 ] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      unsigned char 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         0       0       0       0       0
  5002 ;;      Locals:         0       1       0       0       0
  5003 ;;      Temps:          0       1       0       0       0
  5004 ;;      Totals:         0       2       0       0       0
  5005 ;;Total ram usage:        2 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:    2
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_ReceivedPacketHandler
  5012 ;;		_DarknessCheck
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           
  5017                           ;psect for function _eeprom_read
  5018  0E15                     _eeprom_read:	
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5022                           ;eeprom_read@addr stored from wreg
  5023  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5024  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5025  0E17  00A1               	movwf	eeprom_read@addr
  5026  0E18  2E1B               	goto	l578
  5027  0E19                     u971:	
  5028  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  5030  0E1B                     l578:	
  5031  0E1B  0064               	clrwdt	;# 
  5032  0E1C  1683               	bsf	3,5	;RP0=1, select bank3
  5033  0E1D  1703               	bsf	3,6	;RP1=1, select bank3
  5034  0E1E  188C               	btfsc	12,1	;volsfr
  5035  0E1F  2E19               	goto	u971
  5036  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0E22  0821               	movf	eeprom_read@addr,w
  5039  0E23  1283               	bcf	3,5	;RP0=0, select bank2
  5040  0E24  1703               	bsf	3,6	;RP1=1, select bank2
  5041  0E25  008D               	movwf	13	;volatile
  5042  0E26  303F               	movlw	63
  5043  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  5044  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  5045  0E29  00A0               	movwf	??_eeprom_read
  5046  0E2A  0820               	movf	??_eeprom_read,w
  5047  0E2B  1683               	bsf	3,5	;RP0=1, select bank3
  5048  0E2C  1703               	bsf	3,6	;RP1=1, select bank3
  5049  0E2D  058C               	andwf	12,f	;volsfr
  5050  0E2E  140C               	bsf	12,0	;volsfr
  5051  0E2F  1003               	clrc
  5052  0E30  180C               	btfsc	12,0	;volsfr
  5053  0E31  1403               	setc
  5054  0E32  3000               	movlw	0
  5055  0E33  1803               	skipnc
  5056  0E34  3001               	movlw	1
  5057  0E35  1283               	bcf	3,5	;RP0=0, select bank2
  5058  0E36  1703               	bsf	3,6	;RP1=1, select bank2
  5059  0E37  080C               	movf	12,w	;volatile
  5060  0E38  0008               	return
  5061  0E39                     __end_of_eeprom_read:	
  5062                           
  5063                           	psect	text30
  5064  0E39                     __ptext30:	
  5065 ;; *************** function _AnalogValue *****************
  5066 ;; Defined at:
  5067 ;;		line 854 in file "functions.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  channel         1    wreg     unsigned char 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  channel         1    7[BANK0 ] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      unsigned char 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, pclath, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5081 ;;      Params:         0       0       0       0       0
  5082 ;;      Locals:         0       1       0       0       0
  5083 ;;      Temps:          0       1       0       0       0
  5084 ;;      Totals:         0       2       0       0       0
  5085 ;;Total ram usage:        2 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    3
  5088 ;; This function calls:
  5089 ;;		_DelayDs
  5090 ;; This function is called by:
  5091 ;;		_ReceivedPacketHandler
  5092 ;;		_DarknessCheck
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _AnalogValue
  5098  0E39                     _AnalogValue:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5102                           ;AnalogValue@channel stored from wreg
  5103  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  5104  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  5105  0E3B  00A7               	movwf	AnalogValue@channel
  5106                           
  5107                           ;functions.c: 856: ADCON0bits.CHS = channel;
  5108  0E3C  0827               	movf	AnalogValue@channel,w
  5109  0E3D  00A6               	movwf	??_AnalogValue
  5110  0E3E  0DA6               	rlf	??_AnalogValue,f
  5111  0E3F  0DA6               	rlf	??_AnalogValue,f
  5112  0E40  081F               	movf	31,w	;volatile
  5113  0E41  0626               	xorwf	??_AnalogValue,w
  5114  0E42  39C3               	andlw	-61
  5115  0E43  0626               	xorwf	??_AnalogValue,w
  5116  0E44  009F               	movwf	31	;volatile
  5117                           
  5118                           ;functions.c: 857: ADCON0bits.ADON = 1;
  5119  0E45  141F               	bsf	31,0	;volatile
  5120                           
  5121                           ;functions.c: 858: DelayDs(1);
  5122  0E46  3001               	movlw	1
  5123  0E47  00A0               	movwf	DelayDs@cnt
  5124  0E48  3000               	movlw	0
  5125  0E49  00A1               	movwf	DelayDs@cnt+1
  5126  0E4A  120A  158A  25F2  120A  158A  	fcall	_DelayDs
  5127                           
  5128                           ;functions.c: 859: ADCON0bits.GO = 1;
  5129  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  5130  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  5131  0E51  149F               	bsf	31,1	;volatile
  5132                           
  5133                           ;functions.c: 860: DelayDs(1);
  5134  0E52  3001               	movlw	1
  5135  0E53  00A0               	movwf	DelayDs@cnt
  5136  0E54  3000               	movlw	0
  5137  0E55  00A1               	movwf	DelayDs@cnt+1
  5138  0E56  120A  158A  25F2  120A  158A  	fcall	_DelayDs
  5139  0E5B                     l455:	
  5140                           ;functions.c: 861: while(ADCON0bits.GO);
  5141                           
  5142  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0E5D  189F               	btfsc	31,1	;volatile
  5145  0E5E  2E5B               	goto	l455
  5146                           
  5147                           ;functions.c: 862: ADCON0bits.ADON = 0;
  5148  0E5F  101F               	bcf	31,0	;volatile
  5149                           
  5150                           ;functions.c: 863: return ADRESH;
  5151  0E60  081E               	movf	30,w	;volatile
  5152  0E61  0008               	return
  5153  0E62                     __end_of_AnalogValue:	
  5154                           
  5155                           	psect	text31
  5156  0DF2                     __ptext31:	
  5157 ;; *************** function _DelayDs *****************
  5158 ;; Defined at:
  5159 ;;		line 469 in file "functions.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  cnt             2    0[BANK0 ] int 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  i               2    4[BANK0 ] int 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5173 ;;      Params:         0       2       0       0       0
  5174 ;;      Locals:         0       2       0       0       0
  5175 ;;      Temps:          0       2       0       0       0
  5176 ;;      Totals:         0       6       0       0       0
  5177 ;;Total ram usage:        6 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    2
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_ReceivedPacketHandler
  5184 ;;		_Blink
  5185 ;;		_AnalogValue
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function _DelayDs
  5191  0DF2                     _DelayDs:	
  5192                           
  5193                           ;functions.c: 470: int i;
  5194                           ;functions.c: 471: for(i=0;i<cnt;i++){
  5195                           
  5196                           ;incstack = 0
  5197                           ; Regs used in _DelayDs: [wreg+status,2]
  5198  0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  5199  0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  5200  0DF4  01A4               	clrf	DelayDs@i
  5201  0DF5  01A5               	clrf	DelayDs@i+1
  5202  0DF6                     l385:	
  5203  0DF6  0825               	movf	DelayDs@i+1,w
  5204  0DF7  3A80               	xorlw	128
  5205  0DF8  00A2               	movwf	??_DelayDs
  5206  0DF9  0821               	movf	DelayDs@cnt+1,w
  5207  0DFA  3A80               	xorlw	128
  5208  0DFB  0222               	subwf	??_DelayDs,w
  5209  0DFC  1D03               	skipz
  5210  0DFD  2E00               	goto	u915
  5211  0DFE  0820               	movf	DelayDs@cnt,w
  5212  0DFF  0224               	subwf	DelayDs@i,w
  5213  0E00                     u915:	
  5214  0E00  1803               	btfsc	3,0
  5215  0E01  0008               	return
  5216                           
  5217                           ;functions.c: 472: _delay((unsigned long)((100)*(4000000/4000.0)));
  5218  0E02  3082               	movlw	130
  5219  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5220  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5221  0E05  00A3               	movwf	??_DelayDs+1
  5222  0E06  30DD               	movlw	221
  5223  0E07  00A2               	movwf	??_DelayDs
  5224  0E08                     u1937:	
  5225  0E08  0BA2               	decfsz	??_DelayDs,f
  5226  0E09  2E08               	goto	u1937
  5227  0E0A  0BA3               	decfsz	??_DelayDs+1,f
  5228  0E0B  2E08               	goto	u1937
  5229  0E0C  3001               	movlw	1
  5230  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  5231  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  5232  0E0F  07A4               	addwf	DelayDs@i,f
  5233  0E10  1803               	skipnc
  5234  0E11  0AA5               	incf	DelayDs@i+1,f
  5235  0E12  3000               	movlw	0
  5236  0E13  07A5               	addwf	DelayDs@i+1,f
  5237  0E14  2DF6               	goto	l385
  5238  0E15                     __end_of_DelayDs:	
  5239                           
  5240                           	psect	text32
  5241  04B2                     __ptext32:	
  5242 ;; *************** function _tc_int *****************
  5243 ;; Defined at:
  5244 ;;		line 784 in file "functions.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5258 ;;      Params:         0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0
  5260 ;;      Temps:          7       0       0       0       0
  5261 ;;      Totals:         7       0       0       0       0
  5262 ;;Total ram usage:        7 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    1
  5265 ;; This function calls:
  5266 ;;		_TimerCounter
  5267 ;;		i1_OperationMode
  5268 ;; This function is called by:
  5269 ;;		Interrupt level 1
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function _tc_int
  5275  04B2                     _tc_int:	
  5276                           
  5277                           ;functions.c: 787: if((RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode() < 2)){
  5278  04B2  1A86               	btfsc	6,5	;volatile
  5279  04B3  2CCC               	goto	i1l2496
  5280  04B4  0869               	movf	_intBlinkCycle,w
  5281  04B5  046A               	iorwf	_intBlinkCycle+1,w
  5282  04B6  1D03               	btfss	3,2
  5283  04B7  2CCC               	goto	i1l2496
  5284  04B8  120A  158A  251C  120A  118A  	fcall	i1_OperationMode
  5285  04BD  00F5               	movwf	??_tc_int
  5286  04BE  3002               	movlw	2
  5287  04BF  0275               	subwf	??_tc_int,w
  5288  04C0  1803               	skipnc
  5289  04C1  2CCC               	goto	i1l2496
  5290                           
  5291                           ;functions.c: 788: intBlinkCycle = 1;
  5292  04C2  3001               	movlw	1
  5293  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5294  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5295  04C5  00E9               	movwf	_intBlinkCycle
  5296  04C6  3000               	movlw	0
  5297  04C7  00EA               	movwf	_intBlinkCycle+1
  5298                           
  5299                           ;functions.c: 789: intBlinkCounter = 0;
  5300  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  5301  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  5302  04CA  01DB               	clrf	_intBlinkCounter^(0+128)
  5303  04CB  01DC               	clrf	(_intBlinkCounter+1)^(0+128)
  5304  04CC                     i1l2496:	
  5305                           
  5306                           ;functions.c: 791: }
  5307                           ;functions.c: 792: if(TMR1IF ==1){
  5308  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  5309  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  5310  04CE  1C0C               	btfss	12,0	;volatile
  5311  04CF  2D71               	goto	L4
  5312                           
  5313                           ;functions.c: 793: TMR1ON = 0;
  5314  04D0  1010               	bcf	16,0	;volatile
  5315                           
  5316                           ;functions.c: 794: TMR1H = 0x0B;
  5317  04D1  300B               	movlw	11
  5318  04D2  008F               	movwf	15	;volatile
  5319                           
  5320                           ;functions.c: 795: TMR1L = 0xDB;
  5321  04D3  30DB               	movlw	219
  5322  04D4  008E               	movwf	14	;volatile
  5323                           
  5324                           ;functions.c: 797: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2)){
  5325  04D5  0369               	decf	_intBlinkCycle,w
  5326  04D6  046A               	iorwf	_intBlinkCycle+1,w
  5327  04D7  1D03               	btfss	3,2
  5328  04D8  2CFF               	goto	i1l2514
  5329  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  5330  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  5331  04DB  0864               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5332  04DC  00F6               	movwf	??_tc_int+1
  5333  04DD  0863               	movf	_intNumberOfBlinks^(0+128),w
  5334  04DE  00F5               	movwf	??_tc_int
  5335  04DF  1003               	clrc
  5336  04E0  0DF5               	rlf	??_tc_int,f
  5337  04E1  0DF6               	rlf	??_tc_int+1,f
  5338  04E2  085C               	movf	(_intBlinkCounter+1)^(0+128),w
  5339  04E3  3A80               	xorlw	128
  5340  04E4  00F7               	movwf	??_tc_int+2
  5341  04E5  0876               	movf	??_tc_int+1,w
  5342  04E6  3A80               	xorlw	128
  5343  04E7  0277               	subwf	??_tc_int+2,w
  5344  04E8  1D03               	skipz
  5345  04E9  2CEC               	goto	u170_25
  5346  04EA  0875               	movf	??_tc_int,w
  5347  04EB  025B               	subwf	_intBlinkCounter^(0+128),w
  5348  04EC                     u170_25:	
  5349  04EC  1803               	skipnc
  5350  04ED  2CFF               	goto	i1l2514
  5351                           
  5352                           ;functions.c: 798: intBlinkCounter++;
  5353  04EE  3001               	movlw	1
  5354  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  5355  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  5356  04F1  07DB               	addwf	_intBlinkCounter^(0+128),f
  5357  04F2  1803               	skipnc
  5358  04F3  0ADC               	incf	(_intBlinkCounter+1)^(0+128),f
  5359  04F4  3000               	movlw	0
  5360  04F5  07DC               	addwf	(_intBlinkCounter+1)^(0+128),f
  5361                           
  5362                           ;functions.c: 800: if(RC1 == 0)
  5363  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  5364  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  5365  04F8  1887               	btfsc	7,1	;volatile
  5366  04F9  2CFC               	goto	i1l444
  5367                           
  5368                           ;functions.c: 801: RC1 = 1;
  5369  04FA  1487               	bsf	7,1	;volatile
  5370  04FB  2D1F               	goto	i1l2522
  5371  04FC                     i1l444:	
  5372                           
  5373                           ;functions.c: 802: else if(RC1 == 1)
  5374  04FC  1C87               	btfss	7,1	;volatile
  5375  04FD  2D1F               	goto	i1l2522
  5376  04FE  2D1E               	goto	i1l2520
  5377  04FF                     i1l2514:	
  5378                           ;functions.c: 804: }
  5379                           
  5380                           ;functions.c: 803: RC1 = 0;
  5381                           
  5382                           
  5383                           ;functions.c: 806: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBlinks*2)
      +                          ){
  5384  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  5385  0500  1303               	bcf	3,6	;RP1=0, select bank0
  5386  0501  0369               	decf	_intBlinkCycle,w
  5387  0502  046A               	iorwf	_intBlinkCycle+1,w
  5388  0503  1D03               	btfss	3,2
  5389  0504  2D1F               	goto	i1l2522
  5390  0505  1683               	bsf	3,5	;RP0=1, select bank1
  5391  0506  1303               	bcf	3,6	;RP1=0, select bank1
  5392  0507  0864               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5393  0508  00F6               	movwf	??_tc_int+1
  5394  0509  0863               	movf	_intNumberOfBlinks^(0+128),w
  5395  050A  00F5               	movwf	??_tc_int
  5396  050B  1003               	clrc
  5397  050C  0DF5               	rlf	??_tc_int,f
  5398  050D  0DF6               	rlf	??_tc_int+1,f
  5399  050E  085C               	movf	(_intBlinkCounter+1)^(0+128),w
  5400  050F  3A80               	xorlw	128
  5401  0510  00F7               	movwf	??_tc_int+2
  5402  0511  0876               	movf	??_tc_int+1,w
  5403  0512  3A80               	xorlw	128
  5404  0513  0277               	subwf	??_tc_int+2,w
  5405  0514  1D03               	skipz
  5406  0515  2D18               	goto	u174_25
  5407  0516  0875               	movf	??_tc_int,w
  5408  0517  025B               	subwf	_intBlinkCounter^(0+128),w
  5409  0518                     u174_25:	
  5410  0518  1C03               	skipc
  5411  0519  2D1F               	goto	i1l2522
  5412                           
  5413                           ;functions.c: 807: intBlinkCycle = 0;
  5414  051A  1283               	bcf	3,5	;RP0=0, select bank0
  5415  051B  1303               	bcf	3,6	;RP1=0, select bank0
  5416  051C  01E9               	clrf	_intBlinkCycle
  5417  051D  01EA               	clrf	_intBlinkCycle+1
  5418  051E                     i1l2520:	
  5419                           
  5420                           ;functions.c: 808: RC1 = 0;
  5421  051E  1087               	bcf	7,1	;volatile
  5422  051F                     i1l2522:	
  5423                           
  5424                           ;functions.c: 809: }
  5425                           ;functions.c: 812: intHalfSecondCounter++;
  5426  051F  3001               	movlw	1
  5427  0520  1683               	bsf	3,5	;RP0=1, select bank1
  5428  0521  1303               	bcf	3,6	;RP1=0, select bank1
  5429  0522  07DF               	addwf	_intHalfSecondCounter^(0+128),f
  5430  0523  1803               	skipnc
  5431  0524  0AE0               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5432  0525  3000               	movlw	0
  5433  0526  07E0               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5434                           
  5435                           ;functions.c: 813: if(intHalfSecondCounter>=2)
  5436  0527  0860               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5437  0528  3A80               	xorlw	128
  5438  0529  00FF               	movwf	127
  5439  052A  3080               	movlw	128
  5440  052B  027F               	subwf	127,w
  5441  052C  1D03               	skipz
  5442  052D  2D30               	goto	u175_25
  5443  052E  3002               	movlw	2
  5444  052F  025F               	subwf	_intHalfSecondCounter^(0+128),w
  5445  0530                     u175_25:	
  5446  0530  1C03               	skipc
  5447  0531  2D43               	goto	i1l2532
  5448                           
  5449                           ;functions.c: 814: {
  5450                           ;functions.c: 815: intHalfSecondCounter = 0;
  5451  0532  1683               	bsf	3,5	;RP0=1, select bank1
  5452  0533  1303               	bcf	3,6	;RP1=0, select bank1
  5453  0534  01DF               	clrf	_intHalfSecondCounter^(0+128)
  5454  0535  01E0               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5455                           
  5456                           ;functions.c: 816: intSecondCounter++;
  5457  0536  3001               	movlw	1
  5458  0537  1283               	bcf	3,5	;RP0=0, select bank0
  5459  0538  1303               	bcf	3,6	;RP1=0, select bank0
  5460  0539  07EB               	addwf	_intSecondCounter,f
  5461  053A  1803               	skipnc
  5462  053B  0AEC               	incf	_intSecondCounter+1,f
  5463  053C  3000               	movlw	0
  5464  053D  07EC               	addwf	_intSecondCounter+1,f
  5465                           
  5466                           ;functions.c: 817: TimerCounter();
  5467  053E  120A  158A  2762  120A  118A  	fcall	_TimerCounter
  5468  0543                     i1l2532:	
  5469                           
  5470                           ;functions.c: 818: }
  5471                           ;functions.c: 819: if(intSecondCounter >=60)
  5472  0543  1283               	bcf	3,5	;RP0=0, select bank0
  5473  0544  1303               	bcf	3,6	;RP1=0, select bank0
  5474  0545  086C               	movf	_intSecondCounter+1,w
  5475  0546  3A80               	xorlw	128
  5476  0547  00FF               	movwf	127
  5477  0548  3080               	movlw	128
  5478  0549  027F               	subwf	127,w
  5479  054A  1D03               	skipz
  5480  054B  2D4E               	goto	u176_25
  5481  054C  303C               	movlw	60
  5482  054D  026B               	subwf	_intSecondCounter,w
  5483  054E                     u176_25:	
  5484  054E  1C03               	skipc
  5485  054F  2D5C               	goto	i1l2538
  5486                           
  5487                           ;functions.c: 820: {
  5488                           ;functions.c: 821: intSecondCounter = 0;
  5489  0550  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0551  1303               	bcf	3,6	;RP1=0, select bank0
  5491  0552  01EB               	clrf	_intSecondCounter
  5492  0553  01EC               	clrf	_intSecondCounter+1
  5493                           
  5494                           ;functions.c: 822: intMinuteCounter++;
  5495  0554  3001               	movlw	1
  5496  0555  1683               	bsf	3,5	;RP0=1, select bank1
  5497  0556  1303               	bcf	3,6	;RP1=0, select bank1
  5498  0557  07E1               	addwf	_intMinuteCounter^(0+128),f
  5499  0558  1803               	skipnc
  5500  0559  0AE2               	incf	(_intMinuteCounter+1)^(0+128),f
  5501  055A  3000               	movlw	0
  5502  055B  07E2               	addwf	(_intMinuteCounter+1)^(0+128),f
  5503  055C                     i1l2538:	
  5504                           
  5505                           ;functions.c: 823: }
  5506                           ;functions.c: 824: if(intMinuteCounter >= 60)
  5507  055C  1683               	bsf	3,5	;RP0=1, select bank1
  5508  055D  1303               	bcf	3,6	;RP1=0, select bank1
  5509  055E  0862               	movf	(_intMinuteCounter+1)^(0+128),w
  5510  055F  3A80               	xorlw	128
  5511  0560  00FF               	movwf	127
  5512  0561  3080               	movlw	128
  5513  0562  027F               	subwf	127,w
  5514  0563  1D03               	skipz
  5515  0564  2D67               	goto	u177_25
  5516  0565  303C               	movlw	60
  5517  0566  0261               	subwf	_intMinuteCounter^(0+128),w
  5518  0567                     u177_25:	
  5519  0567  1C03               	skipc
  5520  0568  2D6D               	goto	i1l2542
  5521                           
  5522                           ;functions.c: 825: {
  5523                           ;functions.c: 826: intMinuteCounter = 0;
  5524  0569  1683               	bsf	3,5	;RP0=1, select bank1
  5525  056A  1303               	bcf	3,6	;RP1=0, select bank1
  5526  056B  01E1               	clrf	_intMinuteCounter^(0+128)
  5527  056C  01E2               	clrf	(_intMinuteCounter+1)^(0+128)
  5528  056D                     i1l2542:	
  5529                           
  5530                           ;functions.c: 827: }
  5531                           ;functions.c: 830: TMR1ON = 1;
  5532  056D  1283               	bcf	3,5	;RP0=0, select bank0
  5533  056E  1303               	bcf	3,6	;RP1=0, select bank0
  5534  056F  1410               	bsf	16,0	;volatile
  5535                           
  5536                           ;functions.c: 831: }
  5537                           ;functions.c: 832: TMR1IF = 0;
  5538  0570  100C               	bcf	12,0	;volatile
  5539  0571                     L4:	
  5540                           
  5541                           ;functions.c: 833: RBIF = 0;
  5542  0571  100B               	bcf	11,0	;volatile
  5543                           
  5544                           ;functions.c: 834: GIE = 1;
  5545  0572  178B               	bsf	11,7	;volatile
  5546                           
  5547                           ;functions.c: 835: return;
  5548  0573  087B               	movf	??_tc_int+6,w
  5549  0574  00FF               	movwf	127
  5550  0575  087A               	movf	??_tc_int+5,w
  5551  0576  008A               	movwf	10
  5552  0577  0879               	movf	??_tc_int+4,w
  5553  0578  0084               	movwf	4
  5554  0579  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5555  057A  0083               	movwf	3
  5556  057B  0EFE               	swapf	126,f
  5557  057C  0E7E               	swapf	126,w
  5558  057D  0009               	retfie
  5559  057E                     __end_of_tc_int:	
  5560                           
  5561                           	psect	intentry
  5562  0004                     __pintentry:	
  5563                           ;incstack = 0
  5564 ;; hardware stack exceeded
  5565                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5566                           
  5567  0004                     interrupt_function:	
  5568  007E                     saved_w	set	btemp
  5569  0004  00FE               	movwf	btemp
  5570  0005  0E03               	swapf	3,w
  5571  0006  00F8               	movwf	??_tc_int+3
  5572  0007  0804               	movf	4,w
  5573  0008  00F9               	movwf	??_tc_int+4
  5574  0009  080A               	movf	10,w
  5575  000A  00FA               	movwf	??_tc_int+5
  5576  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5577  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5578  000D  087F               	movf	btemp+1,w
  5579  000E  00FB               	movwf	??_tc_int+6
  5580  000F  120A  118A  2CB2   	ljmp	_tc_int
  5581                           
  5582                           	psect	text33
  5583  0D1C                     __ptext33:	
  5584 ;; *************** function i1_OperationMode *****************
  5585 ;; Defined at:
  5586 ;;		line 915 in file "functions.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;		None
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  OperationMod    1    1[COMMON] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      unsigned char 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5600 ;;      Params:         0       0       0       0       0
  5601 ;;      Locals:         1       0       0       0       0
  5602 ;;      Temps:          1       0       0       0       0
  5603 ;;      Totals:         2       0       0       0       0
  5604 ;;Total ram usage:        2 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_tc_int
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function i1_OperationMode
  5615  0D1C                     i1_OperationMode:	
  5616                           
  5617                           ;functions.c: 917: unsigned char bracketStatus;
  5618                           ;functions.c: 918: bracketStatus = ((~PORTB) & 0b00000111) ;
  5619                           
  5620                           ;incstack = 0
  5621 ;; hardware stack exceeded
  5622                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5623  0D1C  1283               	bcf	3,5	;RP0=0, select bank0
  5624  0D1D  1303               	bcf	3,6	;RP1=0, select bank0
  5625  0D1E  0906               	comf	6,w	;volatile
  5626  0D1F  3907               	andlw	7
  5627  0D20  00F0               	movwf	??i1_OperationMode
  5628  0D21  0870               	movf	??i1_OperationMode,w
  5629  0D22  00F1               	movwf	i1OperationMode@bracketStatus
  5630                           
  5631                           ;functions.c: 920: return 6;
  5632  0D23  3006               	movlw	6
  5633  0D24  0008               	return
  5634  0D25                     __end_ofi1_OperationMode:	
  5635                           
  5636                           	psect	text34
  5637  0F62                     __ptext34:	
  5638 ;; *************** function _TimerCounter *****************
  5639 ;; Defined at:
  5640 ;;		line 374 in file "functions.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  i               2    3[COMMON] int 
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5654 ;;      Params:         0       0       0       0       0
  5655 ;;      Locals:         2       0       0       0       0
  5656 ;;      Temps:          3       0       0       0       0
  5657 ;;      Totals:         5       0       0       0       0
  5658 ;;Total ram usage:        5 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_tc_int
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667                           
  5668                           ;psect for function _TimerCounter
  5669  0F62                     _TimerCounter:	
  5670                           
  5671                           ;functions.c: 376: for (int i = 0; i < 5; i++)
  5672                           
  5673                           ;incstack = 0
  5674 ;; hardware stack exceeded
  5675                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5676  0F62  01F3               	clrf	TimerCounter@i
  5677  0F63  01F4               	clrf	TimerCounter@i+1
  5678  0F64                     L5:	
  5679  0F64  0874               	movf	TimerCounter@i+1,w
  5680  0F65  3A80               	xorlw	128
  5681  0F66  00FF               	movwf	127
  5682  0F67  3080               	movlw	128
  5683  0F68  027F               	subwf	127,w
  5684  0F69  1D03               	skipz
  5685  0F6A  2F6D               	goto	u148_25
  5686  0F6B  3005               	movlw	5
  5687  0F6C  0273               	subwf	TimerCounter@i,w
  5688  0F6D                     u148_25:	
  5689  0F6D  1803               	btfsc	3,0
  5690  0F6E  0008               	return
  5691                           
  5692                           ;functions.c: 377: {
  5693                           ;functions.c: 378: if(intClockTimer[i]>0)
  5694  0F6F  0873               	movf	TimerCounter@i,w
  5695  0F70  00F0               	movwf	??_TimerCounter
  5696  0F71  0770               	addwf	??_TimerCounter,w
  5697  0F72  3EC8               	addlw	(low (_intClockTimer| 0))& (0+255)
  5698  0F73  0084               	movwf	4
  5699  0F74  1383               	bcf	3,7	;select IRP bank1
  5700  0F75  0800               	movf	0,w
  5701  0F76  00F1               	movwf	??_TimerCounter+1
  5702  0F77  0A84               	incf	4,f
  5703  0F78  0800               	movf	0,w
  5704  0F79  00F2               	movwf	??_TimerCounter+2
  5705  0F7A  0872               	movf	??_TimerCounter+2,w
  5706  0F7B  3A80               	xorlw	128
  5707  0F7C  00FF               	movwf	127
  5708  0F7D  3080               	movlw	128
  5709  0F7E  027F               	subwf	127,w
  5710  0F7F  1D03               	skipz
  5711  0F80  2F83               	goto	u149_25
  5712  0F81  3001               	movlw	1
  5713  0F82  0271               	subwf	??_TimerCounter+1,w
  5714  0F83                     u149_25:	
  5715  0F83  1C03               	skipc
  5716  0F84  2F97               	goto	i1l2402
  5717                           
  5718                           ;functions.c: 379: intClockTimer[i]--;
  5719  0F85  0873               	movf	TimerCounter@i,w
  5720  0F86  00F0               	movwf	??_TimerCounter
  5721  0F87  0770               	addwf	??_TimerCounter,w
  5722  0F88  3EC8               	addlw	(low (_intClockTimer| 0))& (0+255)
  5723  0F89  0084               	movwf	4
  5724  0F8A  30FF               	movlw	255
  5725  0F8B  1383               	bcf	3,7	;select IRP bank1
  5726  0F8C  0780               	addwf	0,f
  5727  0F8D  0F84               	incfsz	4,f
  5728  0F8E  0800               	movf	0,w
  5729  0F8F  1803               	skipnc
  5730  0F90  0A00               	incf	0,w
  5731  0F91  00FF               	movwf	127
  5732  0F92  30FF               	movlw	255
  5733  0F93  077F               	addwf	127,w
  5734  0F94  0080               	movwf	0
  5735  0F95  0384               	decf	4,f
  5736  0F96  2F9D               	goto	i1l2404
  5737  0F97                     i1l2402:	
  5738                           
  5739                           ;functions.c: 380: else
  5740                           ;functions.c: 381: bTimerComplete[i] = 1;
  5741  0F97  0873               	movf	TimerCounter@i,w
  5742  0F98  3ED2               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5743  0F99  0084               	movwf	4
  5744  0F9A  1383               	bcf	3,7	;select IRP bank1
  5745  0F9B  0180               	clrf	0
  5746  0F9C  0A80               	incf	0,f
  5747  0F9D                     i1l2404:	
  5748  0F9D  3001               	movlw	1
  5749  0F9E  07F3               	addwf	TimerCounter@i,f
  5750  0F9F  1803               	skipnc
  5751  0FA0  0AF4               	incf	TimerCounter@i+1,f
  5752  0FA1  3000               	movlw	0
  5753  0FA2  07F4               	addwf	TimerCounter@i+1,f
  5754  0FA3  2F64               	goto	L5
  5755  0FA4                     __end_of_TimerCounter:	
  5756  007E                     btemp	set	126	;btemp
  5757  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    39
    Data        3
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     73      80
    BANK1            80      0      69
    BANK3            96      0      95
    BANK2            96      0      95

Pointer List with Targets:

    read_write_flash_ram@mem_ptr	PTR unsigned char  size(2) Largest target is 95
		 -> var2(BANK3[95]), main@value(BANK0[1]), 

    ReceivedPacketHandler@Data	PTR unsigned char  size(1) Largest target is 30
		 -> TransiverReadFIFO@ReceivedString(BANK0[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _write_ram_status->_read_ram_status
    _read_write_flash_ram->_read_ram_status
    _ram_sector_erase->_read_ram_status
    _read_ram_status->_WriteSPI
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_ReceivedPacketHandler
    _ReceivedPacketHandler->_TransmittPacket
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittPacket
    _Mode_4->_TransmittPacket
    _TransmittPacket->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   67369
                                             65 BANK0      8     8      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
                   _ram_sector_erase
                    _read_ram_status
               _read_write_flash_ram
                   _write_ram_status
 ---------------------------------------------------------------------------------
 (1) _write_ram_status                                     1     1      0     114
                                              5 BANK0      1     1      0
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (1) _read_write_flash_ram                                13     6      7    1639
                                              5 BANK0     13     6      7
                            _ReadSPI
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (1) _ram_sector_erase                                     1     1      0     114
                                              5 BANK0      1     1      0
                           _WriteSPI
                    _read_ram_status
 ---------------------------------------------------------------------------------
 (2) _read_ram_status                                      2     2      0      69
                                              3 BANK0      2     2      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                   36    36      0   16690
                                             29 BANK0     36    36      0
                           _ReadFIFO
              _ReceivedPacketHandler
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _ReceivedPacketHandler                                2     2      0   13442
                                             27 BANK0      2     2      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittPacket
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0       1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   10167
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     924
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               1     1      0   12203
                                             27 BANK0      1     1      0
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   12203
            _LightWithSensController
                    _TransmittPacket
 ---------------------------------------------------------------------------------
 (3) _TransmittPacket                                      6     5      1   10615
                                             21 BANK0      6     5      1
                        _AnalogValue (ARG)
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                        _eeprom_read (ARG)
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1588
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     882
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1588
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1588
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     882
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     836
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     814
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     113
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittPacket
       _AnalogValue (ARG)
         _DelayDs
       _FindChannel (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO (ARG)
         _WriteSPI
       _eeprom_read (ARG)
       _timerFunction (ARG)
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _ReceivedPacketHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittPacket
         _AnalogValue (ARG)
           _DelayDs
         _FindChannel (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet (ARG)
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode (ARG)
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO (ARG)
           _WriteSPI
         _eeprom_read (ARG)
         _timerFunction (ARG)
       _eeprom_read
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init
   _ram_sector_erase
     _WriteSPI
     _read_ram_status
       _ReadSPI
         _WriteSPI
       _WriteSPI
   _read_ram_status
     _ReadSPI
       _WriteSPI
     _WriteSPI
   _read_write_flash_ram
     _ReadSPI
       _WriteSPI
     _WriteSPI
     _read_ram_status
       _ReadSPI
         _WriteSPI
       _WriteSPI
   _write_ram_status
     _WriteSPI
     _read_ram_status
       _ReadSPI
         _WriteSPI
       _WriteSPI

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      5F      11       99.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      45       7       86.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     160      12        0.0%
ABS                  0      0     160       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Jan 12 20:40:30 2017

                             __CFG_CP$ON 0000                   ram_sector_erase@sector 0025  
               __size_of_read_ram_status 0014                                        pc 0002  
             __size_of_TransiverReadFIFO 0067                    _bTransiverModeReceive 006E  
                            _SSPSTATbits 0094                                       l87 026C  
                                     _RD 0C60                              __CFG_CPD$ON 0000  
                                     _WR 0C61                                       fsr 0004  
          __size_of_read_write_flash_ram 008F                                      l342 0D3C  
                                    l326 060E                                      l415 0727  
                                    l361 0F60                                      l337 0DBA  
                                    l292 01A3                                      l455 0E5B  
                                    l391 0D48                                      l296 0060  
                                    l376 07B9                                      l385 0DF6  
                                    l298 0075                                      l299 008A  
                                    l379 07BF                                      l549 06A2  
                                    l578 0E1B                                      _GIE 005F  
                                    _RA1 0029                                      _RB1 0031  
                                    _RC0 0038                                      _RB2 0032  
                                    _RA4 002C                                      _RC1 0039  
                                    _RA5 002D                                      _RD0 0040  
                                    _RC2 003A                                      _RB4 0034  
                                    _RB5 0035                                      _RD3 0043  
                                    _RD4 0044                                      u915 0E00  
                                    u925 02EC                                      u945 0387  
                                    u971 0E19                                      u955 03C4  
                  __end_of_DarknessCheck 0E8D                                      fsr0 0004  
                                    indf 0000                         TransmittPacket@i 0038  
                    __end_of_FindChannel 03C8                          ??_timerFunction 0024  
                      ?_ram_sector_erase 0070                             __CFG_LVP$OFF 0000  
                     ??_ram_sector_erase 0025                                     l2002 0E6F  
                                   l2006 0E8A                                     l2008 0E8B  
                                   l2120 0F30                                     l2112 0187  
                                   l2130 0F45                                     l2050 00B1  
                                   l2108 017C                                     l2060 00D4  
                                   l2300 0665                                     l2070 00FA  
                                   l2048 009F                                     l2082 012C  
                                   l2306 06AB                                     l2316 0DAF  
                                   l2332 0D66                                     l2148 0EBF  
                                   l2244 04AD                                     l2076 0113  
                                   l2260 0EB0                                     l2096 015A  
                                   l2088 0147                                     l2352 0FDB  
                                   l2338 0D8A                                     l2098 0162  
                                   l2354 0FEE                                     l2274 0F1A  
                                   l2282 0636                                     l2426 01D2  
                                   l2460 027D                                     l2452 024F  
                                   l2444 022D                                     l2436 0200  
                                   l1910 03B3                                     l2382 0774  
                                   l2296 0687                                     l2480 02BB  
                                   l2472 02A4                                     l2464 028A  
                                   l2456 0270                                     l1906 03A2  
                                   l1914 03C6                                     l2386 077D  
                                   l2378 0760                                     l2298 0699  
                                   l1860 06D9                                     l1908 037C  
                                   l2476 02B1                                     l2468 0297  
                                   l1862 06E8                                     l1870 0714  
                                   l1864 06F7                                     l1866 0706  
                                   l1858 06CC                                     l1890 02EE  
                                   l1964 05BA                                     l1990 0617  
                                   l1966 05CD              __size_of_TransiverToReceive 005C  
                                   u1255 0EC9                                     u1335 066B  
                                   u1445 0750                                     u1525 01FE  
                                   u1535 022B                                     u1545 024D  
                                   u1555 026A                                     u1807 01CB  
                                   u1817 0255                                     u1907 0628  
                                   u1827 06A7                                     u1917 02D9  
                                   u1837 06B7                                     u1927 03AE  
                                   u1847 0FBF                                     u1937 0E08  
                                   u1857 0FF8                                     u1867 0783  
                                   u1877 059E                                     u1797 01B9  
                                   u1887 05D7                                     _RBIF 0058  
                                   u1897 061B                                     _main 01A4  
                                   _init 0792                                     _var1 0110  
                                   _var2 0190                                     btemp 007E  
                                   start 0012                            __CFG_IESO$OFF 0000  
                        __end_of_DelayDs 0E15         __size_of_LightWithSensController 003F  
                        __end_of_ReadSPI 0D14                                    ?_main 0070  
                                  ?_init 0070                                    _EEADR 010D  
                          __CFG_WDTE$OFF 0000                                    _ANSEL 0188  
                  __end_of_OperationMode 0800                                    _T1CON 0010  
                         __CFG_DEBUG$OFF 0000                                    i1l444 04FC  
                                  _TMR1H 000F                                    _TMR1L 000E  
                                  _PORTA 0005                                    _PORTB 0006  
                                  _PORTC 0007                                    _PORTD 0008  
                                  _PORTE 0009                                    _TRISA 0085  
                                  _TRISB 0086                                    _TRISC 0087  
                                  _TRISD 0088                                    _SSPIE 0463  
                                  _TRISE 0089                    read_write_flash_ram@i 0030  
                                  _Blink 0EB9                                    _bDark 006D  
                         __CFG_FCMEN$OFF 0000                  ??_ReceivedPacketHandler 003B  
                            _AnalogValue 0E39                                    main@i 0067  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
                        ??_TransiverInit 0035                                    status 0003  
                          _intBlinkCycle 0069                                    wtemp0 007E  
                         WriteSPI@buffer 0021                         __end_of_ChannelP 0813  
                       __end_of_ChannelR 0820                         __end_of_ChannelS 082D  
                         __CFG_MCLRE$OFF 0000                            _intClockTimer 00C8  
                      _intNumberOfBlinks 00E3                          __initialization 0015  
                           __end_of_main 02C8                             __end_of_init 07F7  
                       __end_of_ReadFIFO 0D5A                            ReadFIFO@value 0024  
                            _FindChannel 02C8                            ??_RegisterSet 0028  
                                 ??_main 0061                                   ??_init 0020  
                      ??_read_ram_status 0023                                   ?_Blink 0026  
                                 _ADRESH 001E                                   _EEDATA 010C  
                                 _EECON1 018C                                   _ANSELH 0189  
                       __end_of_WriteSPI 0D4C                                   i1l2402 0F97  
                                 i1l2404 0F9D                                   i1l2520 051E  
                                 i1l2522 051F                                   i1l2514 04FF  
                                 i1l2532 0543                                   i1l2542 056D  
                                 i1l2538 055C                                   i1l2496 04CC  
                                 u170_25 04EC                                   u148_25 0F6D  
                              ??_DelayDs 0022                                   u149_25 0F83  
                                 u174_25 0518                                   u175_25 0530  
                                 u176_25 054E                                   Blink@i 0029  
                                 Blink@n 0026                                   u177_25 0567  
                       _write_ram_status 0E8D                                   _TMR1IF 0060  
                                 _TMR1ON 0080             i1OperationMode@bracketStatus 0071  
                                 _SSPBUF 0013                                ??_ReadSPI 0023  
                         __CFG_PWRTE$OFF 0000                                   _Mode_0 0D08  
                                 _Mode_1 0DA2                                   _Mode_2 0D31  
                                 _Mode_4 0D5A                                   _Mode_5 0D7C  
                     __size_of_SetRFMode 006F                     __size_of_eeprom_read 0024  
        TransiverReadFIFO@ReceivedString 003F                                   _tc_int 04B2  
                                 saved_w 007E                      __end_of_RegisterSet 0DD6  
                          ?_RegisterRead 0070                       RegisterRead@adress 0026  
                     __size_of_WriteFIFO 000C                  __end_of__initialization 004A  
                        eeprom_read@addr 0021                  _LightWithSensController 0F23  
                          _bChannelFound 007C                            __end_of_Blink 0EEC  
                         __pcstackCOMMON 0070                             __pidataBANK0 0003  
                           __pidataBANK1 0D06                             _channelFound 00D9  
                         _OPTION_REGbits 0081                                  ??_Blink 0028  
                      __end_of_SetRFMode 072B                           ??_RegisterRead 0023  
                             __pbssBANK0 0069                               __pbssBANK1 00A0  
                             __pbssBANK2 0110                               __pbssBANK3 0190  
               __size_ofi1_OperationMode 0009                                ?_ReadFIFO 0070  
             timerFunction@intSetSeconds 0022                       AnalogValue@channel 0027  
           __end_of_read_write_flash_ram 06BC                 __size_of_TransmittPacket 00AF  
                                ?_Mode_0 0070                                  ?_Mode_1 0070  
                                ?_Mode_2 0070                                  ?_Mode_4 0070  
                                ?_Mode_5 0070                __size_of_ram_sector_erase 0037  
                             __pmaintext 01A4                               __pintentry 0004  
                                ?_tc_int 0070                                ?_WriteSPI 0070  
                      __end_of_WriteFIFO 0D31                              _RegisterSet 0DBC  
                          ?_TimerCounter 0070               __end_of_TransiverToReceive 1000  
                  __end_of_timerFunction 0D7C                             ?_AnalogValue 0070  
                             __stringtab 0800                               ??_ReadFIFO 0023  
         __size_of_ReceivedPacketHandler 0156            __end_of_ReceivedPacketHandler 01A4  
                                _DelayDs 0DF2                ??_LightWithSensController 002A  
                                _ReadSPI 0D0C                   __size_of_DarknessCheck 002B  
                        __size_of_Mode_0 0004                          __size_of_Mode_1 001A  
                        __size_of_Mode_2 000D                          __size_of_Mode_4 0010  
                        __size_of_Mode_5 0012               OperationMode@bracketStatus 0021  
                        _read_ram_status 0D8E                    read_ram_status@status 0024  
                           ?_FindChannel 0070                                _ANSELbits 0188  
               __end_of_write_ram_status 0EB9                               ??_WriteSPI 0020  
                        __size_of_tc_int 00CC                                  __ptext1 0E8D  
                                __ptext2 062D                                  __ptext3 0EEC  
                                __ptext4 0D8E                                  __ptext5 0792  
                                __ptext6 0FA4                                  __ptext7 072B  
                                __ptext8 004E                                  __ptext9 07F7  
                              _T1CONbits 0010                           ??_TimerCounter 0070  
read_write_flash_ram@one_read_zero_write 002F                                  clrloop0 0D15  
                   end_of_initialization 004A                    __end_of_TransiverInit 04B2  
                   TransmittPacket@value 0035                     TransmittPacket@topic 003A  
                 __size_of_OperationMode 0009                        ??i1_OperationMode 0070  
                       WriteSPI@databyte 0022                     __end_of_RegisterRead 0DF2  
                      ??_TransmittPacket 0036                            WriteFIFO@Data 0023  
                        _intBlinkCounter 00DB                     _read_write_flash_ram 062D  
                          _DarknessCheck 0E62                  __end_of_read_ram_status 0DA2  
                          ??_eeprom_read 0020                         _ram_sector_erase 0EEC  
                         __end_of_Mode_0 0D0C                           __end_of_Mode_1 0DBC  
                         __end_of_Mode_2 0D3E                           __end_of_Mode_4 0D6A  
                         __end_of_Mode_5 0D8E                    ?_read_write_flash_ram 0025  
                         __end_of_tc_int 057E                           ?_DarknessCheck 0070  
                          _OperationMode 07F7                      start_initialization 0015  
                  _intDarkCheckIntervall 00DD               DarknessCheck@darknessValue 0029  
                              _SetRFMode 06BC                     __size_of_AnalogValue 0029  
                      __size_of_ReadFIFO 000E                 __CFG_FOSC$INTRC_NOCLKOUT 0000  
                               ??_Mode_0 002A                                 ??_Mode_1 002A  
                               ??_Mode_2 002A                                 ??_Mode_4 003B  
                               ??_Mode_5 003B                     __end_of_TimerCounter 0FA4  
                    __end_of_eeprom_read 0E39                            TimerCounter@i 0073  
                            __pdataBANK0 006F                              __pdataBANK1 00E3  
                               ??_tc_int 0075                             ?_RegisterSet 0027  
                         ?_OperationMode 0070                     __size_of_FindChannel 0100  
            read_write_flash_ram@mem_ptr 002A                        RegisterRead@value 0025  
                      __size_of_WriteSPI 000E                              __pbssCOMMON 007C  
                              ___latbits 0002                                _WriteFIFO 0D25  
                          __pcstackBANK0 0020                             _ReceivedData 00A0  
                 SetRFMode@mcparam0_read 002D                               ?_SetRFMode 0070  
                               ?_DelayDs 0020                        RegisterSet@adress 002A  
                       ?_read_ram_status 0070                   write_ram_status@status 0025  
                               ?_ReadSPI 0070                    __size_of_RegisterRead 001C  
                     _TransiverToReceive 0FA4                      ?_TransiverToReceive 0070  
                 ??_read_write_flash_ram 002C                          ??_DarknessCheck 0028  
                              __pstrings 0800                        ?_write_ram_status 0070  
            timerFunction@intTimerNumber 0020                       ??_write_ram_status 0025  
                         __size_of_Blink 0033                               ?_WriteFIFO 0070  
                        i1_OperationMode 0D1C                     ??_TransiverToReceive 0035  
                           _RegisterRead 0DD6                          _TransmittPacket 057E  
                      interrupt_function 0004                                 _IOCBbits 0096  
                               DelayDs@i 0024                             FindChannel@i 0033  
                  _ReceivedPacketHandler 004E                                clear_ram0 0D14  
                            _eeprom_read 0E15                                 _PIE1bits 008C  
                               _PIR1bits 000C                   __size_of_timerFunction 0012  
                        ??_OperationMode 0020                            SetRFMode@mode 002C  
                             _ADCON0bits 001F                              __stringbase 0805  
                             _ADCON1bits 009F                                main@i_119 0065  
                               _WPUBbits 0095                                 _ChannelP 0806  
                               _ChannelR 0813                                 _ChannelS 0820  
               __end_of_ram_sector_erase 0F23                                main@value 0064  
               ?_LightWithSensController 0070                              ??_SetRFMode 002B  
                               _ReadFIFO 0D4C                    __size_of_TimerCounter 0042  
                       __size_of_DelayDs 0023         read_write_flash_ram@flash_sector 0027  
                       __size_of_ReadSPI 0008                           _bTimerComplete 00D2  
                       _intMinuteCounter 00E1               read_write_flash_ram@offset 0029  
                      _TransiverReadFIFO 072B                                 _WriteSPI 0D3E  
                     __end_of__stringtab 0806                         _intSecondCounter 006B  
                     ?_TransiverReadFIFO 0070                               _ANSELHbits 0189  
                __end_ofi1_OperationMode 0D25                   __size_of_TransiverInit 00EA  
                   __size_of_RegisterSet 001A                         RegisterSet@value 0027  
                            ??_WriteFIFO 0023                  __end_of_TransmittPacket 062D  
                           _TimerCounter 0F62                                 __ptext10 0D4C  
                               __ptext11 03C8                                 __ptext20 0DD6  
                               __ptext12 0EB9                                 __ptext21 0D0C  
                               __ptext13 0D7C                                 __ptext30 0E39  
                               __ptext22 0D3E                                 __ptext14 0D5A  
                               __ptext31 0DF2                                 __ptext23 0D31  
                               __ptext15 057E                                 __ptext32 04B2  
                               __ptext24 0DA2                                 __ptext16 0D25  
                               __ptext33 0D1C                                 __ptext25 0D08  
                               __ptext17 02C8                                 __ptext34 0F62  
                               __ptext26 0F23                                 __ptext18 06BC  
                               __ptext27 0D6A                                 __ptext19 0DBC  
                               __ptext28 0E62                                 __ptext29 0E15  
                    ??_TransiverReadFIFO 003D                            _timerFunction 0D6A  
                 ?_ReceivedPacketHandler 0070                            __size_of_main 0124  
                          __size_of_init 0065                            _bValueFromPot 006F  
              __end_of_TransiverReadFIFO 0792                               DelayDs@cnt 0020  
                         FindChannel@cnt 0031          __end_of_LightWithSensController 0F62  
                   _intHalfSecondCounter 00DF                               _INTCONbits 000B  
         read_write_flash_ram@flash_page 0028                       TransiverReadFIFO@i 005D  
                     TransiverReadFIFO@j 005F                           ?_timerFunction 0020  
                          ??_AnalogValue 0026                                 intlevel1 0000  
                          _TransiverInit 03C8   read_write_flash_ram@bytes_to_readwrite 0025  
                              stringcode 0800                               _OSCCONbits 008F  
                          ??_FindChannel 002E                         ?i1_OperationMode 0070  
                               stringdir 0800                                 stringtab 0800  
                       ?_TransmittPacket 0035                ReceivedPacketHandler@Data 003C  
              __size_of_write_ram_status 002C                           ?_TransiverInit 0070  
                           ?_eeprom_read 0070                      __end_of_AnalogValue 0E62  
                             _SSPCONbits 0014                     _addressDarknessValue 00D7  
